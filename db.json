{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/jpa_hibernate_relationship.png","path":"images/jpa_hibernate_relationship.png","modified":1,"renderable":0},{"_id":"source/images/jvm_stack_01.gif","path":"images/jvm_stack_01.gif","modified":1,"renderable":0},{"_id":"source/images/security-interception.png","path":"images/security-interception.png","modified":1,"renderable":0},{"_id":"themes/melody/source/melody-favicon.ico","path":"melody-favicon.ico","modified":1,"renderable":1},{"_id":"source/images/Spring_Bean_Name_Aware.png","path":"images/Spring_Bean_Name_Aware.png","modified":1,"renderable":0},{"_id":"themes/melody/source/js/hexo-theme-melody.js","path":"js/hexo-theme-melody.js","modified":1,"renderable":1},{"_id":"source/images/application-argument/CommandLineArgs.png","path":"images/application-argument/CommandLineArgs.png","modified":1,"renderable":0},{"_id":"source/images/application-argument/SimpleCommandLineProperty.png","path":"images/application-argument/SimpleCommandLineProperty.png","modified":1,"renderable":0},{"_id":"source/images/application-argument/DefaultApplicationArguments.png","path":"images/application-argument/DefaultApplicationArguments.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/paintedAPI_4.png","path":"images/next-generation-web-styling/paintedAPI_4.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/property_value_3.png","path":"images/next-generation-web-styling/property_value_3.png","modified":1,"renderable":0},{"_id":"themes/melody/source/js/copy.js","path":"js/copy.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/fireworks.js","path":"js/fireworks.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/head.js","path":"js/head.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/katex.js","path":"js/katex.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/scroll.js","path":"js/scroll.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/transition.js","path":"js/transition.js","modified":1,"renderable":1},{"_id":"themes/melody/source/css/404.styl","path":"css/404.styl","modified":1,"renderable":1},{"_id":"themes/melody/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/melody/source/img/algolia.svg","path":"img/algolia.svg","modified":1,"renderable":1},{"_id":"themes/melody/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/melody/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"source/images/adaptiveLoading/adaptiveLoading_5.png","path":"images/adaptiveLoading/adaptiveLoading_5.png","modified":1,"renderable":0},{"_id":"source/images/adaptiveLoading/adaptiveLoading_4.png","path":"images/adaptiveLoading/adaptiveLoading_4.png","modified":1,"renderable":0},{"_id":"source/images/adaptiveLoading/adaptiveLoading_2.png","path":"images/adaptiveLoading/adaptiveLoading_2.png","modified":1,"renderable":0},{"_id":"source/images/adaptiveLoading/adaptiveLoading_3.png","path":"images/adaptiveLoading/adaptiveLoading_3.png","modified":1,"renderable":0},{"_id":"source/images/adaptiveLoading/adaptiveLoading_6.png","path":"images/adaptiveLoading/adaptiveLoading_6.png","modified":1,"renderable":0},{"_id":"source/images/adaptiveLoading/adaptiveLoading_7.png","path":"images/adaptiveLoading/adaptiveLoading_7.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/animation_worklet_1.png","path":"images/next-generation-web-styling/animation_worklet_1.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/localproperty_1.png","path":"images/next-generation-web-styling/localproperty_1.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/localproperty_4.png","path":"images/next-generation-web-styling/localproperty_4.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/paintedAPI_2.png","path":"images/next-generation-web-styling/paintedAPI_2.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/paintedAPI_3.png","path":"images/next-generation-web-styling/paintedAPI_3.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/property_value_2.png","path":"images/next-generation-web-styling/property_value_2.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/typedOM_1.png","path":"images/next-generation-web-styling/typedOM_1.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/worklet_1.png","path":"images/next-generation-web-styling/worklet_1.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/MAC-then-Encrypt.png","path":"images/cryptography/mac/MAC-then-Encrypt.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/encrypt-and-mac.png","path":"images/cryptography/mac/encrypt-and-mac.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/encrypt-then-mac.png","path":"images/cryptography/mac/encrypt-then-mac.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/ssl.png","path":"images/cryptography/mac/ssl.png","modified":1,"renderable":0},{"_id":"source/images/java/stream/fork_join_queue.jpg","path":"images/java/stream/fork_join_queue.jpg","modified":1,"renderable":0},{"_id":"source/images/java/stream/fork_join.jpg","path":"images/java/stream/fork_join.jpg","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/houdini_1.png","path":"images/next-generation-web-styling/houdini_1.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/houdini_2.png","path":"images/next-generation-web-styling/houdini_2.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/localproperty_2.png","path":"images/next-generation-web-styling/localproperty_2.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/localproperty_3.png","path":"images/next-generation-web-styling/localproperty_3.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/paintedAPI_1.png","path":"images/next-generation-web-styling/paintedAPI_1.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/prefer_1.png","path":"images/next-generation-web-styling/prefer_1.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/prefer_2.png","path":"images/next-generation-web-styling/prefer_2.png","modified":1,"renderable":0},{"_id":"source/images/next-generation-web-styling/property_value_1.png","path":"images/next-generation-web-styling/property_value_1.png","modified":1,"renderable":0},{"_id":"source/images/springboot/applicationContext/annotated_bean_definition_reader.png","path":"images/springboot/applicationContext/annotated_bean_definition_reader.png","modified":1,"renderable":0},{"_id":"source/images/springboot/eventpublishinglistener/eventpublisingrunlistener.png","path":"images/springboot/eventpublishinglistener/eventpublisingrunlistener.png","modified":1,"renderable":0},{"_id":"source/images/springboot/applicationContext/annotation_config_servlet_application_context_class_diagram.png","path":"images/springboot/applicationContext/annotation_config_servlet_application_context_class_diagram.png","modified":1,"renderable":0},{"_id":"themes/melody/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/canvas-ribbon.js","path":"js/third-party/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/jquery.fancybox.min.js","path":"js/third-party/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/velocity.min.js","path":"js/third-party/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/velocity.ui.min.js","path":"js/third-party/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"source/images/adaptiveLoading/adaptiveLoading_1.png","path":"images/adaptiveLoading/adaptiveLoading_1.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/messagecodevshash.png","path":"images/cryptography/mac/messagecodevshash.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/message_signature/hash_time_flow.png","path":"images/cryptography/message_signature/hash_time_flow.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/key/asymmetric_cypher.png","path":"images/cryptography/key/asymmetric_cypher.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/key/mac_key.png","path":"images/cryptography/key/mac_key.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/key/digital_signature_key.png","path":"images/cryptography/key/digital_signature_key.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/key/cek_kek.png","path":"images/cryptography/key/cek_kek.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/key/symmetric_cypher.png","path":"images/cryptography/key/symmetric_cypher.png","modified":1,"renderable":0},{"_id":"source/images/linux/count_of_filetype.png","path":"images/linux/count_of_filetype.png","modified":1,"renderable":0},{"_id":"source/images/network/tcp/tcp_segment.png","path":"images/network/tcp/tcp_segment.png","modified":1,"renderable":0},{"_id":"source/images/protocol/smtp/mta_maa.png","path":"images/protocol/smtp/mta_maa.png","modified":1,"renderable":0},{"_id":"themes/melody/source/js/third-party/anime.min.js","path":"js/third-party/anime.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/jquery.min.js","path":"js/third-party/jquery.min.js","modified":1,"renderable":1},{"_id":"source/images/cryptography/block/AES/PKCS7_Padding.png","path":"images/cryptography/block/AES/PKCS7_Padding.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/block/AES/GCM.png","path":"images/cryptography/block/AES/GCM.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/block/AES/nonce.png","path":"images/cryptography/block/AES/nonce.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/certification/key_hierarchy.png","path":"images/cryptography/certification/key_hierarchy.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/HMAC.png","path":"images/cryptography/mac/HMAC.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/message_signature/problem.png","path":"images/cryptography/message_signature/problem.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/key/key_hierarchy.png","path":"images/cryptography/key/key_hierarchy.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/signature/private_key_enc.png","path":"images/cryptography/signature/private_key_enc.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/signature/public_key_enc.png","path":"images/cryptography/signature/public_key_enc.png","modified":1,"renderable":0},{"_id":"source/images/network/tcp/congestion/retransmit_2.gif","path":"images/network/tcp/congestion/retransmit_2.gif","modified":1,"renderable":0},{"_id":"source/images/springboot/security/jose/jwt.png","path":"images/springboot/security/jose/jwt.png","modified":1,"renderable":0},{"_id":"themes/melody/source/js/third-party/reveal/head.min.js","path":"js/third-party/reveal/head.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/reveal/markdown.min.js","path":"js/third-party/reveal/markdown.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/reveal/math.min.js","path":"js/third-party/reveal/math.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/reveal/notes.min.js","path":"js/third-party/reveal/notes.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/reveal/marked.min.js","path":"js/third-party/reveal/marked.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/reveal/reveal.min.js","path":"js/third-party/reveal/reveal.min.js","modified":1,"renderable":1},{"_id":"themes/melody/source/js/third-party/reveal/zoom.min.js","path":"js/third-party/reveal/zoom.min.js","modified":1,"renderable":1},{"_id":"source/images/cryptography/block/AES/CBC_BLOCK_1.png","path":"images/cryptography/block/AES/CBC_BLOCK_1.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/block/AES/CBC_decrypt_1.png","path":"images/cryptography/block/AES/CBC_decrypt_1.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/block/AES/CBC_decrypt_2.png","path":"images/cryptography/block/AES/CBC_decrypt_2.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/block/AES/CBC_encrypt.png","path":"images/cryptography/block/AES/CBC_encrypt.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/block/AES/ECB.png","path":"images/cryptography/block/AES/ECB.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/certification/flow.png","path":"images/cryptography/certification/flow.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/alice-bob.png","path":"images/cryptography/mac/alice-bob.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/mac_algorithm_types.png","path":"images/cryptography/mac/mac_algorithm_types.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/replay_attack.png","path":"images/cryptography/mac/replay_attack.png","modified":1,"renderable":0},{"_id":"source/images/java/fundamental/method_area/method_area.png","path":"images/java/fundamental/method_area/method_area.png","modified":1,"renderable":0},{"_id":"source/images/java/fundamental/method_stack_memory/method_stacks.png","path":"images/java/fundamental/method_stack_memory/method_stacks.png","modified":1,"renderable":0},{"_id":"source/images/java/fundamental/method_stack_memory/native_method.png","path":"images/java/fundamental/method_stack_memory/native_method.png","modified":1,"renderable":0},{"_id":"source/images/java/fundamental/runtime_data_areas/runtime_data_areas.png","path":"images/java/fundamental/runtime_data_areas/runtime_data_areas.png","modified":1,"renderable":0},{"_id":"source/images/network/tcp/congestion/retransmit_1.jpeg","path":"images/network/tcp/congestion/retransmit_1.jpeg","modified":1,"renderable":0},{"_id":"source/images/webhack/mechanism/2-5.png","path":"images/webhack/mechanism/2-5.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/certification/PKI_info.png","path":"images/cryptography/certification/PKI_info.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/message_signature/message_signature.png","path":"images/cryptography/message_signature/message_signature.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/signature/public_key_enc1.png","path":"images/cryptography/signature/public_key_enc1.png","modified":1,"renderable":0},{"_id":"source/images/java/fundamental/method_stack_memory/operand_stack.png","path":"images/java/fundamental/method_stack_memory/operand_stack.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/certification/public_key_certification_senario.png","path":"images/cryptography/certification/public_key_certification_senario.png","modified":1,"renderable":0},{"_id":"source/images/webhack/mechanism/2-7.png","path":"images/webhack/mechanism/2-7.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/block/AES/CTR_AES_decrypt.png","path":"images/cryptography/block/AES/CTR_AES_decrypt.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/message_signature/digital_signature_use_case_1.png","path":"images/cryptography/message_signature/digital_signature_use_case_1.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/message_signature/hash_signature.png","path":"images/cryptography/message_signature/hash_signature.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/signature/private_key_signature_verify.png","path":"images/cryptography/signature/private_key_signature_verify.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/block/AES/CTR_AES_encrypt.png","path":"images/cryptography/block/AES/CTR_AES_encrypt.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/certification/hierarchy_structure_CA.png","path":"images/cryptography/certification/hierarchy_structure_CA.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/certification/ds_management_korea.png","path":"images/cryptography/certification/ds_management_korea.png","modified":1,"renderable":0},{"_id":"source/images/webhack/mechanism/2-6.png","path":"images/webhack/mechanism/2-6.png","modified":1,"renderable":0},{"_id":"source/images/cryptography/mac/message_authentication_code_flow.png","path":"images/cryptography/mac/message_authentication_code_flow.png","modified":1,"renderable":0},{"_id":"themes/melody/source/js/third-party/reveal/highlight.min.js","path":"js/third-party/reveal/highlight.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"e92a8e00cb1ad646ed9067fe2847f5ce9bfb208b","modified":1594443063326},{"_id":"themes/melody/.travis.demo.yml","hash":"977db46c56f95e0b475326ee7499890aa16bd971","modified":1594443063582},{"_id":"themes/melody/LICENSE","hash":"f6ad35196b942786fa91aedc1c0f45bf89de3fd3","modified":1594443063585},{"_id":"themes/melody/CHANGELOG.md","hash":"1bd1bad3e3450b69f4b303459ddd18c9ec545e9a","modified":1594443063584},{"_id":"themes/melody/README.md","hash":"afbc589a9023a2b827f611e880e2b63d573e9d6c","modified":1594443063585},{"_id":"themes/melody/_config.yml","hash":"a9ab539be33497b87def3c0162c61f0d7fcc5832","modified":1594443063586},{"_id":"themes/melody/package.json","hash":"ec19e33a67d5ff52d4fb941477fb4c3494f44a07","modified":1594443063614},{"_id":"themes/melody/stylus_format.json","hash":"53008fbf66531953489ab0f2ce166576b7ba1ab7","modified":1594443063652},{"_id":"themes/melody/scripts/hexo-plugins.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594443063615},{"_id":"source/_drafts/jpa.md","hash":"b7b8c3a480707ec7d20bb7eb02900e788743592e","modified":1594443063326},{"_id":"source/all-archives/index.md","hash":"cd06c09ea457b837646724009b67a59b478d5b8f","modified":1594443063375},{"_id":"source/categories/index.md","hash":"707d8e4c417ec846aafb72dc206a42c7c802fd8d","modified":1594443063376},{"_id":"source/_posts/Setting.md","hash":"9c27d3825c43bfd528184949a3539a27d271d8d8","modified":1594443063327},{"_id":"source/_posts/adaptive-loading.md","hash":"bebe66517bbe3111d76e62a003a98717695e08a6","modified":1594443063329},{"_id":"source/_posts/Spring-annotation.md","hash":"c5422eb57eee26aa0667114b672bc11becb64a95","modified":1594443063328},{"_id":"source/_posts/annotation.md","hash":"7a2ce1fb3bc00b6c07ffecfde8c1f0703461b796","modified":1594443063330},{"_id":"source/_posts/WebAssembly-summit-2020.md","hash":"0493d38751317e0f6073acc12cb3845e4a087d20","modified":1594443063328},{"_id":"source/_posts/apache-ignite-spring-boot.md","hash":"6ac681968bdd819f54cccb9cd293660753a02724","modified":1594443063330},{"_id":"source/_posts/blog-migration-gatsby.md","hash":"140beb6a61f5a821dddf4b3e13c282dc636804ca","modified":1594443063331},{"_id":"source/_posts/cryptography-birthday-attack.md","hash":"d711f89564e71c668a64869834db827ead7b39ed","modified":1594443063331},{"_id":"source/_posts/cryptography-certification.md","hash":"3aa169bc25281dbbd15234a863b4d1ae6102fab8","modified":1594443063333},{"_id":"source/_posts/cryptography-block-cipher.md","hash":"5a23aa023c56a61ad95f6d54e2008835f745e13e","modified":1594443063332},{"_id":"source/_posts/cryptography-diffie-hellman-algorithm.md","hash":"2c1e84a35ea66d73477b7455836d5391651d78f7","modified":1594443063333},{"_id":"source/_posts/cryptography-digital-signature.md","hash":"06218cdb6e9a0faf459f20121eac2300ecb502d4","modified":1594443063334},{"_id":"source/_posts/cryptography-key.md","hash":"377e928194580ab92ea0891221b209d1247d557b","modified":1594443063335},{"_id":"source/_posts/cryptography-message-authentication-code.md","hash":"ff2f5e41f52399127854363492103b7518981429","modified":1594443063335},{"_id":"source/_posts/cryptography-signatures.md","hash":"525d5a1d8e4b239d3a2f88086886716233214b99","modified":1594443063336},{"_id":"source/_posts/cryptography-ssl-tls.md","hash":"7ad76ceb674e58e5d003c6acd3b6d13e5faa3877","modified":1594443063336},{"_id":"source/_posts/enable-annotation-spring.md","hash":"f0bde5df88a8d1cf364c80831864c36b0f2803f5","modified":1594443063337},{"_id":"source/_posts/intro.md","hash":"a71bf28de784078bf50a0e20d5b075df4c4ac44f","modified":1594443063338},{"_id":"source/_posts/event-publishing-run-listener.md","hash":"c3c0d780c5067f9051cddfef4104db61d17e0e6b","modified":1594443063338},{"_id":"source/_posts/java-class-clazz.md","hash":"64167a6d93eb9d7012e84c14477be055755b03ec","modified":1594443063340},{"_id":"source/_posts/java-fundamental-method-stack.md","hash":"a49f8790394e16037c7815084356820c9320b980","modified":1594443063341},{"_id":"source/_posts/java-calendar-locale-timezone.md","hash":"59b1350be895dc59d507962777487ea6d6984517","modified":1594443063339},{"_id":"source/_posts/java-fundamental-method-area.md","hash":"35fc9fe793da85fbc55c681f2051b5c844f74f02","modified":1594443063340},{"_id":"source/_posts/java-map-marker.md","hash":"96953d5721b777bfd5562831523d9fbaafde3231","modified":1594443063342},{"_id":"source/_posts/java-fundamental-runtime-data-areas.md","hash":"00d97b69231fff41b5de29cddbfee28814284d65","modified":1594443063341},{"_id":"source/_posts/java-poi.md","hash":"223d43e93c15e2f221c3f504372ad516406b9584","modified":1594443063342},{"_id":"source/_posts/java-stream-function-interface.md","hash":"fea41267516e782a6e428e1b25d723232ab6b45b","modified":1594443063343},{"_id":"source/_posts/java-stream-parallel.md","hash":"77387d2e5f14a61e9706675ef8209997e05c0617","modified":1594443063343},{"_id":"source/_posts/java-performance-gc-start.md","hash":"4d68955480f76e64fa48ebe3d3946ce781dd3ed3","modified":1597556906838},{"_id":"source/_posts/java-stream.md","hash":"cd31dbe7fee6e4acd1f3a13bf13240ec2040358d","modified":1594443063344},{"_id":"source/_posts/javascript-module-history.md","hash":"980b80cd6d944040bcdd1f281e259068c54e8e13","modified":1594443063344},{"_id":"source/_posts/linux-run-level.md","hash":"08ae63850f03cb905afc543400723766fb78466b","modified":1594443063346},{"_id":"source/_posts/linux-command-ls.md","hash":"afd051b06ddad1bc68946ba32a9ac4ef3b5dd729","modified":1594443063345},{"_id":"source/_posts/network-tcp-basic.md","hash":"326b9a1afeea5a26550a9392cadea60418acbe51","modified":1594443063347},{"_id":"source/_posts/msa-keyword.md","hash":"216542845653cffb2784b6f24884bfdf39b3c7a6","modified":1594443063346},{"_id":"source/_posts/probability-statistics-basic.md","hash":"a691a7f44f0f64edb4de06edfbfa4c1a267ca2ea","modified":1594443063349},{"_id":"source/_posts/network-tcp-congestion-control.md","hash":"215517ab1c84f2f57902851621d3d5b8af41dc6a","modified":1594443063347},{"_id":"source/_posts/next-generation-web-styling.md","hash":"f7c969989d5058181a50fbb2919298305afe90a4","modified":1594443063348},{"_id":"source/_posts/project-jasypt.md","hash":"a93abeb5029de4617882abcd4120a7ee30221c16","modified":1594443063349},{"_id":"source/_posts/project-start-materials.md","hash":"da9a549cc70a72bf74bd4ccc442f19dfe064af1c","modified":1594443063351},{"_id":"source/_posts/project-nginx.md","hash":"ac93071135808576e220a5186befb8b6cfd07b95","modified":1594443063350},{"_id":"source/_posts/project-jenkins-ssh-deploy.md","hash":"6584be85b8c88bfa93a660d700f810a9420af2b2","modified":1594443063350},{"_id":"source/_posts/protocol-smtp.md","hash":"95aae1ae7d51b02f686f9af936dbeb52c5614dfb","modified":1594443063351},{"_id":"source/_posts/security-project-account-rule.md","hash":"771520ed093d6d5072d956aa5dcf847f67535033","modified":1594443063352},{"_id":"source/_posts/spring-boot-configuration-properties.md","hash":"e63ae8ea787abde4b0867b1bb4fc8de5224bf798","modified":1594443063354},{"_id":"source/_posts/spring-boot-application-argument.md","hash":"98d7d01fed45394e60219d6dfadf1ff12bb42417","modified":1594443063353},{"_id":"source/_posts/security-webapplicationhacker-1.md","hash":"ebbf1a5a7ecc70f3c39cfaadc385d0bed0dfedcd","modified":1594443063352},{"_id":"source/_posts/spring-boot-logging.md","hash":"9287a3220153c1c412e81b58bdcb717709fa83ea","modified":1594443063355},{"_id":"source/_posts/spring-boot-application-run-listeners.md","hash":"f20324683da64935c9c9e5d619a511744763ca4d","modified":1594443063354},{"_id":"source/_posts/spring-boot-proxy.md","hash":"d031eed99739fdae00bb2a03b513a90687a46d5c","modified":1595089502890},{"_id":"source/_posts/spring-boot-application-context.md","hash":"7bdec288fdc06192b47115c3bea4cb2aeffd1d15","modified":1595087677550},{"_id":"source/_posts/spring-initializer.md","hash":"d29007f44dbe0bf5e871924ebe976f5dd1310ddb","modified":1594443063355},{"_id":"source/_posts/spring-security-filter.md","hash":"7fa593662fdcfcbeb6422a495b9b9b32be49e205","modified":1594443063356},{"_id":"source/_posts/spring-security-oauth2.md","hash":"eac473de2fee3db37f7e13ee9e2198488edc496b","modified":1594443063357},{"_id":"source/_posts/spring-security-jose.md","hash":"efb8419c3d7be5cbcb80a822503ea67587699bea","modified":1594443063357},{"_id":"source/_posts/spring-security.md","hash":"0b6d7cfd9056b4efdbceefbe189fc88f76a77f4f","modified":1594443063373},{"_id":"source/_posts/spring-util-reflection.md","hash":"4350c112c6484eeca4e08545c229364bc6b6f15d","modified":1594443063373},{"_id":"source/_posts/springboot-run.md","hash":"409304a08692b1f93246f1af08b5c1de98756474","modified":1594443063374},{"_id":"source/images/jpa_hibernate_relationship.png","hash":"e67c240c37ba27826a245972e214ba70845adde0","modified":1594443063480},{"_id":"source/images/jvm_stack_01.gif","hash":"fbbfc8db97a21ba95f3fa33203ec33eb99620235","modified":1594443063481},{"_id":"source/images/security-interception.png","hash":"a5a3686aa8f60af32ff094604162646a22488e74","modified":1594443063514},{"_id":"source/hello/index.md","hash":"e52f04dea934afcf00257682aed318817b46d987","modified":1594443063376},{"_id":"source/tags/index.md","hash":"dd39ca0ec80db35ba715cc0623ea8179c3ea248f","modified":1594443063525},{"_id":"themes/melody/.vscode/launch.json","hash":"52d28f3455d1e9ff1d7c56316773a77710e89751","modified":1594443063583},{"_id":"themes/melody/.vscode/settings.json","hash":"defe04b1c276769d86dfb931c373595939729e92","modified":1594443063583},{"_id":"themes/melody/languages/en.yml","hash":"4f87bdc1526111b59785f1dce1025435f7ed8e97","modified":1594443063587},{"_id":"themes/melody/languages/default.yml","hash":"4f87bdc1526111b59785f1dce1025435f7ed8e97","modified":1594443063587},{"_id":"themes/melody/layout/404.pug","hash":"0ad5d251ba70edad5c04a45d13ca6a8db3bf7b42","modified":1594443063588},{"_id":"themes/melody/layout/archive.pug","hash":"f3198ed4d59ca9d0423060a428106a857247a8f8","modified":1594443063589},{"_id":"themes/melody/layout/category.pug","hash":"27fe85787ee1e4bba75a6eadbf86f7ffc58cb66a","modified":1594443063589},{"_id":"themes/melody/layout/page.pug","hash":"bbcd45cc14b69e260cf7bf851d1926dedc5cd3be","modified":1594443063612},{"_id":"themes/melody/layout/gallery.pug","hash":"1470a86b329eb5c60d6fa6a7bafa25ddf1255f97","modified":1594443063590},{"_id":"themes/melody/layout/index.pug","hash":"d15a36b5c8f1bec367888edb358e70b47eb15ea9","modified":1594443063611},{"_id":"themes/melody/layout/post.pug","hash":"40cb5814e69027ac030792a3b8d72bb43811f8e6","modified":1594443063612},{"_id":"themes/melody/layout/slides.pug","hash":"1e84a92d5b854dd233e0b511d59c1cd7c8d647a1","modified":1594443063613},{"_id":"themes/melody/layout/tag.pug","hash":"6b5c5c08e9a6773a4fce8583fdf614a784beb045","modified":1594443063613},{"_id":"themes/melody/scripts/gallery-tag.js","hash":"b18e4a809de37da54ea914452ce4a24785fa7621","modified":1594443063614},{"_id":"themes/melody/scripts/replace-config.js","hash":"9d5378898a068e77b5e601c950b631144bd743cf","modified":1594443063615},{"_id":"themes/melody/source/melody-favicon.ico","hash":"e33c804e570eb238fe095ed28346dd1b3a0666ae","modified":1594443063651},{"_id":"source/images/Spring_Bean_Name_Aware.png","hash":"a7ecc957342569a72407b5276f53499ccb48cc0a","modified":1594443063378},{"_id":"themes/melody/source/js/hexo-theme-melody.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594443063631},{"_id":"source/images/application-argument/CommandLineArgs.png","hash":"e6f23716b80172862cf32604b1885694263d2ac8","modified":1594443063389},{"_id":"source/images/application-argument/SimpleCommandLineProperty.png","hash":"8ea5cd51ddada1260014662062a93f417da044f5","modified":1594443063391},{"_id":"source/images/application-argument/DefaultApplicationArguments.png","hash":"75db496b8b9ddf4c42a16618cd6b078c2ed96385","modified":1594443063390},{"_id":"source/images/next-generation-web-styling/paintedAPI_4.png","hash":"887e1908a56e2d53c5d168c80b2045b2ac16e9aa","modified":1594443063502},{"_id":"source/images/next-generation-web-styling/property_value_3.png","hash":"8fe40cd6ba8ea9f74e1bafe539e9bb16aa038ea0","modified":1594443063509},{"_id":"themes/melody/layout/includes/additional-js.pug","hash":"92c27adaf87d1108da8ba31c31ceae0e2083484c","modified":1594443063592},{"_id":"themes/melody/layout/includes/config.pug","hash":"42e523fef2e9f285d989d494f0a6fce485921719","modified":1594443063596},{"_id":"themes/melody/layout/includes/footer.pug","hash":"c5968d30a668c3d1b8e658d784b661799d3ba48a","modified":1594443063598},{"_id":"themes/melody/layout/includes/header.pug","hash":"2d6ab2df1c048654c5b32eeed789e19949853d93","modified":1594443063600},{"_id":"themes/melody/layout/includes/head.pug","hash":"5c5ad5baa1d44bd4264cc1af0042123ace8aa853","modified":1594443063599},{"_id":"themes/melody/layout/includes/layout.pug","hash":"80e59c4023baa2504bff0e9a69efab3314f8ffdb","modified":1594443063600},{"_id":"themes/melody/layout/includes/nav.pug","hash":"e1f5053a66a48b6fb6c4390ae55f5bd8e397ff8e","modified":1594443063602},{"_id":"themes/melody/layout/includes/recent-posts.pug","hash":"f37dc3576cc45ad3da097b58f420b5b523d8a9a5","modified":1594443063603},{"_id":"themes/melody/layout/includes/pagination.pug","hash":"11a7d975f7e44932ea509a1a9d29f3e1ddece73e","modified":1594443063602},{"_id":"themes/melody/layout/includes/sidebar.pug","hash":"5fd5e002d0ab203489c840451e4fa9d3535610e2","modified":1594443063607},{"_id":"themes/melody/source/js/copy.js","hash":"a3a7c3158ea23a3bf63f7900750cc0928b73e25f","modified":1594443063629},{"_id":"themes/melody/source/js/fancybox.js","hash":"91d2acc362c03d905b2d40bda42e08c0ae81c4f7","modified":1594443063630},{"_id":"themes/melody/source/js/fireworks.js","hash":"f4f902392525133028f501bef2afa6b1045b5b9c","modified":1594443063630},{"_id":"themes/melody/source/js/head.js","hash":"24bc79d4382730d79174cdc2cd3de6368dee8034","modified":1594443063631},{"_id":"themes/melody/source/js/katex.js","hash":"8cc3bcbfd489f86714e815dc6ab8bad466c49664","modified":1594443063632},{"_id":"themes/melody/source/js/scroll.js","hash":"ec2d51d4c98af4e1162a79e430340a7aeb3a7165","modified":1594443063633},{"_id":"themes/melody/source/js/sidebar.js","hash":"6906dcca3a6b9bd46489ca378bc1e74e454168ac","modified":1594443063635},{"_id":"themes/melody/source/js/utils.js","hash":"5ff6609b1d674f7879f30e491bdd3c69139704da","modified":1594443063651},{"_id":"themes/melody/source/js/transition.js","hash":"24db2b0ae93ea925fb18be6d466365a4cd9f6576","modified":1594443063650},{"_id":"themes/melody/source/css/404.styl","hash":"e16201381c7f064f1923a12a23136cec6db0a8a0","modified":1594443063616},{"_id":"themes/melody/source/css/index.styl","hash":"c2823ad6013df237993eea5cf190c313270da4db","modified":1594443063627},{"_id":"themes/melody/source/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1594443063628},{"_id":"themes/melody/source/img/avatar.png","hash":"a44601fac9a81dd7e392d05ea5ddc65c96b051df","modified":1594443063629},{"_id":"themes/melody/source/css/var.styl","hash":"b05921f2b976df364e153d7d85996dc18fc2d08d","modified":1594443063627},{"_id":"source/images/adaptiveLoading/adaptiveLoading_5.png","hash":"65bc76fbff97b0a632575c61668b4a0e528ce62e","modified":1594443063385},{"_id":"source/images/adaptiveLoading/adaptiveLoading_4.png","hash":"99a6d984fd6331d1fe6f91ea7cce4d812e74e3d8","modified":1594443063384},{"_id":"source/images/adaptiveLoading/adaptiveLoading_2.png","hash":"5c0e6e9d35854da485817865fc21e8e0728d0613","modified":1594443063381},{"_id":"source/images/adaptiveLoading/adaptiveLoading_3.png","hash":"c776e73dbe088f0615c87e42e372f8764594567d","modified":1594443063383},{"_id":"source/images/adaptiveLoading/adaptiveLoading_6.png","hash":"80cbaa0c38f34d550ba0e986792aea6055e1f22f","modified":1594443063387},{"_id":"source/images/adaptiveLoading/adaptiveLoading_7.png","hash":"8c5ca9b857725edb5793d7cd7a9efc9838232cbc","modified":1594443063388},{"_id":"source/images/next-generation-web-styling/animation_worklet_1.png","hash":"f48143cb96c648af539a1f617091d077e15717f1","modified":1594443063488},{"_id":"source/images/next-generation-web-styling/localproperty_1.png","hash":"a0bdec48ff0407fd02180c186a2050a2c2047c29","modified":1594443063493},{"_id":"source/images/next-generation-web-styling/localproperty_4.png","hash":"f7d9fa12710afd1cdae508e2972bde24f023a531","modified":1594443063498},{"_id":"source/images/next-generation-web-styling/paintedAPI_2.png","hash":"a7441043d3237c239df3021752d7a0adb69df412","modified":1594443063500},{"_id":"source/images/next-generation-web-styling/paintedAPI_3.png","hash":"a3d29e335ae20605ededbe1448a487a71d9715f3","modified":1594443063502},{"_id":"source/images/next-generation-web-styling/property_value_2.png","hash":"a8f36d4ddaf59de4918481fefbc515fb10420c2c","modified":1594443063508},{"_id":"source/images/next-generation-web-styling/typedOM_1.png","hash":"5491b974d20774fd17ae3f00e631263ecf1da0b0","modified":1594443063510},{"_id":"source/images/next-generation-web-styling/worklet_1.png","hash":"acce53b3827960f0d171494ef218a710de12d2de","modified":1594443063511},{"_id":"themes/melody/layout/includes/gallery/script.pug","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594443063599},{"_id":"source/images/cryptography/mac/MAC-then-Encrypt.png","hash":"f3b5994823bb2352d658e43a6338522023499f7a","modified":1594443063432},{"_id":"source/images/cryptography/mac/encrypt-and-mac.png","hash":"5884a84b875fd554fb0e20b1116f0d29d0167202","modified":1594443063435},{"_id":"source/images/cryptography/mac/encrypt-then-mac.png","hash":"ea052708fdc7385cc13088838f7e186d0ba194fa","modified":1594443063435},{"_id":"source/images/cryptography/mac/ssl.png","hash":"373f64db0b8c2474713e61497a92b5eda427dad0","modified":1594443063444},{"_id":"source/images/java/stream/fork_join_queue.jpg","hash":"1f6bad523739c92e92485c982d57813c8f763fb3","modified":1594443063479},{"_id":"source/images/java/stream/fork_join.jpg","hash":"a36b1fcd0ca5945bf007ed3000730ff07754954a","modified":1594443063476},{"_id":"source/images/next-generation-web-styling/houdini_1.png","hash":"1a7c20ab8b3b45419f3a5ec1b92a1da44b9af3e6","modified":1594443063490},{"_id":"source/images/next-generation-web-styling/houdini_2.png","hash":"65d0619bac2c4d4ed0fd244b9e4f6acd61af6789","modified":1594443063492},{"_id":"source/images/next-generation-web-styling/localproperty_2.png","hash":"8886c14520d379d42ac1d6dc6ed8c72d2ed5565d","modified":1594443063495},{"_id":"source/images/next-generation-web-styling/localproperty_3.png","hash":"b1eef1cc72c9211f1086848387c6b1c0ae1a2227","modified":1594443063497},{"_id":"source/images/next-generation-web-styling/paintedAPI_1.png","hash":"b11ba54d6eb31e7a17f2cf288f1cacd2c7bd747e","modified":1594443063499},{"_id":"source/images/next-generation-web-styling/prefer_1.png","hash":"8e0b1a05bd10bd350692506b50da7b829c56171f","modified":1594443063504},{"_id":"source/images/next-generation-web-styling/prefer_2.png","hash":"89f429f59f19e0dc11755df594eb925bab160b80","modified":1594443063505},{"_id":"source/images/next-generation-web-styling/property_value_1.png","hash":"21b667720cbe4bb28dba1a9a63a6fba2e5d0a470","modified":1594443063507},{"_id":"source/images/springboot/applicationContext/annotated_bean_definition_reader.png","hash":"7e7d582fb09f429846b3a3e41dcfa34aae672f64","modified":1595087088819},{"_id":"source/images/springboot/eventpublishinglistener/eventpublisingrunlistener.png","hash":"72830327e311e2c23800ac8934b5e939611ec3d8","modified":1594443063515},{"_id":"source/images/springboot/applicationContext/annotation_config_servlet_application_context_class_diagram.png","hash":"79483cc37770e50c02b55a0c7955bc0b3a714d78","modified":1595086597436},{"_id":"themes/melody/layout/includes/404/404-nav.pug","hash":"f085a65214c2656ef6a104a2ae9fa1f8fbc196c1","modified":1594443063591},{"_id":"themes/melody/layout/includes/404/layout.pug","hash":"24e9cee9d7c96712fffc404671d88f1d9c0a5a9b","modified":1594443063591},{"_id":"themes/melody/layout/includes/count/busuanzi.pug","hash":"760be9ea92e5eb6959f37b76b9c13fb627893b0a","modified":1594443063597},{"_id":"themes/melody/layout/includes/gallery/layout.pug","hash":"8ff96c4f9afb416c5fc586c9585ae51cb6129529","modified":1594443063598},{"_id":"themes/melody/layout/includes/comments/index.pug","hash":"b8c1344a2760a46774f1894967c879d72802556d","modified":1594443063594},{"_id":"themes/melody/layout/includes/comments/gitalk.pug","hash":"590bc5af43bc55182157dbac65e7cd8bf39f410d","modified":1594443063593},{"_id":"themes/melody/layout/includes/comments/disqus.pug","hash":"0d753ace1190deebd9173279ab5369e4a30c53a8","modified":1594443063593},{"_id":"themes/melody/layout/includes/comments/gitment.pug","hash":"97f524092775c9b7e618c691df40b4bce9e121ac","modified":1594443063594},{"_id":"themes/melody/layout/includes/comments/laibili.pug","hash":"1ffb80147fd443144ca6cf0230515f229eba6745","modified":1594443063595},{"_id":"themes/melody/layout/includes/comments/valine.pug","hash":"81e10998d5a2d28857f1c32e2d8b1ba1d84ce0f8","modified":1594443063595},{"_id":"themes/melody/layout/includes/mixins/article-sort.pug","hash":"05c080cbd236b7d94765350cc699b92736ca4609","modified":1594443063601},{"_id":"themes/melody/layout/includes/mixins/slide.pug","hash":"cde884e97dd980bf05910934ce1d52ef3bd5df9c","modified":1594443063602},{"_id":"themes/melody/layout/includes/search/algolia.pug","hash":"3d2b2de0e199ab1fb151f41f2bbaac909f3d3d12","modified":1594443063604},{"_id":"themes/melody/layout/includes/search/local-search.pug","hash":"205aff585f7763b61b8597c6121e6d8c5f9329a4","modified":1594443063605},{"_id":"themes/melody/layout/includes/search/index.pug","hash":"66b4f4e8119e987cd3f9907298689a1408a05859","modified":1594443063604},{"_id":"themes/melody/layout/includes/share/add-this.pug","hash":"055d41a0cc135b8fb02da8faa1df5faacb8fc13d","modified":1594443063606},{"_id":"themes/melody/layout/includes/share/share-js.pug","hash":"c1ab921b1874d0026a7e1c23833600e3ea158881","modified":1594443063606},{"_id":"themes/melody/layout/includes/share/index.pug","hash":"42794c93723016ce1f23b81325e723a6f23f72d0","modified":1594443063606},{"_id":"themes/melody/layout/includes/slide/script.pug","hash":"cacee97b98943fecc3ad50c1b45f71a4cf2e8c4b","modified":1594443063608},{"_id":"themes/melody/layout/includes/third-party/canvas-ribbon.pug","hash":"a72c4b5943e9e88588983ab1c1cfeaf210142c56","modified":1594443063609},{"_id":"themes/melody/layout/includes/third-party/mathjax.pug","hash":"0afc0e488ef64f5cb27b9fc90b13f0f9e9f958a5","modified":1594443063610},{"_id":"themes/melody/layout/includes/slide/layout.pug","hash":"171ce0b25aad4f5f4095f5da0caa7e9d26664a03","modified":1594443063608},{"_id":"themes/melody/layout/includes/third-party/katex.pug","hash":"19ffed43fa22c3bf1c8d974a8d33f73a9a67d098","modified":1594443063610},{"_id":"themes/melody/source/js/search/algolia.js","hash":"8a6673cb1616b50a5ac8b2dc20fb3475bc32039f","modified":1594443063633},{"_id":"themes/melody/source/js/search/local-search.js","hash":"a642a93fb52ebc87f05e5d3cee38618013fda539","modified":1594443063634},{"_id":"themes/melody/source/js/third-party/canvas-ribbon.js","hash":"48abc9e33d90de08a49d63e1bcd21defe0461309","modified":1594443063636},{"_id":"themes/melody/source/js/third-party/jquery.fancybox.min.js","hash":"0acabccbb20d722141fa15b37d535807092b2c88","modified":1594443063638},{"_id":"themes/melody/source/js/third-party/velocity.min.js","hash":"15a9dc404e02f2cd9b46cc71293b65671976567b","modified":1594443063649},{"_id":"themes/melody/source/css/_layout/comments.styl","hash":"3b32040e894978ec9be6569f44fd5557734f2340","modified":1594443063620},{"_id":"themes/melody/source/js/third-party/velocity.ui.min.js","hash":"d8124c091d19fa4072616a44a8897fabc6599fce","modified":1594443063650},{"_id":"themes/melody/source/css/_layout/footer.styl","hash":"cb6db6151a49db6af0f7f6c8ee4c84872a75e437","modified":1594443063620},{"_id":"themes/melody/source/css/_layout/head.styl","hash":"41fe374cfa854be779b07d91f918836e8c03d54a","modified":1594443063621},{"_id":"themes/melody/source/css/_layout/page.styl","hash":"65420e8415cc117916c8b13f214d3a76815692dd","modified":1594443063621},{"_id":"themes/melody/source/css/_layout/post.styl","hash":"430bb7c32e743c3f78da947d56274bb8343cf2ef","modified":1594443063622},{"_id":"themes/melody/source/css/_layout/pagination.styl","hash":"ad5dc99b438588f92115592ed2d65a47c980720d","modified":1594443063622},{"_id":"themes/melody/source/css/_layout/sidebar.styl","hash":"29b02d3c319d84ab98dddec449f4bc83fbfdad36","modified":1594443063623},{"_id":"themes/melody/source/css/_global/index.styl","hash":"a6ad6d2675e975883855a1fa3a634c7ba06d4685","modified":1594443063617},{"_id":"themes/melody/source/css/_highlight/diff.styl","hash":"4e761f65c28f9df474fa2bd4d891c22db1aafa27","modified":1594443063618},{"_id":"themes/melody/source/css/_highlight/highlight.styl","hash":"ca5913698ddd97a55adcc98097038e4190cd7b58","modified":1594443063618},{"_id":"themes/melody/source/css/_highlight/theme.styl","hash":"89af8e4eb6adacee6693b3df46d87a0b1b2b0d2d","modified":1594443063619},{"_id":"themes/melody/source/css/_search/algolia.styl","hash":"0168c78d28fbc8996ad9e1764457a6526404515b","modified":1594443063624},{"_id":"themes/melody/source/css/_search/index.styl","hash":"b16e4c15ad5844096f427eb3bdb49c5bb0bbcaf7","modified":1594443063624},{"_id":"themes/melody/source/css/_third-party/jquery.fancybox.min.css","hash":"f9c94ec04062a1bfe1ef894c49e6ec33fa121778","modified":1594443063626},{"_id":"themes/melody/source/css/_search/local-search.styl","hash":"adb2663fcfee1c84461231472f228aa82c6478bd","modified":1594443063625},{"_id":"themes/melody/source/css/_third-party/normalize.min.css","hash":"e12eef6d6811c132f4f2fcf6c936be384191bcaf","modified":1594443063626},{"_id":"source/images/adaptiveLoading/adaptiveLoading_1.png","hash":"62ae2abedd749246d5e51c56382dcb6bd09952c5","modified":1594443063380},{"_id":"source/images/cryptography/mac/messagecodevshash.png","hash":"f87b8fc299823e619814dc0c64bd3fd1cb691589","modified":1594443063441},{"_id":"source/images/cryptography/message_signature/hash_time_flow.png","hash":"301071bcdfcb2353ca7c86931274cfd7b8f63814","modified":1594443063452},{"_id":"source/images/cryptography/key/asymmetric_cypher.png","hash":"1e82731e0697a420aa0a68619a241d1758b950cc","modified":1594443063421},{"_id":"source/images/cryptography/key/mac_key.png","hash":"2f4f000b72d0d0f968859f0794f08a22cd88c34d","modified":1594443063428},{"_id":"source/images/cryptography/key/digital_signature_key.png","hash":"cb227b374e2fd407ced66e3a017c6ed1f65cec6a","modified":1594443063424},{"_id":"source/images/cryptography/key/cek_kek.png","hash":"138e9a1b038079d4e557b6e77cd8223b6a0b69d9","modified":1594443063423},{"_id":"source/images/cryptography/key/symmetric_cypher.png","hash":"2286404e9d6308bd8aa6bbe9bb3b486c819f8738","modified":1594443063429},{"_id":"source/images/linux/count_of_filetype.png","hash":"e9aeb007381580dadc373197b7d8a71bf5389ab9","modified":1594443063484},{"_id":"source/images/network/tcp/tcp_segment.png","hash":"9a595a20c46cb16ae16f6540b446bf4ecb1febd8","modified":1594443063487},{"_id":"source/images/protocol/smtp/mta_maa.png","hash":"20bf8272ed6e73e37f3b24dc4fb6e1348d10b4a2","modified":1594443063513},{"_id":"themes/melody/source/js/third-party/anime.min.js","hash":"7c9416c1b444773b2d82e797131d6047364645a3","modified":1594443063636},{"_id":"themes/melody/source/js/third-party/jquery.min.js","hash":"67bdacbd077ee59f411109fd119ee9f58db15a5f","modified":1594443063639},{"_id":"source/images/cryptography/block/AES/PKCS7_Padding.png","hash":"d93a4380e69d06920eb5b56f71010f183e7f85b3","modified":1594443063404},{"_id":"source/images/cryptography/block/AES/GCM.png","hash":"fe01b0801d6ed173fd2ef3b7026ac1d16262f515","modified":1594443063403},{"_id":"source/images/cryptography/block/AES/nonce.png","hash":"208795721919ea6748e86b0e3a34e293b74cc986","modified":1594443063405},{"_id":"source/images/cryptography/certification/key_hierarchy.png","hash":"dea0c1b2112f18a891ef5ab4c1e35ea171726364","modified":1594443063417},{"_id":"source/images/cryptography/mac/HMAC.png","hash":"e31b7ef09aee01cc70c38c33ff9cf44f38c0beb1","modified":1594443063431},{"_id":"source/images/cryptography/message_signature/problem.png","hash":"39b9341ea538e32ce76bbeea68c6d4398d7ecea1","modified":1594443063456},{"_id":"source/images/cryptography/key/key_hierarchy.png","hash":"dea0c1b2112f18a891ef5ab4c1e35ea171726364","modified":1594443063426},{"_id":"source/images/cryptography/signature/private_key_enc.png","hash":"992112f802331afc2ca25b6dc30016f799e7176c","modified":1594443063459},{"_id":"source/images/cryptography/signature/public_key_enc.png","hash":"8e45731d63ba4b2434c5c372c71e06b9a8d332ea","modified":1594443063464},{"_id":"source/images/network/tcp/congestion/retransmit_2.gif","hash":"b69e2b2a94976d96f4d38f691d5fa57fd75057bb","modified":1594443063486},{"_id":"source/images/springboot/security/jose/jwt.png","hash":"5d6488f02619af894963f3b784abb517b993401d","modified":1594443063516},{"_id":"themes/melody/source/js/third-party/reveal/head.min.js","hash":"e34a3faf6e51034de612d15700e059fe82dba310","modified":1594443063640},{"_id":"themes/melody/source/js/third-party/reveal/markdown.min.js","hash":"859d70cd7c459819b90fe27afb940d16ecff6614","modified":1594443063645},{"_id":"themes/melody/source/js/third-party/reveal/math.min.js","hash":"779c98dbd83a528f27ea4b9f2d420c957c0939ba","modified":1594443063646},{"_id":"themes/melody/source/js/third-party/reveal/notes.min.js","hash":"4bb2925b111467791fdef3c4e4b41993d59ce90f","modified":1594443063647},{"_id":"themes/melody/source/js/third-party/reveal/marked.min.js","hash":"abd5391551b7b4e0cc0511c4b5c5ccfe66100f1b","modified":1594443063646},{"_id":"themes/melody/source/js/third-party/reveal/reveal.min.js","hash":"d8377a86451712488dea87caf5acbf8e97aa991f","modified":1594443063648},{"_id":"themes/melody/source/js/third-party/reveal/zoom.min.js","hash":"aca47bf417d451c4d364c6eb287a230e4b462b17","modified":1594443063648},{"_id":"source/images/cryptography/block/AES/CBC_BLOCK_1.png","hash":"2c755077bfd5247fa7cd92a0ee1db52f7670677e","modified":1594443063393},{"_id":"source/images/cryptography/block/AES/CBC_decrypt_1.png","hash":"904d36a7cda3eb51cb86c1410e1a7899fe34945c","modified":1594443063394},{"_id":"source/images/cryptography/block/AES/CBC_decrypt_2.png","hash":"26d08e083a6a1de8930530cc291bb06a5238022b","modified":1594443063395},{"_id":"source/images/cryptography/block/AES/CBC_encrypt.png","hash":"f7e41704c78baebd9dd28b389289f9cf287f79e0","modified":1594443063397},{"_id":"source/images/cryptography/block/AES/ECB.png","hash":"739334f6fac7e02fbe7ff257efeb7c74caf95d36","modified":1594443063402},{"_id":"source/images/cryptography/certification/flow.png","hash":"e5baf64787a144e4c2c40540621aaf08d739ca17","modified":1594443063412},{"_id":"source/images/cryptography/mac/alice-bob.png","hash":"d6648ace44a8bf6f390b7c8834476c585edc2899","modified":1594443063433},{"_id":"source/images/cryptography/mac/mac_algorithm_types.png","hash":"9353c62735eb810d49e39c7a9487b1867a6c375a","modified":1594443063438},{"_id":"source/images/cryptography/mac/replay_attack.png","hash":"9965a8544a61c3fcce45c17a4cde7e4d283d042b","modified":1594443063443},{"_id":"source/images/java/fundamental/method_area/method_area.png","hash":"0e78fe7dc657b1010ac98634f9a52c6e17793b0a","modified":1594443063468},{"_id":"source/images/java/fundamental/method_stack_memory/method_stacks.png","hash":"f144e13746198300530f6f55d2b9585a0c44c56b","modified":1594443063470},{"_id":"source/images/java/fundamental/method_stack_memory/native_method.png","hash":"c9a9c5d0024127cf97abe15774424d493f83164f","modified":1594443063471},{"_id":"source/images/java/fundamental/runtime_data_areas/runtime_data_areas.png","hash":"b07f364893518e6b2062e44abb06cdf936998e88","modified":1594443063475},{"_id":"source/images/network/tcp/congestion/retransmit_1.jpeg","hash":"0a82bed0e365d2e77f8de6911a3077bed5deb134","modified":1594443063485},{"_id":"source/images/webhack/mechanism/2-5.png","hash":"1ed30fa60ed79096e3aea14150a570f8c45e2696","modified":1594443063518},{"_id":"source/images/cryptography/certification/PKI_info.png","hash":"beedb614a011ceb705bf79ae7a705c5d77a627e9","modified":1594443063407},{"_id":"source/images/cryptography/message_signature/message_signature.png","hash":"74becd7bff9ff06226463e587b17f8ba141923be","modified":1594443063454},{"_id":"source/images/cryptography/signature/public_key_enc1.png","hash":"b35cbc63fe935d0aba360c4c69ee2b2db82089e4","modified":1594443063466},{"_id":"source/images/java/fundamental/method_stack_memory/operand_stack.png","hash":"b0057b242ad1c2f53819a8b69927bcae39fd7bc7","modified":1594443063473},{"_id":"source/images/cryptography/certification/public_key_certification_senario.png","hash":"f4f3e0e450b6bf45507875b38029aa813a2923d1","modified":1594443063420},{"_id":"source/images/webhack/mechanism/2-7.png","hash":"8d2b535cd34c48030bbc76ed06553af54eb370bb","modified":1594443063524},{"_id":"source/images/cryptography/block/AES/CTR_AES_decrypt.png","hash":"3dcd169f735da09ea3c722f02d632be0c411f8b3","modified":1594443063399},{"_id":"source/images/cryptography/message_signature/digital_signature_use_case_1.png","hash":"8a938e0ed2be36b2efcec12fe3f9d7b4fe0aa5f7","modified":1594443063447},{"_id":"source/images/cryptography/message_signature/hash_signature.png","hash":"774357bdbbdb09012fe2b8c3dbb2fc05176fbe4a","modified":1594443063450},{"_id":"source/images/cryptography/signature/private_key_signature_verify.png","hash":"f8bcf5c8f3825a9d913ce091c493345f3b22918e","modified":1594443063461},{"_id":"source/images/cryptography/block/AES/CTR_AES_encrypt.png","hash":"549b655199d8554ac2e7288e3a2ba31404e42910","modified":1594443063401},{"_id":"source/images/cryptography/certification/hierarchy_structure_CA.png","hash":"3a2da83dc510de6f8bb5e36444b81fc7af1b0bba","modified":1594443063415},{"_id":"source/images/cryptography/certification/ds_management_korea.png","hash":"206aae97f42927fa111fd2611e482247f02c4b7d","modified":1594443063410},{"_id":"source/images/webhack/mechanism/2-6.png","hash":"80d0075a78df57e3c3a9d6b84c6f6d5fcf22d142","modified":1594443063522},{"_id":"source/images/cryptography/mac/message_authentication_code_flow.png","hash":"8e4c590deed31d04567ee88a21e7ecc051ca9852","modified":1594443063440},{"_id":"themes/melody/source/js/third-party/reveal/highlight.min.js","hash":"10dd530e712a67f25cf27845213c0f28d2fe9e4d","modified":1594443063644}],"Category":[{"name":"Web","_id":"ckdwo513c0007qlvo3cek9wzu"},{"name":"Java","_id":"ckdwo513m000eqlvog7x858u0"},{"name":"JavaScript","parent":"ckdwo513c0007qlvo3cek9wzu","_id":"ckdwo513q000jqlvof9r7d86h"},{"name":"Java 8","parent":"ckdwo513m000eqlvog7x858u0","_id":"ckdwo5141000sqlvofljj8t57"},{"name":"cryptography","_id":"ckdwo5146000zqlvoayhw1lx3"},{"name":"Cache","parent":"ckdwo513m000eqlvog7x858u0","_id":"ckdwo514n001pqlvo0f4wa6w8"},{"name":"Spring","parent":"ckdwo513m000eqlvog7x858u0","_id":"ckdwo5158002kqlvo8d1xc6aj"},{"name":"Date","_id":"ckdwo515c002sqlvohbybd1jt"},{"name":"Network","_id":"ckdwo515f002xqlvodahmcyge"},{"name":"MicroServiceArchitecture","_id":"ckdwo515j0033qlvo2tg76gpl"},{"name":"Calendar","parent":"ckdwo515c002sqlvohbybd1jt","_id":"ckdwo515q003cqlvo4stefno4"},{"name":"TCP","parent":"ckdwo515f002xqlvodahmcyge","_id":"ckdwo515t003jqlvo7wf4hjpg"}],"Data":[],"Page":[{"title":"hello","date":"2019-10-28T06:53:51.000Z","_content":"","source":"hello/index.md","raw":"---\ntitle: hello\ndate: 2019-10-28 15:53:51\n---\n","updated":"2020-07-11T04:51:03.376Z","path":"hello/index.html","comments":1,"layout":"page","_id":"ckdwo512n0001qlvofazq4taz","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-03-01T15:30:47.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-03-02 00:30:47\ntype: \"tags\"\n---\n","updated":"2020-07-11T04:51:03.525Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckdwo51330003qlvo70xa7zsp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2020-03-01T15:32:04.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-03-02 00:32:04\ntype: \"categories\"\n---\n","updated":"2020-07-11T04:51:03.376Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckdwo513a0006qlvo9a0fhwyv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"all-archives","date":"2019-10-28T07:07:34.000Z","_content":"","source":"all-archives/index.md","raw":"---\ntitle: all-archives\ndate: 2019-10-28 16:07:34\n---\n","updated":"2020-07-11T04:51:03.375Z","path":"all-archives/index.html","comments":1,"layout":"page","_id":"ckdwo513f0009qlvoft9b8ewd","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"JPA","date":"2020-04-08T04:15:22.000Z","_content":"\nJPA ( Java Persistent API )와 ORM ( Object Relational Mapping )\n\nJPA란 자바 ORM 기술에 대한 API 표준 명세를 의미.\n\nJPA는 ORM을 사용하기 위한 인터페이스를 모아둔 것이다. \nJPA는 Java Persistence API의 약자로, 자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 인터페이스이다. \n일반적인 백엔드 API가 클라이언트가 어떻게 서버를 사용해야 하는지를 정의한 것처럼, \nJPA 역시 자바 어플리케이션에서 관계형 데이터베이스를 어떻게 사용해야 하는지를 정의하는 한 방법일 뿐이다.\n\nJPA는 단순히 명세이기 때문에 구현이 없다. JPA를 정의한 javax.persistence 패키지의 \n대부분은 interface, enum, Exception, 그리고 각종 Annotation으로 이루어져 있다. \n예를 들어, JPA의 핵심이 되는 EntityManager는 아래와 같이 javax.persistence.EntityManager 라는 파일에 interface로 정의되어 있다.\n\n\n``` java\npackage javax.persistence;\n\nimport ...\n\npublic interface EntityManager {\n\n    public void persist(Object entity);\n\n    public <T> T merge(T entity);\n\n    public void remove(Object entity);\n\n    public <T> T find(Class<T> entityClass, Object primaryKey);\n\n    // More interface methods...\n}\n```\n\n\nJPA를 사용하기 위해서는 JPA를 구현한 Hibernate, EclipseLink, DataNucleus 같은 ORM 프레임워크를 사용해야 한다.\n\n![](/images/jpa_hibernate_relationship.png)\n\n위와 같이 Interface의 구현체이며, EntityManagerFactory, EntityManager, EntityTransaction을  SessionFactory, Session, Transaction으로 상속받고 이를 Impl Class로 구현한다.\n\nSpring Data JPA    \n","source":"_drafts/jpa.md","raw":"---\ntitle: JPA\ntags: jpa, hibernate\ndate: 2020-04-08 13:15:22\n---\n\nJPA ( Java Persistent API )와 ORM ( Object Relational Mapping )\n\nJPA란 자바 ORM 기술에 대한 API 표준 명세를 의미.\n\nJPA는 ORM을 사용하기 위한 인터페이스를 모아둔 것이다. \nJPA는 Java Persistence API의 약자로, 자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 인터페이스이다. \n일반적인 백엔드 API가 클라이언트가 어떻게 서버를 사용해야 하는지를 정의한 것처럼, \nJPA 역시 자바 어플리케이션에서 관계형 데이터베이스를 어떻게 사용해야 하는지를 정의하는 한 방법일 뿐이다.\n\nJPA는 단순히 명세이기 때문에 구현이 없다. JPA를 정의한 javax.persistence 패키지의 \n대부분은 interface, enum, Exception, 그리고 각종 Annotation으로 이루어져 있다. \n예를 들어, JPA의 핵심이 되는 EntityManager는 아래와 같이 javax.persistence.EntityManager 라는 파일에 interface로 정의되어 있다.\n\n\n``` java\npackage javax.persistence;\n\nimport ...\n\npublic interface EntityManager {\n\n    public void persist(Object entity);\n\n    public <T> T merge(T entity);\n\n    public void remove(Object entity);\n\n    public <T> T find(Class<T> entityClass, Object primaryKey);\n\n    // More interface methods...\n}\n```\n\n\nJPA를 사용하기 위해서는 JPA를 구현한 Hibernate, EclipseLink, DataNucleus 같은 ORM 프레임워크를 사용해야 한다.\n\n![](/images/jpa_hibernate_relationship.png)\n\n위와 같이 Interface의 구현체이며, EntityManagerFactory, EntityManager, EntityTransaction을  SessionFactory, Session, Transaction으로 상속받고 이를 Impl Class로 구현한다.\n\nSpring Data JPA    \n","slug":"jpa","published":0,"updated":"2020-07-11T04:51:03.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo512g0000qlvo5i3i62ua","content":"<p>JPA ( Java Persistent API )와 ORM ( Object Relational Mapping )</p>\n<p>JPA란 자바 ORM 기술에 대한 API 표준 명세를 의미.</p>\n<p>JPA는 ORM을 사용하기 위한 인터페이스를 모아둔 것이다.<br />\nJPA는 Java Persistence API의 약자로, 자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 인터페이스이다.<br />\n일반적인 백엔드 API가 클라이언트가 어떻게 서버를 사용해야 하는지를 정의한 것처럼,<br />\nJPA 역시 자바 어플리케이션에서 관계형 데이터베이스를 어떻게 사용해야 하는지를 정의하는 한 방법일 뿐이다.</p>\n<p>JPA는 단순히 명세이기 때문에 구현이 없다. JPA를 정의한 javax.persistence 패키지의<br />\n대부분은 interface, enum, Exception, 그리고 각종 Annotation으로 이루어져 있다.<br />\n예를 들어, JPA의 핵심이 되는 EntityManager는 아래와 같이 javax.persistence.EntityManager 라는 파일에 interface로 정의되어 있다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> javax.persistence;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">EntityManager</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">persist</span><span class=\"params\">(Object entity)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">merge</span><span class=\"params\">(T entity)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">(Object entity)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">find</span><span class=\"params\">(Class&lt;T&gt; entityClass, Object primaryKey)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// More interface methods...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JPA를 사용하기 위해서는 JPA를 구현한 Hibernate, EclipseLink, DataNucleus 같은 ORM 프레임워크를 사용해야 한다.</p>\n<p><img src=\"/images/jpa_hibernate_relationship.png\" alt=\"\" /></p>\n<p>위와 같이 Interface의 구현체이며, EntityManagerFactory, EntityManager, EntityTransaction을  SessionFactory, Session, Transaction으로 상속받고 이를 Impl Class로 구현한다.</p>\n<p>Spring Data JPA</p>\n","site":{"data":{}},"excerpt":"","more":"<p>JPA ( Java Persistent API )와 ORM ( Object Relational Mapping )</p>\n<p>JPA란 자바 ORM 기술에 대한 API 표준 명세를 의미.</p>\n<p>JPA는 ORM을 사용하기 위한 인터페이스를 모아둔 것이다.<br />\nJPA는 Java Persistence API의 약자로, 자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 인터페이스이다.<br />\n일반적인 백엔드 API가 클라이언트가 어떻게 서버를 사용해야 하는지를 정의한 것처럼,<br />\nJPA 역시 자바 어플리케이션에서 관계형 데이터베이스를 어떻게 사용해야 하는지를 정의하는 한 방법일 뿐이다.</p>\n<p>JPA는 단순히 명세이기 때문에 구현이 없다. JPA를 정의한 javax.persistence 패키지의<br />\n대부분은 interface, enum, Exception, 그리고 각종 Annotation으로 이루어져 있다.<br />\n예를 들어, JPA의 핵심이 되는 EntityManager는 아래와 같이 javax.persistence.EntityManager 라는 파일에 interface로 정의되어 있다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> javax.persistence;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">EntityManager</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">persist</span><span class=\"params\">(Object entity)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">merge</span><span class=\"params\">(T entity)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">(Object entity)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">find</span><span class=\"params\">(Class&lt;T&gt; entityClass, Object primaryKey)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// More interface methods...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JPA를 사용하기 위해서는 JPA를 구현한 Hibernate, EclipseLink, DataNucleus 같은 ORM 프레임워크를 사용해야 한다.</p>\n<p><img src=\"/images/jpa_hibernate_relationship.png\" alt=\"\" /></p>\n<p>위와 같이 Interface의 구현체이며, EntityManagerFactory, EntityManager, EntityTransaction을  SessionFactory, Session, Transaction으로 상속받고 이를 Impl Class로 구현한다.</p>\n<p>Spring Data JPA</p>\n"},{"title":"adaptive-loading","date":"2019-12-11T04:45:22.000Z","_content":"https://youtu.be/puUPpVrIRkc\n\n- Adaptive Loading for improving performance (slick experience)\nDo we need to deliver the exact same experience to every user?\n많은 웹사이트들에서 자바스크립트가 많이 사용되고 있고 자바스크립트는 single thread 기반으로 실행된다.\n다양한 디바이스들의 성능은 Benchmark 를 보더라도 매년 향상되고 있지만 싱글 CPU 자체의 성능은 많이 향상되지 않았다.\n\nfor example \nyoutube -> 514kb js download\n\nnetwork type change to fast 3g\nyoutube used low network module?\n\nNetwork-aware Resource Loading\nreact-adaptive-hooks\nadaptive-vue\n\n19년 12월 기준 chrome Experimental\n\nconst network = navigator.connection.effectiveType;\n\n```jsx harmony\nimport React from 'react';\n\nimport { useNetworkStatus } from 'react-adaptive-hooks/network';\n\nconst MyComponent = () => {\n  const { effectiveConnectionType } = useNetworkStatus();\n\n  let media;\n  switch(effectiveConnectionType) {\n    case '2g':\n      media = <img src='medium-res.jpg'/>;\n      break;\n    case '3g':\n      media = <img src='high-res.jpg'/>;\n      break;\n    case '4g':\n      media = <video muted controls>...</video>;\n      break;\n    default:\n      media = <video muted controls>...</video>;\n      break;\n  }\n\n  return <div>{media}</div>;\n};\n```\n\n####memory\nnavigator.deviceMemory\n\n####cpu\nnavigator.hardwareConcurrency\n\n####Adaptive Capability Toggling\n\n####Adaptive Delivery with Client Hints\nEnable\n```html\n<meta http-equiv=\"Accept-CH\" content=\"Device-Memory, Viewport-Width Save-Data\"/>\n```\nAdded\nAccept-CH : Device-Memory, Save-Data, Viewport-Width\n\nslick experience <-> choppy experience\n\nDo not just respond based on screen size, adapt based on actual device hardware.\n\n1) Define buckets \n2) Integrate buckets into logging\n3) Adapt loading based on buckets\n![](/images/adaptiveLoading/adaptiveLoading_1.png)\n![](/images/adaptiveLoading/adaptiveLoading_2.png)\n![](/images/adaptiveLoading/adaptiveLoading_3.png)\n![](/images/adaptiveLoading/adaptiveLoading_4.png)\n![](/images/adaptiveLoading/adaptiveLoading_5.png)\n![](/images/adaptiveLoading/adaptiveLoading_6.png)\n![](/images/adaptiveLoading/adaptiveLoading_7.png)\n\n\nbrowser 기준으로\n\n1) Log hardwareConcurrency and deviceMemory\n2) Group by hardwareConcurrency, DeviceMemory, and OS when looking at perf data\n3) figure out buckets based on groupings.\n \nadaptivity should be considered in your core frameworks\n\nThink about animations\n\nLow End <- animation 제거 \nHigh End\n\nMobile Websites (Viewport-Width, CPU 등)\n\nLoad fast vs respond fast\n\nTrade-off\n\n```javascript\nif (isLowEndDevice()) {\n    scheduler.unstable_forceFrameRate(15);\n}\n```\n\n","source":"_posts/adaptive-loading.md","raw":"---\ntitle: adaptive-loading\ndate: 2019-12-11 13:45:22\ntags: \n- JavaScript\n\ncategories:\n- Web\n- JavaScript\n---\nhttps://youtu.be/puUPpVrIRkc\n\n- Adaptive Loading for improving performance (slick experience)\nDo we need to deliver the exact same experience to every user?\n많은 웹사이트들에서 자바스크립트가 많이 사용되고 있고 자바스크립트는 single thread 기반으로 실행된다.\n다양한 디바이스들의 성능은 Benchmark 를 보더라도 매년 향상되고 있지만 싱글 CPU 자체의 성능은 많이 향상되지 않았다.\n\nfor example \nyoutube -> 514kb js download\n\nnetwork type change to fast 3g\nyoutube used low network module?\n\nNetwork-aware Resource Loading\nreact-adaptive-hooks\nadaptive-vue\n\n19년 12월 기준 chrome Experimental\n\nconst network = navigator.connection.effectiveType;\n\n```jsx harmony\nimport React from 'react';\n\nimport { useNetworkStatus } from 'react-adaptive-hooks/network';\n\nconst MyComponent = () => {\n  const { effectiveConnectionType } = useNetworkStatus();\n\n  let media;\n  switch(effectiveConnectionType) {\n    case '2g':\n      media = <img src='medium-res.jpg'/>;\n      break;\n    case '3g':\n      media = <img src='high-res.jpg'/>;\n      break;\n    case '4g':\n      media = <video muted controls>...</video>;\n      break;\n    default:\n      media = <video muted controls>...</video>;\n      break;\n  }\n\n  return <div>{media}</div>;\n};\n```\n\n####memory\nnavigator.deviceMemory\n\n####cpu\nnavigator.hardwareConcurrency\n\n####Adaptive Capability Toggling\n\n####Adaptive Delivery with Client Hints\nEnable\n```html\n<meta http-equiv=\"Accept-CH\" content=\"Device-Memory, Viewport-Width Save-Data\"/>\n```\nAdded\nAccept-CH : Device-Memory, Save-Data, Viewport-Width\n\nslick experience <-> choppy experience\n\nDo not just respond based on screen size, adapt based on actual device hardware.\n\n1) Define buckets \n2) Integrate buckets into logging\n3) Adapt loading based on buckets\n![](/images/adaptiveLoading/adaptiveLoading_1.png)\n![](/images/adaptiveLoading/adaptiveLoading_2.png)\n![](/images/adaptiveLoading/adaptiveLoading_3.png)\n![](/images/adaptiveLoading/adaptiveLoading_4.png)\n![](/images/adaptiveLoading/adaptiveLoading_5.png)\n![](/images/adaptiveLoading/adaptiveLoading_6.png)\n![](/images/adaptiveLoading/adaptiveLoading_7.png)\n\n\nbrowser 기준으로\n\n1) Log hardwareConcurrency and deviceMemory\n2) Group by hardwareConcurrency, DeviceMemory, and OS when looking at perf data\n3) figure out buckets based on groupings.\n \nadaptivity should be considered in your core frameworks\n\nThink about animations\n\nLow End <- animation 제거 \nHigh End\n\nMobile Websites (Viewport-Width, CPU 등)\n\nLoad fast vs respond fast\n\nTrade-off\n\n```javascript\nif (isLowEndDevice()) {\n    scheduler.unstable_forceFrameRate(15);\n}\n```\n\n","slug":"adaptive-loading","published":1,"updated":"2020-07-11T04:51:03.329Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo512p0002qlvo6z9479h9","content":"<p><a href=\"https://youtu.be/puUPpVrIRkc\" target=\"_blank\" rel=\"noopener\">https://youtu.be/puUPpVrIRkc</a></p>\n<ul>\n<li>Adaptive Loading for improving performance (slick experience)<br />\nDo we need to deliver the exact same experience to every user?<br />\n많은 웹사이트들에서 자바스크립트가 많이 사용되고 있고 자바스크립트는 single thread 기반으로 실행된다.<br />\n다양한 디바이스들의 성능은 Benchmark 를 보더라도 매년 향상되고 있지만 싱글 CPU 자체의 성능은 많이 향상되지 않았다.</li>\n</ul>\n<p>for example<br />\nyoutube -&gt; 514kb js download</p>\n<p>network type change to fast 3g<br />\nyoutube used low network module?</p>\n<p>Network-aware Resource Loading<br />\nreact-adaptive-hooks<br />\nadaptive-vue</p>\n<p>19년 12월 기준 chrome Experimental</p>\n<p>const network = navigator.connection.effectiveType;</p>\n<figure class=\"highlight jsx\"><figcaption><span>harmony</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useNetworkStatus &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-adaptive-hooks/network'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> MyComponent = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; effectiveConnectionType &#125; = useNetworkStatus();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> media;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(effectiveConnectionType) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'2g'</span>:</span><br><span class=\"line\">      media = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">'medium-res.jpg'</span>/&gt;</span>;</span></span><br><span class=\"line\"><span class=\"xml\">      break;</span></span><br><span class=\"line\"><span class=\"xml\">    case '3g':</span></span><br><span class=\"line\">      media = &lt;img src='high-res.jpg'/&gt;;</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case '4g':</span><br><span class=\"line\">      media = &lt;video muted controls&gt;...&lt;/video&gt;;</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    default:</span><br><span class=\"line\">      media = &lt;video muted controls&gt;...&lt;/video&gt;;</span><br><span class=\"line\">      break;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  return &lt;div&gt;&#123;media&#125;&lt;/div&gt;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>####memory<br />\nnavigator.deviceMemory</p>\n<p>####cpu<br />\nnavigator.hardwareConcurrency</p>\n<p>####Adaptive Capability Toggling</p>\n<p>####Adaptive Delivery with Client Hints<br />\nEnable</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Accept-CH\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Device-Memory, Viewport-Width Save-Data\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Added<br />\nAccept-CH : Device-Memory, Save-Data, Viewport-Width</p>\n<p>slick experience &lt;-&gt; choppy experience</p>\n<p>Do not just respond based on screen size, adapt based on actual device hardware.</p>\n<ol>\n<li>Define buckets</li>\n<li>Integrate buckets into logging</li>\n<li>Adapt loading based on buckets<br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_1.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_2.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_3.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_4.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_5.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_6.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_7.png\" alt=\"\" /></li>\n</ol>\n<p>browser 기준으로</p>\n<ol>\n<li>Log hardwareConcurrency and deviceMemory</li>\n<li>Group by hardwareConcurrency, DeviceMemory, and OS when looking at perf data</li>\n<li>figure out buckets based on groupings.</li>\n</ol>\n<p>adaptivity should be considered in your core frameworks</p>\n<p>Think about animations</p>\n<p>Low End &lt;- animation 제거<br />\nHigh End</p>\n<p>Mobile Websites (Viewport-Width, CPU 등)</p>\n<p>Load fast vs respond fast</p>\n<p>Trade-off</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (isLowEndDevice()) &#123;</span><br><span class=\"line\">    scheduler.unstable_forceFrameRate(<span class=\"number\">15</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://youtu.be/puUPpVrIRkc\" target=\"_blank\" rel=\"noopener\">https://youtu.be/puUPpVrIRkc</a></p>\n<ul>\n<li>Adaptive Loading for improving performance (slick experience)<br />\nDo we need to deliver the exact same experience to every user?<br />\n많은 웹사이트들에서 자바스크립트가 많이 사용되고 있고 자바스크립트는 single thread 기반으로 실행된다.<br />\n다양한 디바이스들의 성능은 Benchmark 를 보더라도 매년 향상되고 있지만 싱글 CPU 자체의 성능은 많이 향상되지 않았다.</li>\n</ul>\n<p>for example<br />\nyoutube -&gt; 514kb js download</p>\n<p>network type change to fast 3g<br />\nyoutube used low network module?</p>\n<p>Network-aware Resource Loading<br />\nreact-adaptive-hooks<br />\nadaptive-vue</p>\n<p>19년 12월 기준 chrome Experimental</p>\n<p>const network = navigator.connection.effectiveType;</p>\n<figure class=\"highlight jsx\"><figcaption><span>harmony</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useNetworkStatus &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-adaptive-hooks/network'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> MyComponent = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; effectiveConnectionType &#125; = useNetworkStatus();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> media;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(effectiveConnectionType) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'2g'</span>:</span><br><span class=\"line\">      media = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">'medium-res.jpg'</span>/&gt;</span>;</span></span><br><span class=\"line\"><span class=\"xml\">      break;</span></span><br><span class=\"line\"><span class=\"xml\">    case '3g':</span></span><br><span class=\"line\">      media = &lt;img src='high-res.jpg'/&gt;;</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case '4g':</span><br><span class=\"line\">      media = &lt;video muted controls&gt;...&lt;/video&gt;;</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    default:</span><br><span class=\"line\">      media = &lt;video muted controls&gt;...&lt;/video&gt;;</span><br><span class=\"line\">      break;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  return &lt;div&gt;&#123;media&#125;&lt;/div&gt;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>####memory<br />\nnavigator.deviceMemory</p>\n<p>####cpu<br />\nnavigator.hardwareConcurrency</p>\n<p>####Adaptive Capability Toggling</p>\n<p>####Adaptive Delivery with Client Hints<br />\nEnable</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Accept-CH\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Device-Memory, Viewport-Width Save-Data\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Added<br />\nAccept-CH : Device-Memory, Save-Data, Viewport-Width</p>\n<p>slick experience &lt;-&gt; choppy experience</p>\n<p>Do not just respond based on screen size, adapt based on actual device hardware.</p>\n<ol>\n<li>Define buckets</li>\n<li>Integrate buckets into logging</li>\n<li>Adapt loading based on buckets<br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_1.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_2.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_3.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_4.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_5.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_6.png\" alt=\"\" /><br />\n<img src=\"/images/adaptiveLoading/adaptiveLoading_7.png\" alt=\"\" /></li>\n</ol>\n<p>browser 기준으로</p>\n<ol>\n<li>Log hardwareConcurrency and deviceMemory</li>\n<li>Group by hardwareConcurrency, DeviceMemory, and OS when looking at perf data</li>\n<li>figure out buckets based on groupings.</li>\n</ol>\n<p>adaptivity should be considered in your core frameworks</p>\n<p>Think about animations</p>\n<p>Low End &lt;- animation 제거<br />\nHigh End</p>\n<p>Mobile Websites (Viewport-Width, CPU 등)</p>\n<p>Load fast vs respond fast</p>\n<p>Trade-off</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (isLowEndDevice()) &#123;</span><br><span class=\"line\">    scheduler.unstable_forceFrameRate(<span class=\"number\">15</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Spring-annotation","date":"2020-03-29T23:17:56.000Z","_content":"\n@ConfigurationProperties\n","source":"_posts/Spring-annotation.md","raw":"---\ntitle: Spring-annotation\ndate: 2020-03-30 08:17:56\ntags:\n---\n\n@ConfigurationProperties\n","slug":"Spring-annotation","published":1,"updated":"2020-07-11T04:51:03.328Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo51380005qlvo0dymf84f","content":"<p>@ConfigurationProperties</p>\n","site":{"data":{}},"excerpt":"","more":"<p>@ConfigurationProperties</p>\n"},{"title":"annotation","date":"2020-01-20T10:15:38.000Z","_content":"\n### Java Annotation \n\n- 어노테이션이란 본래 주석이란 뜻\n- 해석 되는 시점 정의\n- 주석 대체\n- 기존 자바 웹 어플리케이션들은 구성과 설정값들을 외부의 XML설정 파일에 명시하는 방법으로 프로그래밍 되었다. \n  변경 될 수 있는 코드가 아닌 외부 설정 파일에 분리하기 때문에 재컴파일 없이도 쉽게 변경사항을 적용 할 수 있었지만, 프로그램 작성을 위해 매번 많은 설정을 작성해야 한다는 불편함이 존재했다.\n- 어노테이션을 사용하면 기존 로직과는 별개로 필요한 정보들을 기입 할 수 있고, 런타임에서 Reflection을 통해 해당 정보를 얻어 올 수 있다.\n- 문서화 부분은 Javadoc이 존재하기 때문에 많이 사용되지 않으며, 어노테이션의 본질적 목적은 소스 코드에 메타데이터를 표현하는 것이다.\n\n```java\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface CustomAnnotation {\n\tboolean isCheck() default true;\n}\n```\n\n### Meta Annotation\n- @Retention\n    - Java Compiler가 Annotation을 다루는 방법을 기술하며, 어느 시점까지 영향을 미치는 지 결정하는 값\n    - RetentionPolicy.SOURCE : 컴파일 전까지 유효 ( 컴파일 이후 클래스 정보에서 삭제)\n    - RetentionPolicy.CLASS : 컴파일러가 클래스를 참조하기 전까지 유효\n    - RetentionPolicy.RUNTIME : 컴파일 이후에도 JVM에 의해 계속 참조가 가능. (Runtime Code에서 Reflection을 통한 참조가 가능)\n    \n- @Target\n    - Annotation을 선언할 위치를 선택한다.\n    - ElementType.PACKAGE : 패키지 선언\n    - ElementType.TYPE : 타입 선언\n    - ElementType.ANNOTATION_TYPE : 어노테이션 타입 선언\n    - ElementType.CONSTRUCTOR : 생성자 선언\n    - ElementType.FIELD : 멤버 변수 선언\n    - ElementType.LOCAL_VARIABLE : 지역 변수 선언\n    - ElementType.METHOD : 메서드 선언\n    - ElementType.PARAMETER : 전달인자 선언\n    - ElementType.TYPE_PARAMETER : 전달인자 타입 선언\n    - ElementType.TYPE_USE : 타입 선언\n    \n- @Documented\n    - 해당 어노테이션을 Javadoc에 포함시킨다.\n \n- @Inherited\n    - 어노테이션의 상속을 가능하게 한다.\n    - 주의 : 어노테이션 끼리의 상속이 아닌 해당 어노테이션을 가지고 있는 클래스를 상속할 경우 자식 클래스도 해당 어노테이션을 가짐을 뜻한다.\n    \n- @Native\n    - JVM이 설치된 OS의 네이티브 메서드에 의해 참조되는 상수필드에 붙이는 어노테이션이다.\n    - JNI (Java Native Interface)\n    - Object, Atomic, file 등\n    \n- @Repeatable\n    - 같은 어노테이션을 중복정의 가능한 @Repeatable 어노테이션을 제공\n    \n```java\n  // case 1\n  @GreenColor\n  @BlueColor\n  @RedColor\n  public class RGBColor { ... }\n  \n  // case 2\n  @Color(colors={\"green\", \"blue\", \"red\"}\n  public class RGBColor { ... }\n```\n\n- 아래와 같이 하나의 RGB Color가 Color에 속함을 보이고 \n\n```java\n@Color(\"green\")\n@Color(\"blue\")\n@Color(\"red\")\npublic class RGBColor { ... }\n```\n \n- Color 어노테이션과 Colors 어노테이션을 정의해 표현한다.\n\n```java\n @Repeatable(value = Colors.class)\n public @interface Color {}\n \n @Target(ElementType.TYPE)\n @Retention(RetentionPolicy.RUNTIME)\n @Documented\n public @interface Colors {\n     Color[] value();  \n }\n``` \n\n\n- 참조 : \n    - https://asfirstalways.tistory.com/309\n    - https://jistol.github.io/java/2018/08/31/annotation-repeatable/\n    - https://stackoverflow.com/questions/23973107/how-to-use-inherited-annotation-in-java/23973331","source":"_posts/annotation.md","raw":"---\ntitle: annotation\ndate: 2020-01-20 19:15:38\ntags: \n- Java\ncategories:\n- Java\n- Java 8\n---\n\n### Java Annotation \n\n- 어노테이션이란 본래 주석이란 뜻\n- 해석 되는 시점 정의\n- 주석 대체\n- 기존 자바 웹 어플리케이션들은 구성과 설정값들을 외부의 XML설정 파일에 명시하는 방법으로 프로그래밍 되었다. \n  변경 될 수 있는 코드가 아닌 외부 설정 파일에 분리하기 때문에 재컴파일 없이도 쉽게 변경사항을 적용 할 수 있었지만, 프로그램 작성을 위해 매번 많은 설정을 작성해야 한다는 불편함이 존재했다.\n- 어노테이션을 사용하면 기존 로직과는 별개로 필요한 정보들을 기입 할 수 있고, 런타임에서 Reflection을 통해 해당 정보를 얻어 올 수 있다.\n- 문서화 부분은 Javadoc이 존재하기 때문에 많이 사용되지 않으며, 어노테이션의 본질적 목적은 소스 코드에 메타데이터를 표현하는 것이다.\n\n```java\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface CustomAnnotation {\n\tboolean isCheck() default true;\n}\n```\n\n### Meta Annotation\n- @Retention\n    - Java Compiler가 Annotation을 다루는 방법을 기술하며, 어느 시점까지 영향을 미치는 지 결정하는 값\n    - RetentionPolicy.SOURCE : 컴파일 전까지 유효 ( 컴파일 이후 클래스 정보에서 삭제)\n    - RetentionPolicy.CLASS : 컴파일러가 클래스를 참조하기 전까지 유효\n    - RetentionPolicy.RUNTIME : 컴파일 이후에도 JVM에 의해 계속 참조가 가능. (Runtime Code에서 Reflection을 통한 참조가 가능)\n    \n- @Target\n    - Annotation을 선언할 위치를 선택한다.\n    - ElementType.PACKAGE : 패키지 선언\n    - ElementType.TYPE : 타입 선언\n    - ElementType.ANNOTATION_TYPE : 어노테이션 타입 선언\n    - ElementType.CONSTRUCTOR : 생성자 선언\n    - ElementType.FIELD : 멤버 변수 선언\n    - ElementType.LOCAL_VARIABLE : 지역 변수 선언\n    - ElementType.METHOD : 메서드 선언\n    - ElementType.PARAMETER : 전달인자 선언\n    - ElementType.TYPE_PARAMETER : 전달인자 타입 선언\n    - ElementType.TYPE_USE : 타입 선언\n    \n- @Documented\n    - 해당 어노테이션을 Javadoc에 포함시킨다.\n \n- @Inherited\n    - 어노테이션의 상속을 가능하게 한다.\n    - 주의 : 어노테이션 끼리의 상속이 아닌 해당 어노테이션을 가지고 있는 클래스를 상속할 경우 자식 클래스도 해당 어노테이션을 가짐을 뜻한다.\n    \n- @Native\n    - JVM이 설치된 OS의 네이티브 메서드에 의해 참조되는 상수필드에 붙이는 어노테이션이다.\n    - JNI (Java Native Interface)\n    - Object, Atomic, file 등\n    \n- @Repeatable\n    - 같은 어노테이션을 중복정의 가능한 @Repeatable 어노테이션을 제공\n    \n```java\n  // case 1\n  @GreenColor\n  @BlueColor\n  @RedColor\n  public class RGBColor { ... }\n  \n  // case 2\n  @Color(colors={\"green\", \"blue\", \"red\"}\n  public class RGBColor { ... }\n```\n\n- 아래와 같이 하나의 RGB Color가 Color에 속함을 보이고 \n\n```java\n@Color(\"green\")\n@Color(\"blue\")\n@Color(\"red\")\npublic class RGBColor { ... }\n```\n \n- Color 어노테이션과 Colors 어노테이션을 정의해 표현한다.\n\n```java\n @Repeatable(value = Colors.class)\n public @interface Color {}\n \n @Target(ElementType.TYPE)\n @Retention(RetentionPolicy.RUNTIME)\n @Documented\n public @interface Colors {\n     Color[] value();  \n }\n``` \n\n\n- 참조 : \n    - https://asfirstalways.tistory.com/309\n    - https://jistol.github.io/java/2018/08/31/annotation-repeatable/\n    - https://stackoverflow.com/questions/23973107/how-to-use-inherited-annotation-in-java/23973331","slug":"annotation","published":1,"updated":"2020-07-11T04:51:03.330Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513d0008qlvo801cfi9f","content":"<h3 id=\"java-annotation\"><a class=\"markdownIt-Anchor\" href=\"#java-annotation\"></a> Java Annotation</h3>\n<ul>\n<li>어노테이션이란 본래 주석이란 뜻</li>\n<li>해석 되는 시점 정의</li>\n<li>주석 대체</li>\n<li>기존 자바 웹 어플리케이션들은 구성과 설정값들을 외부의 XML설정 파일에 명시하는 방법으로 프로그래밍 되었다.<br />\n변경 될 수 있는 코드가 아닌 외부 설정 파일에 분리하기 때문에 재컴파일 없이도 쉽게 변경사항을 적용 할 수 있었지만, 프로그램 작성을 위해 매번 많은 설정을 작성해야 한다는 불편함이 존재했다.</li>\n<li>어노테이션을 사용하면 기존 로직과는 별개로 필요한 정보들을 기입 할 수 있고, 런타임에서 Reflection을 통해 해당 정보를 얻어 올 수 있다.</li>\n<li>문서화 부분은 Javadoc이 존재하기 때문에 많이 사용되지 않으며, 어노테이션의 본질적 목적은 소스 코드에 메타데이터를 표현하는 것이다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target</span>(ElementType.METHOD)</span><br><span class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> CustomAnnotation &#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isCheck</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"keyword\">true</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"meta-annotation\"><a class=\"markdownIt-Anchor\" href=\"#meta-annotation\"></a> Meta Annotation</h3>\n<ul>\n<li>\n<p>@Retention</p>\n<ul>\n<li>Java Compiler가 Annotation을 다루는 방법을 기술하며, 어느 시점까지 영향을 미치는 지 결정하는 값</li>\n<li>RetentionPolicy.SOURCE : 컴파일 전까지 유효 ( 컴파일 이후 클래스 정보에서 삭제)</li>\n<li>RetentionPolicy.CLASS : 컴파일러가 클래스를 참조하기 전까지 유효</li>\n<li>RetentionPolicy.RUNTIME : 컴파일 이후에도 JVM에 의해 계속 참조가 가능. (Runtime Code에서 Reflection을 통한 참조가 가능)</li>\n</ul>\n</li>\n<li>\n<p>@Target</p>\n<ul>\n<li>Annotation을 선언할 위치를 선택한다.</li>\n<li>ElementType.PACKAGE : 패키지 선언</li>\n<li>ElementType.TYPE : 타입 선언</li>\n<li>ElementType.ANNOTATION_TYPE : 어노테이션 타입 선언</li>\n<li>ElementType.CONSTRUCTOR : 생성자 선언</li>\n<li>ElementType.FIELD : 멤버 변수 선언</li>\n<li>ElementType.LOCAL_VARIABLE : 지역 변수 선언</li>\n<li>ElementType.METHOD : 메서드 선언</li>\n<li>ElementType.PARAMETER : 전달인자 선언</li>\n<li>ElementType.TYPE_PARAMETER : 전달인자 타입 선언</li>\n<li>ElementType.TYPE_USE : 타입 선언</li>\n</ul>\n</li>\n<li>\n<p>@Documented</p>\n<ul>\n<li>해당 어노테이션을 Javadoc에 포함시킨다.</li>\n</ul>\n</li>\n<li>\n<p>@Inherited</p>\n<ul>\n<li>어노테이션의 상속을 가능하게 한다.</li>\n<li>주의 : 어노테이션 끼리의 상속이 아닌 해당 어노테이션을 가지고 있는 클래스를 상속할 경우 자식 클래스도 해당 어노테이션을 가짐을 뜻한다.</li>\n</ul>\n</li>\n<li>\n<p>@Native</p>\n<ul>\n<li>JVM이 설치된 OS의 네이티브 메서드에 의해 참조되는 상수필드에 붙이는 어노테이션이다.</li>\n<li>JNI (Java Native Interface)</li>\n<li>Object, Atomic, file 등</li>\n</ul>\n</li>\n<li>\n<p>@Repeatable</p>\n<ul>\n<li>같은 어노테이션을 중복정의 가능한 @Repeatable 어노테이션을 제공</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// case 1</span></span><br><span class=\"line\"><span class=\"meta\">@GreenColor</span></span><br><span class=\"line\"><span class=\"meta\">@BlueColor</span></span><br><span class=\"line\"><span class=\"meta\">@RedColor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RGBColor</span> </span>&#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// case 2</span></span><br><span class=\"line\"><span class=\"meta\">@Color</span>(colors=&#123;<span class=\"string\">\"green\"</span>, <span class=\"string\">\"blue\"</span>, <span class=\"string\">\"red\"</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RGBColor</span> </span>&#123; ... &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>아래와 같이 하나의 RGB Color가 Color에 속함을 보이고</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Color</span>(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Color</span>(<span class=\"string\">\"blue\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Color</span>(<span class=\"string\">\"red\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RGBColor</span> </span>&#123; ... &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Color 어노테이션과 Colors 어노테이션을 정의해 표현한다.</li>\n</ul>\n<pre class=\"highlight\"><code class=\"java\"> <span class=\"meta\">@Repeatable</span>(value = Colors.class)\n <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> Color {}\n \n <span class=\"meta\">@Target</span>(ElementType.TYPE)\n <span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)\n <span class=\"meta\">@Documented</span>\n <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> Colors {\n     Color[] value();  \n }\n</code></pre>\n<ul>\n<li>참조 :\n<ul>\n<li><a href=\"https://asfirstalways.tistory.com/309\" target=\"_blank\" rel=\"noopener\">https://asfirstalways.tistory.com/309</a></li>\n<li><a href=\"https://jistol.github.io/java/2018/08/31/annotation-repeatable/\" target=\"_blank\" rel=\"noopener\">https://jistol.github.io/java/2018/08/31/annotation-repeatable/</a></li>\n<li><a href=\"https://stackoverflow.com/questions/23973107/how-to-use-inherited-annotation-in-java/23973331\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/23973107/how-to-use-inherited-annotation-in-java/23973331</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"java-annotation\"><a class=\"markdownIt-Anchor\" href=\"#java-annotation\"></a> Java Annotation</h3>\n<ul>\n<li>어노테이션이란 본래 주석이란 뜻</li>\n<li>해석 되는 시점 정의</li>\n<li>주석 대체</li>\n<li>기존 자바 웹 어플리케이션들은 구성과 설정값들을 외부의 XML설정 파일에 명시하는 방법으로 프로그래밍 되었다.<br />\n변경 될 수 있는 코드가 아닌 외부 설정 파일에 분리하기 때문에 재컴파일 없이도 쉽게 변경사항을 적용 할 수 있었지만, 프로그램 작성을 위해 매번 많은 설정을 작성해야 한다는 불편함이 존재했다.</li>\n<li>어노테이션을 사용하면 기존 로직과는 별개로 필요한 정보들을 기입 할 수 있고, 런타임에서 Reflection을 통해 해당 정보를 얻어 올 수 있다.</li>\n<li>문서화 부분은 Javadoc이 존재하기 때문에 많이 사용되지 않으며, 어노테이션의 본질적 목적은 소스 코드에 메타데이터를 표현하는 것이다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target</span>(ElementType.METHOD)</span><br><span class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> CustomAnnotation &#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isCheck</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"keyword\">true</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"meta-annotation\"><a class=\"markdownIt-Anchor\" href=\"#meta-annotation\"></a> Meta Annotation</h3>\n<ul>\n<li>\n<p>@Retention</p>\n<ul>\n<li>Java Compiler가 Annotation을 다루는 방법을 기술하며, 어느 시점까지 영향을 미치는 지 결정하는 값</li>\n<li>RetentionPolicy.SOURCE : 컴파일 전까지 유효 ( 컴파일 이후 클래스 정보에서 삭제)</li>\n<li>RetentionPolicy.CLASS : 컴파일러가 클래스를 참조하기 전까지 유효</li>\n<li>RetentionPolicy.RUNTIME : 컴파일 이후에도 JVM에 의해 계속 참조가 가능. (Runtime Code에서 Reflection을 통한 참조가 가능)</li>\n</ul>\n</li>\n<li>\n<p>@Target</p>\n<ul>\n<li>Annotation을 선언할 위치를 선택한다.</li>\n<li>ElementType.PACKAGE : 패키지 선언</li>\n<li>ElementType.TYPE : 타입 선언</li>\n<li>ElementType.ANNOTATION_TYPE : 어노테이션 타입 선언</li>\n<li>ElementType.CONSTRUCTOR : 생성자 선언</li>\n<li>ElementType.FIELD : 멤버 변수 선언</li>\n<li>ElementType.LOCAL_VARIABLE : 지역 변수 선언</li>\n<li>ElementType.METHOD : 메서드 선언</li>\n<li>ElementType.PARAMETER : 전달인자 선언</li>\n<li>ElementType.TYPE_PARAMETER : 전달인자 타입 선언</li>\n<li>ElementType.TYPE_USE : 타입 선언</li>\n</ul>\n</li>\n<li>\n<p>@Documented</p>\n<ul>\n<li>해당 어노테이션을 Javadoc에 포함시킨다.</li>\n</ul>\n</li>\n<li>\n<p>@Inherited</p>\n<ul>\n<li>어노테이션의 상속을 가능하게 한다.</li>\n<li>주의 : 어노테이션 끼리의 상속이 아닌 해당 어노테이션을 가지고 있는 클래스를 상속할 경우 자식 클래스도 해당 어노테이션을 가짐을 뜻한다.</li>\n</ul>\n</li>\n<li>\n<p>@Native</p>\n<ul>\n<li>JVM이 설치된 OS의 네이티브 메서드에 의해 참조되는 상수필드에 붙이는 어노테이션이다.</li>\n<li>JNI (Java Native Interface)</li>\n<li>Object, Atomic, file 등</li>\n</ul>\n</li>\n<li>\n<p>@Repeatable</p>\n<ul>\n<li>같은 어노테이션을 중복정의 가능한 @Repeatable 어노테이션을 제공</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// case 1</span></span><br><span class=\"line\"><span class=\"meta\">@GreenColor</span></span><br><span class=\"line\"><span class=\"meta\">@BlueColor</span></span><br><span class=\"line\"><span class=\"meta\">@RedColor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RGBColor</span> </span>&#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// case 2</span></span><br><span class=\"line\"><span class=\"meta\">@Color</span>(colors=&#123;<span class=\"string\">\"green\"</span>, <span class=\"string\">\"blue\"</span>, <span class=\"string\">\"red\"</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RGBColor</span> </span>&#123; ... &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>아래와 같이 하나의 RGB Color가 Color에 속함을 보이고</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Color</span>(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Color</span>(<span class=\"string\">\"blue\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Color</span>(<span class=\"string\">\"red\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RGBColor</span> </span>&#123; ... &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Color 어노테이션과 Colors 어노테이션을 정의해 표현한다.</li>\n</ul>\n<pre class=\"highlight\"><code class=\"java\"> <span class=\"meta\">@Repeatable</span>(value = Colors.class)\n <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> Color {}\n \n <span class=\"meta\">@Target</span>(ElementType.TYPE)\n <span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)\n <span class=\"meta\">@Documented</span>\n <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> Colors {\n     Color[] value();  \n }\n</code></pre>\n<ul>\n<li>참조 :\n<ul>\n<li><a href=\"https://asfirstalways.tistory.com/309\" target=\"_blank\" rel=\"noopener\">https://asfirstalways.tistory.com/309</a></li>\n<li><a href=\"https://jistol.github.io/java/2018/08/31/annotation-repeatable/\" target=\"_blank\" rel=\"noopener\">https://jistol.github.io/java/2018/08/31/annotation-repeatable/</a></li>\n<li><a href=\"https://stackoverflow.com/questions/23973107/how-to-use-inherited-annotation-in-java/23973331\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/23973107/how-to-use-inherited-annotation-in-java/23973331</a></li>\n</ul>\n</li>\n</ul>\n"},{"title":"WebAssembly-summit-2020","date":"2020-02-23T07:42:19.000Z","_content":"## Building a new kind of ecosystem\nhttps://webassembly-summit.org/speakers/1/\n- 보안을 강화하기 위한 Web Assembly\n1. Sandboxing\n\n2. Memory model\n- Memory isolation\n\n3. Interface Types\n- exchange high-level values between memories\n- we can isolate the memory between modules without making it too hard to share data\n\n4. WebAssembly System Interface\n- we actually have the concept of permissions baked into them\n- we can give different modules, different permissions to different resource.\n\n- WebAssembly nano process\n- protect from malicious code\n\n- vulnerable code\n\n## Shipping Tiny Web Assembly\n\nhttps://webassembly-summit.org/speakers/2/\n- Sometimes code size is negligible(무시할만한) compared to other factors like asset size\n- Sometimes the magic ability to run an app on the web at all is worth a large code size (ship a framework, VM, etc)\n\n### WebAssembly : An opportunity for Small Code!\n- binary format\n- dead code elimination is possible\n\n### Advice For All ToolChains\n#### 1 slide of obvious stuff\n- Enable compression on the server!\n- Minify your Javascript too!\n- Run Binaryen's wasm-opt\n\n- What It Does (wasm-opt)\n    - Dead code elimination\n    - constant propagation\n    - Inlining\n    - Local optimizations (CoalesceLocals, SimplifyLocals, etc)\n    - memory segment optimization (MemoryPacking)\n    - Structured control flow (ReReloop, RemoveUnusedBrs)\n    - etc\n    \n### Advice for specific Languages & Toolchains\n#### General C/C++\n- If you don't use c++ exceptions, build with -fno-exceptions\n- avoid RTTI if you don't need it, build with -fno-rtti\n- Careful with templates\n- virtual calls may inhibit DCE\n- prefer simple C over C++ standard library\n\n#### Use WEB APIs directly\n- Even better than printf, call a Web API, e.g. using EM_JS:\n \n## JavaScriptCore's new WebAssembly interpreter\nhttps://webassembly-summit.org/speakers/4/\n\n- WebAssembly\n    - BBQ :  View Bytecode Quickly (less optimize)\n    - OMG : Optimize Machine code Generator (full optimize)\n    \nhttps://webkit.org/blog/9329/\n\n## WebAssembly Music\nhttps://webassembly-summit.org/speakers/5/\n\n### Introduction\n- WebAssembly deliver performance for rendering realtime audio\n- Low latency possible with AudioWorklet\n- Let's create a synthesizer and sequencer in WebAssembly\n\n### Background\n\n### Warning\n- Experimenting with synthesizers can produce sudden unexpected very loud noise, witch may damage your hearing\n- Keep the volume low, especially if using headphones\n- Make sure you now where the mute button is :-)\n \n### The Basics\n- The simplest instrument\n- Add to the mix\n\n### App map\n\n### sequencer (same as in 4klang)\n- A simple pattern sequencer\n- Short fixed length patterns\n\n```javascript\n[[0, 0, 0, 0, 0, 0, 0, 0],\n[64, 0, 65, 0, 0, 67, 64, 0],\n[22, 23, 34, 34, 34, 0, 44, 45],\n[22, 33, 0, 0, 34, 0, 44, 55]]\n```\n\n- Track for each instrument with a list of patterns to play\n```javascript\n[[0, 1, 0, 2],\n[1, 1, 3, 3],\n[0, 0, 1, 2]]\n```\n\n- This is all it takes ato orchestrate the instruments\n\n### Generate sequencer data from code\n\n### Record MIDI and generate code\n- While playing, midi input data is stored to patterns\n- If we want to use the recording, we can paste it as code\n- Pattern data is \"reverse engineered\" to javascript code, with durations on the notes instead of repeated hold commands\n\n### AssemblyScript (why did I choose it?)\n- High level readability\n- Low level control\n- Pure WebAssembly output (no additional js lib)\n- Builds optimized for speed and size (Binaryen)\n- Create WEbAssembly binaries in the browser\n- Great for live coding: rapid development, instant results, directly in the browser!\n \n### Synthesizing instruments in AssemblyScript\n - No sample data, just in code\n \n### Data driven or code driven?\n Envelope -> oscillator -> filter -> out\n \n - You can synthesize an instrument by connecting envelopes, oscillators, filters etc.\n - Typical to create a data structure to be interpreted at runtime.\n - With AssemblyScript/WebAssembly we can instead generate and compile the code in the browser\n - Just like modern web-frameworks resolving configuration at compile-time (such as language)\n - Out binary can contain the logic directly rather than an interpreter of data describing the logic\n - Faster and smaller builds, no interpreter overhead\n - Not just for synthesizers but also for e.g smart contracts\n - Compiling is cheap, make pre-configured binaries rather than configuring at runtime.\n  \n ### AudioWorklet\n - The \"proper\" way of using AudioWorklet would be to have one node per instrument and let WebAudio do the orchestration/mixing\n - But then we couldn't have music produced by a single WebAssembly executable binary\n - Made a polyfill for the purpose of serving this app\n - AudioWorklet model of render audio callback for WASI(Web Assembly System Interface)? (Similar to Jack and Core Audio)\n \n ### Sources on github\n https://github.com/petersalomonsen/javascriptmusic\n \n - project contains the WebAssembly music experiment, and also the predecessing javascript music projects for Midi synths and 4klang.\n \n \n ","source":"_posts/WebAssembly-summit-2020.md","raw":"---\ntitle: WebAssembly-summit-2020\ndate: 2020-02-23 16:42:19\ntags:\n---\n## Building a new kind of ecosystem\nhttps://webassembly-summit.org/speakers/1/\n- 보안을 강화하기 위한 Web Assembly\n1. Sandboxing\n\n2. Memory model\n- Memory isolation\n\n3. Interface Types\n- exchange high-level values between memories\n- we can isolate the memory between modules without making it too hard to share data\n\n4. WebAssembly System Interface\n- we actually have the concept of permissions baked into them\n- we can give different modules, different permissions to different resource.\n\n- WebAssembly nano process\n- protect from malicious code\n\n- vulnerable code\n\n## Shipping Tiny Web Assembly\n\nhttps://webassembly-summit.org/speakers/2/\n- Sometimes code size is negligible(무시할만한) compared to other factors like asset size\n- Sometimes the magic ability to run an app on the web at all is worth a large code size (ship a framework, VM, etc)\n\n### WebAssembly : An opportunity for Small Code!\n- binary format\n- dead code elimination is possible\n\n### Advice For All ToolChains\n#### 1 slide of obvious stuff\n- Enable compression on the server!\n- Minify your Javascript too!\n- Run Binaryen's wasm-opt\n\n- What It Does (wasm-opt)\n    - Dead code elimination\n    - constant propagation\n    - Inlining\n    - Local optimizations (CoalesceLocals, SimplifyLocals, etc)\n    - memory segment optimization (MemoryPacking)\n    - Structured control flow (ReReloop, RemoveUnusedBrs)\n    - etc\n    \n### Advice for specific Languages & Toolchains\n#### General C/C++\n- If you don't use c++ exceptions, build with -fno-exceptions\n- avoid RTTI if you don't need it, build with -fno-rtti\n- Careful with templates\n- virtual calls may inhibit DCE\n- prefer simple C over C++ standard library\n\n#### Use WEB APIs directly\n- Even better than printf, call a Web API, e.g. using EM_JS:\n \n## JavaScriptCore's new WebAssembly interpreter\nhttps://webassembly-summit.org/speakers/4/\n\n- WebAssembly\n    - BBQ :  View Bytecode Quickly (less optimize)\n    - OMG : Optimize Machine code Generator (full optimize)\n    \nhttps://webkit.org/blog/9329/\n\n## WebAssembly Music\nhttps://webassembly-summit.org/speakers/5/\n\n### Introduction\n- WebAssembly deliver performance for rendering realtime audio\n- Low latency possible with AudioWorklet\n- Let's create a synthesizer and sequencer in WebAssembly\n\n### Background\n\n### Warning\n- Experimenting with synthesizers can produce sudden unexpected very loud noise, witch may damage your hearing\n- Keep the volume low, especially if using headphones\n- Make sure you now where the mute button is :-)\n \n### The Basics\n- The simplest instrument\n- Add to the mix\n\n### App map\n\n### sequencer (same as in 4klang)\n- A simple pattern sequencer\n- Short fixed length patterns\n\n```javascript\n[[0, 0, 0, 0, 0, 0, 0, 0],\n[64, 0, 65, 0, 0, 67, 64, 0],\n[22, 23, 34, 34, 34, 0, 44, 45],\n[22, 33, 0, 0, 34, 0, 44, 55]]\n```\n\n- Track for each instrument with a list of patterns to play\n```javascript\n[[0, 1, 0, 2],\n[1, 1, 3, 3],\n[0, 0, 1, 2]]\n```\n\n- This is all it takes ato orchestrate the instruments\n\n### Generate sequencer data from code\n\n### Record MIDI and generate code\n- While playing, midi input data is stored to patterns\n- If we want to use the recording, we can paste it as code\n- Pattern data is \"reverse engineered\" to javascript code, with durations on the notes instead of repeated hold commands\n\n### AssemblyScript (why did I choose it?)\n- High level readability\n- Low level control\n- Pure WebAssembly output (no additional js lib)\n- Builds optimized for speed and size (Binaryen)\n- Create WEbAssembly binaries in the browser\n- Great for live coding: rapid development, instant results, directly in the browser!\n \n### Synthesizing instruments in AssemblyScript\n - No sample data, just in code\n \n### Data driven or code driven?\n Envelope -> oscillator -> filter -> out\n \n - You can synthesize an instrument by connecting envelopes, oscillators, filters etc.\n - Typical to create a data structure to be interpreted at runtime.\n - With AssemblyScript/WebAssembly we can instead generate and compile the code in the browser\n - Just like modern web-frameworks resolving configuration at compile-time (such as language)\n - Out binary can contain the logic directly rather than an interpreter of data describing the logic\n - Faster and smaller builds, no interpreter overhead\n - Not just for synthesizers but also for e.g smart contracts\n - Compiling is cheap, make pre-configured binaries rather than configuring at runtime.\n  \n ### AudioWorklet\n - The \"proper\" way of using AudioWorklet would be to have one node per instrument and let WebAudio do the orchestration/mixing\n - But then we couldn't have music produced by a single WebAssembly executable binary\n - Made a polyfill for the purpose of serving this app\n - AudioWorklet model of render audio callback for WASI(Web Assembly System Interface)? (Similar to Jack and Core Audio)\n \n ### Sources on github\n https://github.com/petersalomonsen/javascriptmusic\n \n - project contains the WebAssembly music experiment, and also the predecessing javascript music projects for Midi synths and 4klang.\n \n \n ","slug":"WebAssembly-summit-2020","published":1,"updated":"2020-07-11T04:51:03.328Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513h000aqlvog5oi0zym","content":"<h2 id=\"building-a-new-kind-of-ecosystem\"><a class=\"markdownIt-Anchor\" href=\"#building-a-new-kind-of-ecosystem\"></a> Building a new kind of ecosystem</h2>\n<p><a href=\"https://webassembly-summit.org/speakers/1/\" target=\"_blank\" rel=\"noopener\">https://webassembly-summit.org/speakers/1/</a></p>\n<ul>\n<li>보안을 강화하기 위한 Web Assembly</li>\n</ul>\n<ol>\n<li>\n<p>Sandboxing</p>\n</li>\n<li>\n<p>Memory model</p>\n</li>\n</ol>\n<ul>\n<li>Memory isolation</li>\n</ul>\n<ol start=\"3\">\n<li>Interface Types</li>\n</ol>\n<ul>\n<li>exchange high-level values between memories</li>\n<li>we can isolate the memory between modules without making it too hard to share data</li>\n</ul>\n<ol start=\"4\">\n<li>WebAssembly System Interface</li>\n</ol>\n<ul>\n<li>\n<p>we actually have the concept of permissions baked into them</p>\n</li>\n<li>\n<p>we can give different modules, different permissions to different resource.</p>\n</li>\n<li>\n<p>WebAssembly nano process</p>\n</li>\n<li>\n<p>protect from malicious code</p>\n</li>\n<li>\n<p>vulnerable code</p>\n</li>\n</ul>\n<h2 id=\"shipping-tiny-web-assembly\"><a class=\"markdownIt-Anchor\" href=\"#shipping-tiny-web-assembly\"></a> Shipping Tiny Web Assembly</h2>\n<p><a href=\"https://webassembly-summit.org/speakers/2/\" target=\"_blank\" rel=\"noopener\">https://webassembly-summit.org/speakers/2/</a></p>\n<ul>\n<li>Sometimes code size is negligible(무시할만한) compared to other factors like asset size</li>\n<li>Sometimes the magic ability to run an app on the web at all is worth a large code size (ship a framework, VM, etc)</li>\n</ul>\n<h3 id=\"webassembly-an-opportunity-for-small-code\"><a class=\"markdownIt-Anchor\" href=\"#webassembly-an-opportunity-for-small-code\"></a> WebAssembly : An opportunity for Small Code!</h3>\n<ul>\n<li>binary format</li>\n<li>dead code elimination is possible</li>\n</ul>\n<h3 id=\"advice-for-all-toolchains\"><a class=\"markdownIt-Anchor\" href=\"#advice-for-all-toolchains\"></a> Advice For All ToolChains</h3>\n<h4 id=\"1-slide-of-obvious-stuff\"><a class=\"markdownIt-Anchor\" href=\"#1-slide-of-obvious-stuff\"></a> 1 slide of obvious stuff</h4>\n<ul>\n<li>\n<p>Enable compression on the server!</p>\n</li>\n<li>\n<p>Minify your Javascript too!</p>\n</li>\n<li>\n<p>Run Binaryen’s wasm-opt</p>\n</li>\n<li>\n<p>What It Does (wasm-opt)</p>\n<ul>\n<li>Dead code elimination</li>\n<li>constant propagation</li>\n<li>Inlining</li>\n<li>Local optimizations (CoalesceLocals, SimplifyLocals, etc)</li>\n<li>memory segment optimization (MemoryPacking)</li>\n<li>Structured control flow (ReReloop, RemoveUnusedBrs)</li>\n<li>etc</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"advice-for-specific-languages-toolchains\"><a class=\"markdownIt-Anchor\" href=\"#advice-for-specific-languages-toolchains\"></a> Advice for specific Languages &amp; Toolchains</h3>\n<h4 id=\"general-cc\"><a class=\"markdownIt-Anchor\" href=\"#general-cc\"></a> General C/C++</h4>\n<ul>\n<li>If you don’t use c++ exceptions, build with -fno-exceptions</li>\n<li>avoid RTTI if you don’t need it, build with -fno-rtti</li>\n<li>Careful with templates</li>\n<li>virtual calls may inhibit DCE</li>\n<li>prefer simple C over C++ standard library</li>\n</ul>\n<h4 id=\"use-web-apis-directly\"><a class=\"markdownIt-Anchor\" href=\"#use-web-apis-directly\"></a> Use WEB APIs directly</h4>\n<ul>\n<li>Even better than printf, call a Web API, e.g. using EM_JS:</li>\n</ul>\n<h2 id=\"javascriptcores-new-webassembly-interpreter\"><a class=\"markdownIt-Anchor\" href=\"#javascriptcores-new-webassembly-interpreter\"></a> JavaScriptCore’s new WebAssembly interpreter</h2>\n<p><a href=\"https://webassembly-summit.org/speakers/4/\" target=\"_blank\" rel=\"noopener\">https://webassembly-summit.org/speakers/4/</a></p>\n<ul>\n<li>WebAssembly\n<ul>\n<li>BBQ :  View Bytecode Quickly (less optimize)</li>\n<li>OMG : Optimize Machine code Generator (full optimize)</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://webkit.org/blog/9329/\" target=\"_blank\" rel=\"noopener\">https://webkit.org/blog/9329/</a></p>\n<h2 id=\"webassembly-music\"><a class=\"markdownIt-Anchor\" href=\"#webassembly-music\"></a> WebAssembly Music</h2>\n<p><a href=\"https://webassembly-summit.org/speakers/5/\" target=\"_blank\" rel=\"noopener\">https://webassembly-summit.org/speakers/5/</a></p>\n<h3 id=\"introduction\"><a class=\"markdownIt-Anchor\" href=\"#introduction\"></a> Introduction</h3>\n<ul>\n<li>WebAssembly deliver performance for rendering realtime audio</li>\n<li>Low latency possible with AudioWorklet</li>\n<li>Let’s create a synthesizer and sequencer in WebAssembly</li>\n</ul>\n<h3 id=\"background\"><a class=\"markdownIt-Anchor\" href=\"#background\"></a> Background</h3>\n<h3 id=\"warning\"><a class=\"markdownIt-Anchor\" href=\"#warning\"></a> Warning</h3>\n<ul>\n<li>Experimenting with synthesizers can produce sudden unexpected very loud noise, witch may damage your hearing</li>\n<li>Keep the volume low, especially if using headphones</li>\n<li>Make sure you now where the mute button is 😃</li>\n</ul>\n<h3 id=\"the-basics\"><a class=\"markdownIt-Anchor\" href=\"#the-basics\"></a> The Basics</h3>\n<ul>\n<li>The simplest instrument</li>\n<li>Add to the mix</li>\n</ul>\n<h3 id=\"app-map\"><a class=\"markdownIt-Anchor\" href=\"#app-map\"></a> App map</h3>\n<h3 id=\"sequencer-same-as-in-4klang\"><a class=\"markdownIt-Anchor\" href=\"#sequencer-same-as-in-4klang\"></a> sequencer (same as in 4klang)</h3>\n<ul>\n<li>A simple pattern sequencer</li>\n<li>Short fixed length patterns</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">64</span>, <span class=\"number\">0</span>, <span class=\"number\">65</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">67</span>, <span class=\"number\">64</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">22</span>, <span class=\"number\">23</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">0</span>, <span class=\"number\">44</span>, <span class=\"number\">45</span>],</span><br><span class=\"line\">[<span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">34</span>, <span class=\"number\">0</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>]]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Track for each instrument with a list of patterns to play</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>],</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>This is all it takes ato orchestrate the instruments</li>\n</ul>\n<h3 id=\"generate-sequencer-data-from-code\"><a class=\"markdownIt-Anchor\" href=\"#generate-sequencer-data-from-code\"></a> Generate sequencer data from code</h3>\n<h3 id=\"record-midi-and-generate-code\"><a class=\"markdownIt-Anchor\" href=\"#record-midi-and-generate-code\"></a> Record MIDI and generate code</h3>\n<ul>\n<li>While playing, midi input data is stored to patterns</li>\n<li>If we want to use the recording, we can paste it as code</li>\n<li>Pattern data is “reverse engineered” to javascript code, with durations on the notes instead of repeated hold commands</li>\n</ul>\n<h3 id=\"assemblyscript-why-did-i-choose-it\"><a class=\"markdownIt-Anchor\" href=\"#assemblyscript-why-did-i-choose-it\"></a> AssemblyScript (why did I choose it?)</h3>\n<ul>\n<li>High level readability</li>\n<li>Low level control</li>\n<li>Pure WebAssembly output (no additional js lib)</li>\n<li>Builds optimized for speed and size (Binaryen)</li>\n<li>Create WEbAssembly binaries in the browser</li>\n<li>Great for live coding: rapid development, instant results, directly in the browser!</li>\n</ul>\n<h3 id=\"synthesizing-instruments-in-assemblyscript\"><a class=\"markdownIt-Anchor\" href=\"#synthesizing-instruments-in-assemblyscript\"></a> Synthesizing instruments in AssemblyScript</h3>\n<ul>\n<li>No sample data, just in code</li>\n</ul>\n<h3 id=\"data-driven-or-code-driven\"><a class=\"markdownIt-Anchor\" href=\"#data-driven-or-code-driven\"></a> Data driven or code driven?</h3>\n<p>Envelope -&gt; oscillator -&gt; filter -&gt; out</p>\n<ul>\n<li>You can synthesize an instrument by connecting envelopes, oscillators, filters etc.</li>\n<li>Typical to create a data structure to be interpreted at runtime.</li>\n<li>With AssemblyScript/WebAssembly we can instead generate and compile the code in the browser</li>\n<li>Just like modern web-frameworks resolving configuration at compile-time (such as language)</li>\n<li>Out binary can contain the logic directly rather than an interpreter of data describing the logic</li>\n<li>Faster and smaller builds, no interpreter overhead</li>\n<li>Not just for synthesizers but also for e.g smart contracts</li>\n<li>Compiling is cheap, make pre-configured binaries rather than configuring at runtime.</li>\n</ul>\n<h3 id=\"audioworklet\"><a class=\"markdownIt-Anchor\" href=\"#audioworklet\"></a> AudioWorklet</h3>\n<ul>\n<li>The “proper” way of using AudioWorklet would be to have one node per instrument and let WebAudio do the orchestration/mixing</li>\n<li>But then we couldn’t have music produced by a single WebAssembly executable binary</li>\n<li>Made a polyfill for the purpose of serving this app</li>\n<li>AudioWorklet model of render audio callback for WASI(Web Assembly System Interface)? (Similar to Jack and Core Audio)</li>\n</ul>\n<h3 id=\"sources-on-github\"><a class=\"markdownIt-Anchor\" href=\"#sources-on-github\"></a> Sources on github</h3>\n<p><a href=\"https://github.com/petersalomonsen/javascriptmusic\" target=\"_blank\" rel=\"noopener\">https://github.com/petersalomonsen/javascriptmusic</a></p>\n<ul>\n<li>project contains the WebAssembly music experiment, and also the predecessing javascript music projects for Midi synths and 4klang.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"building-a-new-kind-of-ecosystem\"><a class=\"markdownIt-Anchor\" href=\"#building-a-new-kind-of-ecosystem\"></a> Building a new kind of ecosystem</h2>\n<p><a href=\"https://webassembly-summit.org/speakers/1/\" target=\"_blank\" rel=\"noopener\">https://webassembly-summit.org/speakers/1/</a></p>\n<ul>\n<li>보안을 강화하기 위한 Web Assembly</li>\n</ul>\n<ol>\n<li>\n<p>Sandboxing</p>\n</li>\n<li>\n<p>Memory model</p>\n</li>\n</ol>\n<ul>\n<li>Memory isolation</li>\n</ul>\n<ol start=\"3\">\n<li>Interface Types</li>\n</ol>\n<ul>\n<li>exchange high-level values between memories</li>\n<li>we can isolate the memory between modules without making it too hard to share data</li>\n</ul>\n<ol start=\"4\">\n<li>WebAssembly System Interface</li>\n</ol>\n<ul>\n<li>\n<p>we actually have the concept of permissions baked into them</p>\n</li>\n<li>\n<p>we can give different modules, different permissions to different resource.</p>\n</li>\n<li>\n<p>WebAssembly nano process</p>\n</li>\n<li>\n<p>protect from malicious code</p>\n</li>\n<li>\n<p>vulnerable code</p>\n</li>\n</ul>\n<h2 id=\"shipping-tiny-web-assembly\"><a class=\"markdownIt-Anchor\" href=\"#shipping-tiny-web-assembly\"></a> Shipping Tiny Web Assembly</h2>\n<p><a href=\"https://webassembly-summit.org/speakers/2/\" target=\"_blank\" rel=\"noopener\">https://webassembly-summit.org/speakers/2/</a></p>\n<ul>\n<li>Sometimes code size is negligible(무시할만한) compared to other factors like asset size</li>\n<li>Sometimes the magic ability to run an app on the web at all is worth a large code size (ship a framework, VM, etc)</li>\n</ul>\n<h3 id=\"webassembly-an-opportunity-for-small-code\"><a class=\"markdownIt-Anchor\" href=\"#webassembly-an-opportunity-for-small-code\"></a> WebAssembly : An opportunity for Small Code!</h3>\n<ul>\n<li>binary format</li>\n<li>dead code elimination is possible</li>\n</ul>\n<h3 id=\"advice-for-all-toolchains\"><a class=\"markdownIt-Anchor\" href=\"#advice-for-all-toolchains\"></a> Advice For All ToolChains</h3>\n<h4 id=\"1-slide-of-obvious-stuff\"><a class=\"markdownIt-Anchor\" href=\"#1-slide-of-obvious-stuff\"></a> 1 slide of obvious stuff</h4>\n<ul>\n<li>\n<p>Enable compression on the server!</p>\n</li>\n<li>\n<p>Minify your Javascript too!</p>\n</li>\n<li>\n<p>Run Binaryen’s wasm-opt</p>\n</li>\n<li>\n<p>What It Does (wasm-opt)</p>\n<ul>\n<li>Dead code elimination</li>\n<li>constant propagation</li>\n<li>Inlining</li>\n<li>Local optimizations (CoalesceLocals, SimplifyLocals, etc)</li>\n<li>memory segment optimization (MemoryPacking)</li>\n<li>Structured control flow (ReReloop, RemoveUnusedBrs)</li>\n<li>etc</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"advice-for-specific-languages-toolchains\"><a class=\"markdownIt-Anchor\" href=\"#advice-for-specific-languages-toolchains\"></a> Advice for specific Languages &amp; Toolchains</h3>\n<h4 id=\"general-cc\"><a class=\"markdownIt-Anchor\" href=\"#general-cc\"></a> General C/C++</h4>\n<ul>\n<li>If you don’t use c++ exceptions, build with -fno-exceptions</li>\n<li>avoid RTTI if you don’t need it, build with -fno-rtti</li>\n<li>Careful with templates</li>\n<li>virtual calls may inhibit DCE</li>\n<li>prefer simple C over C++ standard library</li>\n</ul>\n<h4 id=\"use-web-apis-directly\"><a class=\"markdownIt-Anchor\" href=\"#use-web-apis-directly\"></a> Use WEB APIs directly</h4>\n<ul>\n<li>Even better than printf, call a Web API, e.g. using EM_JS:</li>\n</ul>\n<h2 id=\"javascriptcores-new-webassembly-interpreter\"><a class=\"markdownIt-Anchor\" href=\"#javascriptcores-new-webassembly-interpreter\"></a> JavaScriptCore’s new WebAssembly interpreter</h2>\n<p><a href=\"https://webassembly-summit.org/speakers/4/\" target=\"_blank\" rel=\"noopener\">https://webassembly-summit.org/speakers/4/</a></p>\n<ul>\n<li>WebAssembly\n<ul>\n<li>BBQ :  View Bytecode Quickly (less optimize)</li>\n<li>OMG : Optimize Machine code Generator (full optimize)</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://webkit.org/blog/9329/\" target=\"_blank\" rel=\"noopener\">https://webkit.org/blog/9329/</a></p>\n<h2 id=\"webassembly-music\"><a class=\"markdownIt-Anchor\" href=\"#webassembly-music\"></a> WebAssembly Music</h2>\n<p><a href=\"https://webassembly-summit.org/speakers/5/\" target=\"_blank\" rel=\"noopener\">https://webassembly-summit.org/speakers/5/</a></p>\n<h3 id=\"introduction\"><a class=\"markdownIt-Anchor\" href=\"#introduction\"></a> Introduction</h3>\n<ul>\n<li>WebAssembly deliver performance for rendering realtime audio</li>\n<li>Low latency possible with AudioWorklet</li>\n<li>Let’s create a synthesizer and sequencer in WebAssembly</li>\n</ul>\n<h3 id=\"background\"><a class=\"markdownIt-Anchor\" href=\"#background\"></a> Background</h3>\n<h3 id=\"warning\"><a class=\"markdownIt-Anchor\" href=\"#warning\"></a> Warning</h3>\n<ul>\n<li>Experimenting with synthesizers can produce sudden unexpected very loud noise, witch may damage your hearing</li>\n<li>Keep the volume low, especially if using headphones</li>\n<li>Make sure you now where the mute button is 😃</li>\n</ul>\n<h3 id=\"the-basics\"><a class=\"markdownIt-Anchor\" href=\"#the-basics\"></a> The Basics</h3>\n<ul>\n<li>The simplest instrument</li>\n<li>Add to the mix</li>\n</ul>\n<h3 id=\"app-map\"><a class=\"markdownIt-Anchor\" href=\"#app-map\"></a> App map</h3>\n<h3 id=\"sequencer-same-as-in-4klang\"><a class=\"markdownIt-Anchor\" href=\"#sequencer-same-as-in-4klang\"></a> sequencer (same as in 4klang)</h3>\n<ul>\n<li>A simple pattern sequencer</li>\n<li>Short fixed length patterns</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">64</span>, <span class=\"number\">0</span>, <span class=\"number\">65</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">67</span>, <span class=\"number\">64</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">22</span>, <span class=\"number\">23</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">0</span>, <span class=\"number\">44</span>, <span class=\"number\">45</span>],</span><br><span class=\"line\">[<span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">34</span>, <span class=\"number\">0</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>]]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Track for each instrument with a list of patterns to play</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>],</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>This is all it takes ato orchestrate the instruments</li>\n</ul>\n<h3 id=\"generate-sequencer-data-from-code\"><a class=\"markdownIt-Anchor\" href=\"#generate-sequencer-data-from-code\"></a> Generate sequencer data from code</h3>\n<h3 id=\"record-midi-and-generate-code\"><a class=\"markdownIt-Anchor\" href=\"#record-midi-and-generate-code\"></a> Record MIDI and generate code</h3>\n<ul>\n<li>While playing, midi input data is stored to patterns</li>\n<li>If we want to use the recording, we can paste it as code</li>\n<li>Pattern data is “reverse engineered” to javascript code, with durations on the notes instead of repeated hold commands</li>\n</ul>\n<h3 id=\"assemblyscript-why-did-i-choose-it\"><a class=\"markdownIt-Anchor\" href=\"#assemblyscript-why-did-i-choose-it\"></a> AssemblyScript (why did I choose it?)</h3>\n<ul>\n<li>High level readability</li>\n<li>Low level control</li>\n<li>Pure WebAssembly output (no additional js lib)</li>\n<li>Builds optimized for speed and size (Binaryen)</li>\n<li>Create WEbAssembly binaries in the browser</li>\n<li>Great for live coding: rapid development, instant results, directly in the browser!</li>\n</ul>\n<h3 id=\"synthesizing-instruments-in-assemblyscript\"><a class=\"markdownIt-Anchor\" href=\"#synthesizing-instruments-in-assemblyscript\"></a> Synthesizing instruments in AssemblyScript</h3>\n<ul>\n<li>No sample data, just in code</li>\n</ul>\n<h3 id=\"data-driven-or-code-driven\"><a class=\"markdownIt-Anchor\" href=\"#data-driven-or-code-driven\"></a> Data driven or code driven?</h3>\n<p>Envelope -&gt; oscillator -&gt; filter -&gt; out</p>\n<ul>\n<li>You can synthesize an instrument by connecting envelopes, oscillators, filters etc.</li>\n<li>Typical to create a data structure to be interpreted at runtime.</li>\n<li>With AssemblyScript/WebAssembly we can instead generate and compile the code in the browser</li>\n<li>Just like modern web-frameworks resolving configuration at compile-time (such as language)</li>\n<li>Out binary can contain the logic directly rather than an interpreter of data describing the logic</li>\n<li>Faster and smaller builds, no interpreter overhead</li>\n<li>Not just for synthesizers but also for e.g smart contracts</li>\n<li>Compiling is cheap, make pre-configured binaries rather than configuring at runtime.</li>\n</ul>\n<h3 id=\"audioworklet\"><a class=\"markdownIt-Anchor\" href=\"#audioworklet\"></a> AudioWorklet</h3>\n<ul>\n<li>The “proper” way of using AudioWorklet would be to have one node per instrument and let WebAudio do the orchestration/mixing</li>\n<li>But then we couldn’t have music produced by a single WebAssembly executable binary</li>\n<li>Made a polyfill for the purpose of serving this app</li>\n<li>AudioWorklet model of render audio callback for WASI(Web Assembly System Interface)? (Similar to Jack and Core Audio)</li>\n</ul>\n<h3 id=\"sources-on-github\"><a class=\"markdownIt-Anchor\" href=\"#sources-on-github\"></a> Sources on github</h3>\n<p><a href=\"https://github.com/petersalomonsen/javascriptmusic\" target=\"_blank\" rel=\"noopener\">https://github.com/petersalomonsen/javascriptmusic</a></p>\n<ul>\n<li>project contains the WebAssembly music experiment, and also the predecessing javascript music projects for Midi synths and 4klang.</li>\n</ul>\n"},{"title":"apache-ignite-spring-boot","date":"2020-02-18T13:00:35.000Z","_content":"cache도 전략 및 패턴을 좀 봐야함\n\nhttps://brunch.co.kr/@springboot/151\nhttps://www.slideshare.net/ssuser373c87/accelerate-spring-boot-application-with-apache-ignite\nhttps://github.com/iyboklee/boot-cache-ignite\nhttps://github.com/iyboklee/boot-data-ignite\nhttps://github.com/iyboklee/boot-rw-through-ignite\n","source":"_posts/apache-ignite-spring-boot.md","raw":"---\ntitle: apache-ignite-spring-boot\ndate: 2020-02-18 22:00:35\ntags: \n- Java \n- Spring\ncategories:\n- Java\n- Cache\n---\ncache도 전략 및 패턴을 좀 봐야함\n\nhttps://brunch.co.kr/@springboot/151\nhttps://www.slideshare.net/ssuser373c87/accelerate-spring-boot-application-with-apache-ignite\nhttps://github.com/iyboklee/boot-cache-ignite\nhttps://github.com/iyboklee/boot-data-ignite\nhttps://github.com/iyboklee/boot-rw-through-ignite\n","slug":"apache-ignite-spring-boot","published":1,"updated":"2020-07-11T04:51:03.330Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513l000dqlvo7x1cad82","content":"<p>cache도 전략 및 패턴을 좀 봐야함</p>\n<p><a href=\"https://brunch.co.kr/@springboot/151\" target=\"_blank\" rel=\"noopener\">https://brunch.co.kr/@springboot/151</a><br />\n<a href=\"https://www.slideshare.net/ssuser373c87/accelerate-spring-boot-application-with-apache-ignite\" target=\"_blank\" rel=\"noopener\">https://www.slideshare.net/ssuser373c87/accelerate-spring-boot-application-with-apache-ignite</a><br />\n<a href=\"https://github.com/iyboklee/boot-cache-ignite\" target=\"_blank\" rel=\"noopener\">https://github.com/iyboklee/boot-cache-ignite</a><br />\n<a href=\"https://github.com/iyboklee/boot-data-ignite\" target=\"_blank\" rel=\"noopener\">https://github.com/iyboklee/boot-data-ignite</a><br />\n<a href=\"https://github.com/iyboklee/boot-rw-through-ignite\" target=\"_blank\" rel=\"noopener\">https://github.com/iyboklee/boot-rw-through-ignite</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>cache도 전략 및 패턴을 좀 봐야함</p>\n<p><a href=\"https://brunch.co.kr/@springboot/151\" target=\"_blank\" rel=\"noopener\">https://brunch.co.kr/@springboot/151</a><br />\n<a href=\"https://www.slideshare.net/ssuser373c87/accelerate-spring-boot-application-with-apache-ignite\" target=\"_blank\" rel=\"noopener\">https://www.slideshare.net/ssuser373c87/accelerate-spring-boot-application-with-apache-ignite</a><br />\n<a href=\"https://github.com/iyboklee/boot-cache-ignite\" target=\"_blank\" rel=\"noopener\">https://github.com/iyboklee/boot-cache-ignite</a><br />\n<a href=\"https://github.com/iyboklee/boot-data-ignite\" target=\"_blank\" rel=\"noopener\">https://github.com/iyboklee/boot-data-ignite</a><br />\n<a href=\"https://github.com/iyboklee/boot-rw-through-ignite\" target=\"_blank\" rel=\"noopener\">https://github.com/iyboklee/boot-rw-through-ignite</a></p>\n"},{"title":"blog-migration-gatsby","date":"2020-04-19T13:44:14.000Z","_content":"\nhttps://github.com/JaeYeopHan/gatsby-starter-bee\nhttps://rinae.dev/posts/creating-new-blog-with-gatsby\nhttps://dev.kyoungah.com/2019-07-04-blog-migration/","source":"_posts/blog-migration-gatsby.md","raw":"---\ntitle: blog-migration-gatsby\ndate: 2020-04-19 22:44:14\ntags:\n---\n\nhttps://github.com/JaeYeopHan/gatsby-starter-bee\nhttps://rinae.dev/posts/creating-new-blog-with-gatsby\nhttps://dev.kyoungah.com/2019-07-04-blog-migration/","slug":"blog-migration-gatsby","published":1,"updated":"2020-07-11T04:51:03.331Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513n000fqlvoc0h1dz1s","content":"<p><a href=\"https://github.com/JaeYeopHan/gatsby-starter-bee\" target=\"_blank\" rel=\"noopener\">https://github.com/JaeYeopHan/gatsby-starter-bee</a><br />\n<a href=\"https://rinae.dev/posts/creating-new-blog-with-gatsby\" target=\"_blank\" rel=\"noopener\">https://rinae.dev/posts/creating-new-blog-with-gatsby</a><br />\n<a href=\"https://dev.kyoungah.com/2019-07-04-blog-migration/\" target=\"_blank\" rel=\"noopener\">https://dev.kyoungah.com/2019-07-04-blog-migration/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/JaeYeopHan/gatsby-starter-bee\" target=\"_blank\" rel=\"noopener\">https://github.com/JaeYeopHan/gatsby-starter-bee</a><br />\n<a href=\"https://rinae.dev/posts/creating-new-blog-with-gatsby\" target=\"_blank\" rel=\"noopener\">https://rinae.dev/posts/creating-new-blog-with-gatsby</a><br />\n<a href=\"https://dev.kyoungah.com/2019-07-04-blog-migration/\" target=\"_blank\" rel=\"noopener\">https://dev.kyoungah.com/2019-07-04-blog-migration/</a></p>\n"},{"title":"cryptography-birthday-attack","date":"2020-04-08T11:43:42.000Z","_content":"### 비둘기집의 원리\n- n+1개읜 물건을 n개의 상재에 넣을 때 적어도 어느 한 상자에는 두 개 이상의 물건이 들어 있다는 원리를 말한다.\n- 비둘기와 비둘기집의 형태로 비유되어 쓰이며, '서랍-양말'로 비유하여 서랍원칙으로 나타내기도 한다.\n- n개의 비둘기집과 n+1마리의 비둘기가 있다고 가정한다.\n  만약 각 비둘기집에 한 마리 이하의 비둘기만 들어 있다면, 전체 비둘기집에는 많아야 n마리의 비둘기가 존재한다. \n  그런데 비둘기는 모두n+1마리이므로, 이것은 모순이다. 따라서 어느 비둘기집에는 두 마리 이상의 비둘기가 있다.\n  \n### 일반화\n- n개의 별개의 사물을 m개의 용기에 나누어 담으면 적어도 한 개의 용기는 $\\begin{bmatrix}\\frac{n}{m}\\end{bmatrix}$  이상의 사물을 담고 있어야 한다. \n    (여기서, $\\begin{bmatrix}{x}\\end{bmatrix}$는 x보다 작지 않은 최소 정수를 의미한다.)\n\n- 확률론적으로 일반화 된 비둘기집 원리는 다음과 같다.\n    $\\frac{1}{m}$의 균일한 확률로 n개의 비둘기를 무작위로 m개의 비둘기집에 넣었다면 확률적으로 적어도 하나의 비둘기집에 두마리 이상의 비둘기가 들어가게 된다.\n    $1-{\\frac  {m!}{(m-n)!\\;m^{n}}}=1-{\\frac  {m(m-1)(m-2)\\cdots (m-n+1)}{m^{n}}}\\!$\n\n- 비둘기의 수가 비둘기집의 수를 초과하지 않는다 하더라도, 비둘기 분배의 무작위적인 성질에 의하여 종종 상당한 확률로 충돌이 일어난다.\n\n### Birthday Problem\n- 사람이 임의로 모였을 때 그 중에 생일이 같은 두명이 존재할 확률을 구하는 문제\n- 생일의 가능한 가짓수는 366개 이므로 366명 이상의 사람이 모인다면 비둘기집 원리에 따라 생일이 같은 두 명이 반드시 존재\n- 생일이 같은 두 사람을 찾는 것과 비슷하게, 암호학적 해시 결과가 같은(해시 충돌) 두 입력값을 찾는 것 역시 모든 입력값을 계산하지 않아도 충분히 높은 확률로 해시 충돌을 찾을 수 있다. \n    이러한 암호 공격을 생일 공격(birthday attack)이라고 부른다.\n\n### 확률 계산    \n- n명의 사람이 있을 때 그 중 생일이 같은 사람이 둘 이상 있을 확률을 ${p(n)}$ 이라고 한다면, 반대로 모든 사람의 생일이 다를 확률 \n    $\\overline{p}{(n)}$은 $1-{p(n)}$ 이 된다. $\\overline{p}{(n)}$을 구해보면 두번째 사람의 생일은 첫 번째 사람과 다르고, 세 번째 사람의 생일은 첫번째와 두번째 모두와 달라야 한다.\n    최종적으로 구하고자 하는 생일이 같은 사람이 둘 이상 있을 확률 ${p(n)}$은\n    ${p(n)} = 1 - {\\frac{365!}{365^n * (365-n)!}}$ 가 된다. 여기서, ${n\\leqq365}$ 인 자연수이고, !는 계승을 의미한다.\n    여기서 ${p(n)}$ 값을 특정 n 값에 대해 계산하면 다음과 같다.\n\n  \n|n|${p(n)}$|\n|:-:|:--------:|\n|1|0.0%| \n|5|2.7%|\n|10|11.7%|\n|20|41.1%|\n|23|50.7%|\n|30|70.6%|\n|40|89.1%|\n|50|97.0%|\n|60|99.4%|\n|70|99.9%|\n|100|99.99997%|\n\n- 즉 23명 이상 모이면 같은 확률이 50% 이상이고, 100명이 모이면 거의 1에 가까워지는것을 알 수 있다.\n\n\n","source":"_posts/cryptography-birthday-attack.md","raw":"---\ntitle: cryptography-birthday-attack\ndate: 2020-04-08 20:43:42\ntags:\n- hash\ncategories:\n- cryptography\n---\n### 비둘기집의 원리\n- n+1개읜 물건을 n개의 상재에 넣을 때 적어도 어느 한 상자에는 두 개 이상의 물건이 들어 있다는 원리를 말한다.\n- 비둘기와 비둘기집의 형태로 비유되어 쓰이며, '서랍-양말'로 비유하여 서랍원칙으로 나타내기도 한다.\n- n개의 비둘기집과 n+1마리의 비둘기가 있다고 가정한다.\n  만약 각 비둘기집에 한 마리 이하의 비둘기만 들어 있다면, 전체 비둘기집에는 많아야 n마리의 비둘기가 존재한다. \n  그런데 비둘기는 모두n+1마리이므로, 이것은 모순이다. 따라서 어느 비둘기집에는 두 마리 이상의 비둘기가 있다.\n  \n### 일반화\n- n개의 별개의 사물을 m개의 용기에 나누어 담으면 적어도 한 개의 용기는 $\\begin{bmatrix}\\frac{n}{m}\\end{bmatrix}$  이상의 사물을 담고 있어야 한다. \n    (여기서, $\\begin{bmatrix}{x}\\end{bmatrix}$는 x보다 작지 않은 최소 정수를 의미한다.)\n\n- 확률론적으로 일반화 된 비둘기집 원리는 다음과 같다.\n    $\\frac{1}{m}$의 균일한 확률로 n개의 비둘기를 무작위로 m개의 비둘기집에 넣었다면 확률적으로 적어도 하나의 비둘기집에 두마리 이상의 비둘기가 들어가게 된다.\n    $1-{\\frac  {m!}{(m-n)!\\;m^{n}}}=1-{\\frac  {m(m-1)(m-2)\\cdots (m-n+1)}{m^{n}}}\\!$\n\n- 비둘기의 수가 비둘기집의 수를 초과하지 않는다 하더라도, 비둘기 분배의 무작위적인 성질에 의하여 종종 상당한 확률로 충돌이 일어난다.\n\n### Birthday Problem\n- 사람이 임의로 모였을 때 그 중에 생일이 같은 두명이 존재할 확률을 구하는 문제\n- 생일의 가능한 가짓수는 366개 이므로 366명 이상의 사람이 모인다면 비둘기집 원리에 따라 생일이 같은 두 명이 반드시 존재\n- 생일이 같은 두 사람을 찾는 것과 비슷하게, 암호학적 해시 결과가 같은(해시 충돌) 두 입력값을 찾는 것 역시 모든 입력값을 계산하지 않아도 충분히 높은 확률로 해시 충돌을 찾을 수 있다. \n    이러한 암호 공격을 생일 공격(birthday attack)이라고 부른다.\n\n### 확률 계산    \n- n명의 사람이 있을 때 그 중 생일이 같은 사람이 둘 이상 있을 확률을 ${p(n)}$ 이라고 한다면, 반대로 모든 사람의 생일이 다를 확률 \n    $\\overline{p}{(n)}$은 $1-{p(n)}$ 이 된다. $\\overline{p}{(n)}$을 구해보면 두번째 사람의 생일은 첫 번째 사람과 다르고, 세 번째 사람의 생일은 첫번째와 두번째 모두와 달라야 한다.\n    최종적으로 구하고자 하는 생일이 같은 사람이 둘 이상 있을 확률 ${p(n)}$은\n    ${p(n)} = 1 - {\\frac{365!}{365^n * (365-n)!}}$ 가 된다. 여기서, ${n\\leqq365}$ 인 자연수이고, !는 계승을 의미한다.\n    여기서 ${p(n)}$ 값을 특정 n 값에 대해 계산하면 다음과 같다.\n\n  \n|n|${p(n)}$|\n|:-:|:--------:|\n|1|0.0%| \n|5|2.7%|\n|10|11.7%|\n|20|41.1%|\n|23|50.7%|\n|30|70.6%|\n|40|89.1%|\n|50|97.0%|\n|60|99.4%|\n|70|99.9%|\n|100|99.99997%|\n\n- 즉 23명 이상 모이면 같은 확률이 50% 이상이고, 100명이 모이면 거의 1에 가까워지는것을 알 수 있다.\n\n\n","slug":"cryptography-birthday-attack","published":1,"updated":"2020-07-11T04:51:03.331Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513p000hqlvo1sap5xw0","content":"<h3 id=\"비둘기집의-원리\"><a class=\"markdownIt-Anchor\" href=\"#비둘기집의-원리\"></a> 비둘기집의 원리</h3>\n<ul>\n<li>n+1개읜 물건을 n개의 상재에 넣을 때 적어도 어느 한 상자에는 두 개 이상의 물건이 들어 있다는 원리를 말한다.</li>\n<li>비둘기와 비둘기집의 형태로 비유되어 쓰이며, '서랍-양말’로 비유하여 서랍원칙으로 나타내기도 한다.</li>\n<li>n개의 비둘기집과 n+1마리의 비둘기가 있다고 가정한다.<br />\n만약 각 비둘기집에 한 마리 이하의 비둘기만 들어 있다면, 전체 비둘기집에는 많아야 n마리의 비둘기가 존재한다.<br />\n그런데 비둘기는 모두n+1마리이므로, 이것은 모순이다. 따라서 어느 비둘기집에는 두 마리 이상의 비둘기가 있다.</li>\n</ul>\n<h3 id=\"일반화\"><a class=\"markdownIt-Anchor\" href=\"#일반화\"></a> 일반화</h3>\n<ul>\n<li>\n<p>n개의 별개의 사물을 m개의 용기에 나누어 담으면 적어도 한 개의 용기는 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mfrac><mi>n</mi><mi>m</mi></mfrac></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}\\frac{n}{m}\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span></span></span></span>  이상의 사물을 담고 있어야 한다.<br />\n(여기서, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}{x}\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span></span></span></span>는 x보다 작지 않은 최소 정수를 의미한다.)</p>\n</li>\n<li>\n<p>확률론적으로 일반화 된 비둘기집 원리는 다음과 같다.<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{m}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>의 균일한 확률로 n개의 비둘기를 무작위로 m개의 비둘기집에 넣었다면 확률적으로 적어도 하나의 비둘기집에 두마리 이상의 비둘기가 들어가게 된다.<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mtext>  </mtext><msup><mi>m</mi><mi>n</mi></msup></mrow></mfrac><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>⋯</mo><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><msup><mi>m</mi><mi>n</mi></msup></mfrac><mtext> ⁣</mtext></mrow><annotation encoding=\"application/x-tex\">1-{\\frac  {m!}{(m-n)!\\;m^{n}}}=1-{\\frac  {m(m-1)(m-2)\\cdots (m-n+1)}{m^{n}}}\\!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.400108em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span><span class=\"mspace mtight\" style=\"margin-right:0.3252777777777778em;\"></span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span><span class=\"minner mtight\">⋯</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span></span></span></span></p>\n</li>\n<li>\n<p>비둘기의 수가 비둘기집의 수를 초과하지 않는다 하더라도, 비둘기 분배의 무작위적인 성질에 의하여 종종 상당한 확률로 충돌이 일어난다.</p>\n</li>\n</ul>\n<h3 id=\"birthday-problem\"><a class=\"markdownIt-Anchor\" href=\"#birthday-problem\"></a> Birthday Problem</h3>\n<ul>\n<li>사람이 임의로 모였을 때 그 중에 생일이 같은 두명이 존재할 확률을 구하는 문제</li>\n<li>생일의 가능한 가짓수는 366개 이므로 366명 이상의 사람이 모인다면 비둘기집 원리에 따라 생일이 같은 두 명이 반드시 존재</li>\n<li>생일이 같은 두 사람을 찾는 것과 비슷하게, 암호학적 해시 결과가 같은(해시 충돌) 두 입력값을 찾는 것 역시 모든 입력값을 계산하지 않아도 충분히 높은 확률로 해시 충돌을 찾을 수 있다.<br />\n이러한 암호 공격을 생일 공격(birthday attack)이라고 부른다.</li>\n</ul>\n<h3 id=\"확률-계산\"><a class=\"markdownIt-Anchor\" href=\"#확률-계산\"></a> 확률 계산</h3>\n<ul>\n<li>n명의 사람이 있을 때 그 중 생일이 같은 사람이 둘 이상 있을 확률을 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span> 이라고 한다면, 반대로 모든 사람의 생일이 다를 확률<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>p</mi><mo stretchy=\"true\">‾</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\overline{p}{(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span></span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span>은 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>−</mo><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">1-{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span> 이 된다. <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>p</mi><mo stretchy=\"true\">‾</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\overline{p}{(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span></span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span>을 구해보면 두번째 사람의 생일은 첫 번째 사람과 다르고, 세 번째 사람의 생일은 첫번째와 두번째 모두와 달라야 한다.<br />\n최종적으로 구하고자 하는 생일이 같은 사람이 둘 이상 있을 확률 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span>은<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mn>365</mn><mo stretchy=\"false\">!</mo></mrow><mrow><mn>36</mn><msup><mn>5</mn><mi>n</mi></msup><mo>∗</mo><mo stretchy=\"false\">(</mo><mn>365</mn><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">{p(n)} = 1 - {\\frac{365!}{365^n * (365-n)!}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.400108em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\"><span class=\"mord mtight\">5</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">∗</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\">5</span><span class=\"mbin mtight\">−</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\">5</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> 가 된다. 여기서, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mo>≦</mo><mn>365</mn></mrow><annotation encoding=\"application/x-tex\">{n\\leqq365}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.01166em;vertical-align:-0.25583em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span></span></span> 인 자연수이고, !는 계승을 의미한다.<br />\n여기서 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span> 값을 특정 n 값에 대해 계산하면 다음과 같다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">n</th>\n<th style=\"text-align:center\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">0.0%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">2.7%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">11.7%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">41.1%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">23</td>\n<td style=\"text-align:center\">50.7%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">70.6%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">40</td>\n<td style=\"text-align:center\">89.1%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">50</td>\n<td style=\"text-align:center\">97.0%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">60</td>\n<td style=\"text-align:center\">99.4%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">70</td>\n<td style=\"text-align:center\">99.9%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">99.99997%</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>즉 23명 이상 모이면 같은 확률이 50% 이상이고, 100명이 모이면 거의 1에 가까워지는것을 알 수 있다.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"비둘기집의-원리\"><a class=\"markdownIt-Anchor\" href=\"#비둘기집의-원리\"></a> 비둘기집의 원리</h3>\n<ul>\n<li>n+1개읜 물건을 n개의 상재에 넣을 때 적어도 어느 한 상자에는 두 개 이상의 물건이 들어 있다는 원리를 말한다.</li>\n<li>비둘기와 비둘기집의 형태로 비유되어 쓰이며, '서랍-양말’로 비유하여 서랍원칙으로 나타내기도 한다.</li>\n<li>n개의 비둘기집과 n+1마리의 비둘기가 있다고 가정한다.<br />\n만약 각 비둘기집에 한 마리 이하의 비둘기만 들어 있다면, 전체 비둘기집에는 많아야 n마리의 비둘기가 존재한다.<br />\n그런데 비둘기는 모두n+1마리이므로, 이것은 모순이다. 따라서 어느 비둘기집에는 두 마리 이상의 비둘기가 있다.</li>\n</ul>\n<h3 id=\"일반화\"><a class=\"markdownIt-Anchor\" href=\"#일반화\"></a> 일반화</h3>\n<ul>\n<li>\n<p>n개의 별개의 사물을 m개의 용기에 나누어 담으면 적어도 한 개의 용기는 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mfrac><mi>n</mi><mi>m</mi></mfrac></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}\\frac{n}{m}\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span></span></span></span>  이상의 사물을 담고 있어야 한다.<br />\n(여기서, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}{x}\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span></span></span></span>는 x보다 작지 않은 최소 정수를 의미한다.)</p>\n</li>\n<li>\n<p>확률론적으로 일반화 된 비둘기집 원리는 다음과 같다.<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{m}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>의 균일한 확률로 n개의 비둘기를 무작위로 m개의 비둘기집에 넣었다면 확률적으로 적어도 하나의 비둘기집에 두마리 이상의 비둘기가 들어가게 된다.<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mtext>  </mtext><msup><mi>m</mi><mi>n</mi></msup></mrow></mfrac><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>⋯</mo><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><msup><mi>m</mi><mi>n</mi></msup></mfrac><mtext> ⁣</mtext></mrow><annotation encoding=\"application/x-tex\">1-{\\frac  {m!}{(m-n)!\\;m^{n}}}=1-{\\frac  {m(m-1)(m-2)\\cdots (m-n+1)}{m^{n}}}\\!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.400108em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span><span class=\"mspace mtight\" style=\"margin-right:0.3252777777777778em;\"></span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span><span class=\"minner mtight\">⋯</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span></span></span></span></p>\n</li>\n<li>\n<p>비둘기의 수가 비둘기집의 수를 초과하지 않는다 하더라도, 비둘기 분배의 무작위적인 성질에 의하여 종종 상당한 확률로 충돌이 일어난다.</p>\n</li>\n</ul>\n<h3 id=\"birthday-problem\"><a class=\"markdownIt-Anchor\" href=\"#birthday-problem\"></a> Birthday Problem</h3>\n<ul>\n<li>사람이 임의로 모였을 때 그 중에 생일이 같은 두명이 존재할 확률을 구하는 문제</li>\n<li>생일의 가능한 가짓수는 366개 이므로 366명 이상의 사람이 모인다면 비둘기집 원리에 따라 생일이 같은 두 명이 반드시 존재</li>\n<li>생일이 같은 두 사람을 찾는 것과 비슷하게, 암호학적 해시 결과가 같은(해시 충돌) 두 입력값을 찾는 것 역시 모든 입력값을 계산하지 않아도 충분히 높은 확률로 해시 충돌을 찾을 수 있다.<br />\n이러한 암호 공격을 생일 공격(birthday attack)이라고 부른다.</li>\n</ul>\n<h3 id=\"확률-계산\"><a class=\"markdownIt-Anchor\" href=\"#확률-계산\"></a> 확률 계산</h3>\n<ul>\n<li>n명의 사람이 있을 때 그 중 생일이 같은 사람이 둘 이상 있을 확률을 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span> 이라고 한다면, 반대로 모든 사람의 생일이 다를 확률<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>p</mi><mo stretchy=\"true\">‾</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\overline{p}{(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span></span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span>은 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>−</mo><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">1-{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span> 이 된다. <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>p</mi><mo stretchy=\"true\">‾</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\overline{p}{(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span></span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span>을 구해보면 두번째 사람의 생일은 첫 번째 사람과 다르고, 세 번째 사람의 생일은 첫번째와 두번째 모두와 달라야 한다.<br />\n최종적으로 구하고자 하는 생일이 같은 사람이 둘 이상 있을 확률 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span>은<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mn>365</mn><mo stretchy=\"false\">!</mo></mrow><mrow><mn>36</mn><msup><mn>5</mn><mi>n</mi></msup><mo>∗</mo><mo stretchy=\"false\">(</mo><mn>365</mn><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">{p(n)} = 1 - {\\frac{365!}{365^n * (365-n)!}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.400108em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\"><span class=\"mord mtight\">5</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">∗</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\">5</span><span class=\"mbin mtight\">−</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\">5</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> 가 된다. 여기서, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mo>≦</mo><mn>365</mn></mrow><annotation encoding=\"application/x-tex\">{n\\leqq365}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.01166em;vertical-align:-0.25583em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span></span></span> 인 자연수이고, !는 계승을 의미한다.<br />\n여기서 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span> 값을 특정 n 값에 대해 계산하면 다음과 같다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">n</th>\n<th style=\"text-align:center\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{p(n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">0.0%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">2.7%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">11.7%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">41.1%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">23</td>\n<td style=\"text-align:center\">50.7%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">70.6%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">40</td>\n<td style=\"text-align:center\">89.1%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">50</td>\n<td style=\"text-align:center\">97.0%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">60</td>\n<td style=\"text-align:center\">99.4%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">70</td>\n<td style=\"text-align:center\">99.9%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">99.99997%</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>즉 23명 이상 모이면 같은 확률이 50% 이상이고, 100명이 모이면 거의 1에 가까워지는것을 알 수 있다.</li>\n</ul>\n"},{"title":"cryptography-certification","date":"2020-04-13T09:32:33.000Z","_content":"\n## 인증서 \n- 공개키 인증서(public-key certificate: PKC)\n    - 이름이나 소속, 메일 주소 등의 개인 정보\n    - 당사자의 공개 키가 기재\n    - 인증기관(CA; certification authority)의 개인 키로 디지털 서명\n    \n### 인증서를 사용하는 시나리오\n![](/images/cryptography/certification/public_key_certification_senario.png)\n\n### 공인 인증서 종류\n- 전자서명용 인증서(Digital Signature Certificate)\n    - 거래 상대방에 대한 신원확인(인증), 전자문서의 위.변조여부의 검출(무결성), 전자문서 송.수신자간의 송.수신사실 여부에 대한 ⑨부인방지(부인봉쇄) 목적으로 사용\n- 암호화용 인증서(Encryption Certificate)\n    - 적법한 송.수신자를 제외한 제3자가 전송중인 메시지를 보지 못하도록 하는데 사용(비밀성)\n- 클라언트 SSL 인증서(Client SSL Certificate)\n    - 클라이언트와 서버가 안전한 통신을 하고자 할 때, 서버가 클라이언트의 신원확인을 위해 사용 \n    - Form Signing, SSO(Single Sign On)에서 사용\n- 서버 SSL 인증서(Sever SSL Certificate)\n    - 클라이언트와 서버가 안전한 통신을 하고자 할 때, 클라이언트가 서버의 신원확인을 위해 사용\n- ⓓS/MIME 인증서(S/MIME Certificate)\n    - 전자메일에 전자서명 하거나 전자메일의 암호화를 위해서 사용\n- 소프트웨어 배포용 인증서(Code-Signing Certificate)\n    - 인터넷과 같은 안전하지 않은 통신망을 통해 소프트웨어를 안전하게 배포할 목적으로 사용하는 인증서로서 Java code, Javascript 등\n        소프트웨어 코드에 그 제작자가 전자서명을 함으로써, 제작자의 신원확인과 전송과정에서의 소프트웨어의 위.변조를 확인할 용도로 사용합니다.\n- 인증기관용 인증서(CA Certificate)\n    - CA의 확인을 위해 사용 \n    - 클라이언트와 서버의 S/W에서 다른 인증서의 신뢰여부를 검증할 때 사용\n\n### Verisign 무료 서비스\n- 개인을 위한 인증서(digital ID) 를 60일간 무료 시험판으로 만들어서 제공\n- 웹 브라우저만 있으면 온라인에서 바로 발행할 수 있으며 본인 인증은 메일이 도착했는지 여부만으로 확인\n- Https로 보호된 웹 사이트에서 이름, 메일 주소, 패스워드를 입력하고 인증서 작성\n    \n     ```   \n         • Organization = KECA, Inc.\n         • Organizational Unit = CrossCert Class 1 Consumer Individual Subscriber CA\n         • Organizational Unit = Terms of use at www.crosscert.com/rpa (c)01\n         • Organizational Unit = Authenticated by CrossCert\n         • Organizational Unit = Member, VeriSign Trust Network\n         • Organizational Unit = Persona Not Validated\n         • Organizational Unit = Digital ID Class 1 - Netscape\n         • Common Name = Gil Dong Hong\n         • Email Address = gildong@gmail.com \n     ```\n  \n### 인증서의 표준 규격 X.509\n- X.509\n    - 가장 널리 사용\n    - ITU, ISO에서 규정한 규격으로 인증서의 생성 교환을 수행할 때 사용\n    \n- X.509 v3 디지털 인증서의 구조\n- Certificate\n    - Version 인증서의 버전을 나타냄\n    - Serial Number CA가 할당한 정수로 된 고유 번호\n    - Signature 서명 알고리즘 식별자\n    - Issuer 발행자\n    - Validity 유효기간\n        - Not Before 유효기간 시작 날짜\n        - Not After 유효기간 끝나는 날짜\n    - Subject 소유자\n    - Subject Public Key Info 소유자 공개 키 정보\n        - Public Key Algorithm 공개 키 알고리즘\n        - Subject Public Key\n    - Issuer Unique Identifier (Optional) 발행자 고유 식별자\n    - Subject Unique Identifier (Optional) 소유자 고유 식별자\n    - Extensions (Optional) 확장\n- Certificate Signature Algorithm\n- Certificate Signature\n\n- 인증서 파일 확장\n.CER - CER 암호화 된 인증서. 복수의 인자증서도 가능.\n.DER - DER 암호화 된 인증서.\n.PEM - (Privacy Enhanced Mail) Base64로 인코딩 된 인증서. \"-----BEGIN CERTIFICATE-----\"와 \"-----END CERTIFICATE-----\" 가운데에 들어간다.\n.P7B - .p7c 참조.\n.P7C - PKCS#7 서명 자료 구조(자료는 제외), 인증서이거나 CRL(복수도 가능).\n.PFX - .p12 참조.\n.P12 - PKCS#12, 공개 인증서와 암호로 보호되는 개인 키를 가질 수 있다(복수도 가능).\n\n### 공개 키 기반 구조 (PKI)\n- 공개 키 기반(public key infrastructure)\n    - 공개 키를 효과적으로 운용하기 위해 정한 규격이나 선택사양의 총칭\n    - PKCS(Public-Key Cryptography Standards) : RSA사가 정하고 있는 규격의 집합\n    - RFC(Requests for Comments) 중에서도 PKI에 관련된 문서\n    - X.509\n    - API 사양서\n\n- PKI 구성 요소\n    - 이용자 : PKI를 이용하는 사람\n    - 인증기관 : 인증서를 발행 하는 사람\n    - 저장소 : 인증서를 보관하고 있는 데이터 베이스\n    \n![](/images/cryptography/certification/PKI_info.png)\n\n- 이용자\n    - PKI를 사용해서 자신의 공개 키를 등록하고 싶어 하는 사람과 등록되어 있는 공개 키를 사용하고 싶어 하는 사람\n- 이용자가 하는일\n    - 키 쌍을 작성한다\n    - 인증 기관에 공개 키를 등록한다\n    - 인증 기관으로부터 인증서를 발행 받는다\n    - 수신한 암호문을 복호화 한다.\n    - 메세지에 디지털 서명을 한다.\n- 공개키 사용자가 하는  \n    - 메시지를 암호화해서 수신자에게 송신한다\n    - 디지털 서명을 검증한다.일\n    \n- 인증 기관 (CA; certification authority)\n    - 인증서의 관리를 행하는 기관\n    - 키 쌍을 작성한다\n    - 공개키 등록 때 본인을 인증한다\n    - 인증서 작성 발행, 폐지\n    \n- 등록 기관 (RA; registration authority)\n    - 인증 기관의 일중 공개키의 등록과 본인에 대한 인증을 대행 하는 기관\n\n![](/images/cryptography/certification/ds_management_korea.png)\n\n한국 공인 인증 기관\n|공인인증기관|웹페이지|\n|:--:|:--:|\n|힌국정보인증(주)|http://www.signgate.com|\n|(주)코스콤|http://www.signkorea.com|\n|금융결제원|http://www.yessign.com|\n|한국전자인증(주)|http://www.crosscert.com|\n|한국무역정보통신|http://tradesign.net|\n\n- 저장소 (repository)\n    - 인증서를 보존해 두고, PKI의 이용자가 인증서를 입수할 수 있도록 한 데이터 베이스\n    - 인증서 디렉토리\n\n- 인증 기관의 역할\n    - 키 쌍의 작성\n        - PKI의 이용자가 작성하거나\n        - 인증기관이 이용자의 키 쌍을 생성할 경우 개인 키를 이용자에게 보내는 추가 업무를 해야한다.\n            - [PKCS](https://en.wikipedia.org/wiki/PKCS) #12 (Personal Information Exchange Syntax Standard)\n        \n    - 인증서 등록\n        - 이용자는 인증 기관에 인증서 작성을 의뢰\n            - 규격 : [PKCS](https://en.wikipedia.org/wiki/PKCS) #10 (Certification Request Syntax Standard)\n        - 운용 규격 (CPS; certification practice statement)에 근거해서 이용자를 인증하고, 인증서를 작성\n            - 인증서 형식 : [PKCS](https://en.wikipedia.org/wiki/PKCS) #6 (Extended-Certificate Syntax Standard)나 X.509로 정의\n\n    - 인증서의 폐지\n        - 이용자가 개인키에 대한 권한을 잃거나 개인키를 분실 혹은 도난 당했을 경우 인증기관은 인증서를 폐지(revoke)해서 무효화 해야한다.\n        - 인증서를 폐지하는 경우 인증기관은 인증서 폐지 목록(CRL) 을 작성한다.\n        \n    - CRL(Certification revocation list)관리\n        - 인증기관이 폐지한 인증서의 일련번호의 목록에 대해 인증기관이 디지털 서명을 붙인 것이다.\n        - *인증기관의 최신 CRL을 조사해서 그 인증서가 유효한지 아닌지를 확실히 확인 할 필요가 있다*\n\n### 계층 구조를 갖는 인증서\n- 루트 CA\n    - 최상위 인증기관\n- 셀프 서명(Self-signature)\n    - 자기 자신의 공개 키에 대해서 자신의 개인 키로 서명하는 디지털 서명\n\n![](/images/cryptography/certification/hierarchy_structure_CA.png)\n![](/images/cryptography/certification/flow.png)\n\n- 한국의 PKI\n    - 한국인터넷진흥원 전자서명인증관리센터(http://rootca.kisa.or.kr)\n    \n### 공인 인증서 대체 기술\n- 핸드폰 개통할 때 계좌 인증, 카드 인증 사용\n\n|구분|주요 내용|\n|:-:|:-:|\n|휴대폰 본인 확인|본인 확인 기관으로 지정된 통신 3사가 휴대폰 개통 과정에서 수집된 개인정보를 활용해 본인 여부 확인|\n|계좌 인증|신분 확인을 통해 개설된 은행계좌에 소액입금과 함께 임의적 문자를 송부해 본인 여부 확인|\n|카드 인증| 신분확인을 통해 발급된 신용카드의 정보입력을 통해 본인 여부 확인|\n\n### 공공 민간 전자 서명\n||공인인증기관|본인확인기관|\n|:-:|:-:|:-:|\n|정의|공인인증업무를 제공 하기 위한 기관|주민등록번호 외 본인 확인 업무를 제공하는 기관|\n|업체|한국정보인증,코스콤,금융결제원 등|6개 공인인증 기관,3사 통신사, 카드사 등|","source":"_posts/cryptography-certification.md","raw":"---\ntitle: cryptography-certification\ndate: 2020-04-13 18:32:33\ntags:\n- PKI\n- certification\ncategories:\n- cryptography\n---\n\n## 인증서 \n- 공개키 인증서(public-key certificate: PKC)\n    - 이름이나 소속, 메일 주소 등의 개인 정보\n    - 당사자의 공개 키가 기재\n    - 인증기관(CA; certification authority)의 개인 키로 디지털 서명\n    \n### 인증서를 사용하는 시나리오\n![](/images/cryptography/certification/public_key_certification_senario.png)\n\n### 공인 인증서 종류\n- 전자서명용 인증서(Digital Signature Certificate)\n    - 거래 상대방에 대한 신원확인(인증), 전자문서의 위.변조여부의 검출(무결성), 전자문서 송.수신자간의 송.수신사실 여부에 대한 ⑨부인방지(부인봉쇄) 목적으로 사용\n- 암호화용 인증서(Encryption Certificate)\n    - 적법한 송.수신자를 제외한 제3자가 전송중인 메시지를 보지 못하도록 하는데 사용(비밀성)\n- 클라언트 SSL 인증서(Client SSL Certificate)\n    - 클라이언트와 서버가 안전한 통신을 하고자 할 때, 서버가 클라이언트의 신원확인을 위해 사용 \n    - Form Signing, SSO(Single Sign On)에서 사용\n- 서버 SSL 인증서(Sever SSL Certificate)\n    - 클라이언트와 서버가 안전한 통신을 하고자 할 때, 클라이언트가 서버의 신원확인을 위해 사용\n- ⓓS/MIME 인증서(S/MIME Certificate)\n    - 전자메일에 전자서명 하거나 전자메일의 암호화를 위해서 사용\n- 소프트웨어 배포용 인증서(Code-Signing Certificate)\n    - 인터넷과 같은 안전하지 않은 통신망을 통해 소프트웨어를 안전하게 배포할 목적으로 사용하는 인증서로서 Java code, Javascript 등\n        소프트웨어 코드에 그 제작자가 전자서명을 함으로써, 제작자의 신원확인과 전송과정에서의 소프트웨어의 위.변조를 확인할 용도로 사용합니다.\n- 인증기관용 인증서(CA Certificate)\n    - CA의 확인을 위해 사용 \n    - 클라이언트와 서버의 S/W에서 다른 인증서의 신뢰여부를 검증할 때 사용\n\n### Verisign 무료 서비스\n- 개인을 위한 인증서(digital ID) 를 60일간 무료 시험판으로 만들어서 제공\n- 웹 브라우저만 있으면 온라인에서 바로 발행할 수 있으며 본인 인증은 메일이 도착했는지 여부만으로 확인\n- Https로 보호된 웹 사이트에서 이름, 메일 주소, 패스워드를 입력하고 인증서 작성\n    \n     ```   \n         • Organization = KECA, Inc.\n         • Organizational Unit = CrossCert Class 1 Consumer Individual Subscriber CA\n         • Organizational Unit = Terms of use at www.crosscert.com/rpa (c)01\n         • Organizational Unit = Authenticated by CrossCert\n         • Organizational Unit = Member, VeriSign Trust Network\n         • Organizational Unit = Persona Not Validated\n         • Organizational Unit = Digital ID Class 1 - Netscape\n         • Common Name = Gil Dong Hong\n         • Email Address = gildong@gmail.com \n     ```\n  \n### 인증서의 표준 규격 X.509\n- X.509\n    - 가장 널리 사용\n    - ITU, ISO에서 규정한 규격으로 인증서의 생성 교환을 수행할 때 사용\n    \n- X.509 v3 디지털 인증서의 구조\n- Certificate\n    - Version 인증서의 버전을 나타냄\n    - Serial Number CA가 할당한 정수로 된 고유 번호\n    - Signature 서명 알고리즘 식별자\n    - Issuer 발행자\n    - Validity 유효기간\n        - Not Before 유효기간 시작 날짜\n        - Not After 유효기간 끝나는 날짜\n    - Subject 소유자\n    - Subject Public Key Info 소유자 공개 키 정보\n        - Public Key Algorithm 공개 키 알고리즘\n        - Subject Public Key\n    - Issuer Unique Identifier (Optional) 발행자 고유 식별자\n    - Subject Unique Identifier (Optional) 소유자 고유 식별자\n    - Extensions (Optional) 확장\n- Certificate Signature Algorithm\n- Certificate Signature\n\n- 인증서 파일 확장\n.CER - CER 암호화 된 인증서. 복수의 인자증서도 가능.\n.DER - DER 암호화 된 인증서.\n.PEM - (Privacy Enhanced Mail) Base64로 인코딩 된 인증서. \"-----BEGIN CERTIFICATE-----\"와 \"-----END CERTIFICATE-----\" 가운데에 들어간다.\n.P7B - .p7c 참조.\n.P7C - PKCS#7 서명 자료 구조(자료는 제외), 인증서이거나 CRL(복수도 가능).\n.PFX - .p12 참조.\n.P12 - PKCS#12, 공개 인증서와 암호로 보호되는 개인 키를 가질 수 있다(복수도 가능).\n\n### 공개 키 기반 구조 (PKI)\n- 공개 키 기반(public key infrastructure)\n    - 공개 키를 효과적으로 운용하기 위해 정한 규격이나 선택사양의 총칭\n    - PKCS(Public-Key Cryptography Standards) : RSA사가 정하고 있는 규격의 집합\n    - RFC(Requests for Comments) 중에서도 PKI에 관련된 문서\n    - X.509\n    - API 사양서\n\n- PKI 구성 요소\n    - 이용자 : PKI를 이용하는 사람\n    - 인증기관 : 인증서를 발행 하는 사람\n    - 저장소 : 인증서를 보관하고 있는 데이터 베이스\n    \n![](/images/cryptography/certification/PKI_info.png)\n\n- 이용자\n    - PKI를 사용해서 자신의 공개 키를 등록하고 싶어 하는 사람과 등록되어 있는 공개 키를 사용하고 싶어 하는 사람\n- 이용자가 하는일\n    - 키 쌍을 작성한다\n    - 인증 기관에 공개 키를 등록한다\n    - 인증 기관으로부터 인증서를 발행 받는다\n    - 수신한 암호문을 복호화 한다.\n    - 메세지에 디지털 서명을 한다.\n- 공개키 사용자가 하는  \n    - 메시지를 암호화해서 수신자에게 송신한다\n    - 디지털 서명을 검증한다.일\n    \n- 인증 기관 (CA; certification authority)\n    - 인증서의 관리를 행하는 기관\n    - 키 쌍을 작성한다\n    - 공개키 등록 때 본인을 인증한다\n    - 인증서 작성 발행, 폐지\n    \n- 등록 기관 (RA; registration authority)\n    - 인증 기관의 일중 공개키의 등록과 본인에 대한 인증을 대행 하는 기관\n\n![](/images/cryptography/certification/ds_management_korea.png)\n\n한국 공인 인증 기관\n|공인인증기관|웹페이지|\n|:--:|:--:|\n|힌국정보인증(주)|http://www.signgate.com|\n|(주)코스콤|http://www.signkorea.com|\n|금융결제원|http://www.yessign.com|\n|한국전자인증(주)|http://www.crosscert.com|\n|한국무역정보통신|http://tradesign.net|\n\n- 저장소 (repository)\n    - 인증서를 보존해 두고, PKI의 이용자가 인증서를 입수할 수 있도록 한 데이터 베이스\n    - 인증서 디렉토리\n\n- 인증 기관의 역할\n    - 키 쌍의 작성\n        - PKI의 이용자가 작성하거나\n        - 인증기관이 이용자의 키 쌍을 생성할 경우 개인 키를 이용자에게 보내는 추가 업무를 해야한다.\n            - [PKCS](https://en.wikipedia.org/wiki/PKCS) #12 (Personal Information Exchange Syntax Standard)\n        \n    - 인증서 등록\n        - 이용자는 인증 기관에 인증서 작성을 의뢰\n            - 규격 : [PKCS](https://en.wikipedia.org/wiki/PKCS) #10 (Certification Request Syntax Standard)\n        - 운용 규격 (CPS; certification practice statement)에 근거해서 이용자를 인증하고, 인증서를 작성\n            - 인증서 형식 : [PKCS](https://en.wikipedia.org/wiki/PKCS) #6 (Extended-Certificate Syntax Standard)나 X.509로 정의\n\n    - 인증서의 폐지\n        - 이용자가 개인키에 대한 권한을 잃거나 개인키를 분실 혹은 도난 당했을 경우 인증기관은 인증서를 폐지(revoke)해서 무효화 해야한다.\n        - 인증서를 폐지하는 경우 인증기관은 인증서 폐지 목록(CRL) 을 작성한다.\n        \n    - CRL(Certification revocation list)관리\n        - 인증기관이 폐지한 인증서의 일련번호의 목록에 대해 인증기관이 디지털 서명을 붙인 것이다.\n        - *인증기관의 최신 CRL을 조사해서 그 인증서가 유효한지 아닌지를 확실히 확인 할 필요가 있다*\n\n### 계층 구조를 갖는 인증서\n- 루트 CA\n    - 최상위 인증기관\n- 셀프 서명(Self-signature)\n    - 자기 자신의 공개 키에 대해서 자신의 개인 키로 서명하는 디지털 서명\n\n![](/images/cryptography/certification/hierarchy_structure_CA.png)\n![](/images/cryptography/certification/flow.png)\n\n- 한국의 PKI\n    - 한국인터넷진흥원 전자서명인증관리센터(http://rootca.kisa.or.kr)\n    \n### 공인 인증서 대체 기술\n- 핸드폰 개통할 때 계좌 인증, 카드 인증 사용\n\n|구분|주요 내용|\n|:-:|:-:|\n|휴대폰 본인 확인|본인 확인 기관으로 지정된 통신 3사가 휴대폰 개통 과정에서 수집된 개인정보를 활용해 본인 여부 확인|\n|계좌 인증|신분 확인을 통해 개설된 은행계좌에 소액입금과 함께 임의적 문자를 송부해 본인 여부 확인|\n|카드 인증| 신분확인을 통해 발급된 신용카드의 정보입력을 통해 본인 여부 확인|\n\n### 공공 민간 전자 서명\n||공인인증기관|본인확인기관|\n|:-:|:-:|:-:|\n|정의|공인인증업무를 제공 하기 위한 기관|주민등록번호 외 본인 확인 업무를 제공하는 기관|\n|업체|한국정보인증,코스콤,금융결제원 등|6개 공인인증 기관,3사 통신사, 카드사 등|","slug":"cryptography-certification","published":1,"updated":"2020-07-11T04:51:03.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513r000kqlvo15hm5wuh","content":"<h2 id=\"인증서\"><a class=\"markdownIt-Anchor\" href=\"#인증서\"></a> 인증서</h2>\n<ul>\n<li>공개키 인증서(public-key certificate: PKC)\n<ul>\n<li>이름이나 소속, 메일 주소 등의 개인 정보</li>\n<li>당사자의 공개 키가 기재</li>\n<li>인증기관(CA; certification authority)의 개인 키로 디지털 서명</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"인증서를-사용하는-시나리오\"><a class=\"markdownIt-Anchor\" href=\"#인증서를-사용하는-시나리오\"></a> 인증서를 사용하는 시나리오</h3>\n<p><img src=\"/images/cryptography/certification/public_key_certification_senario.png\" alt=\"\" /></p>\n<h3 id=\"공인-인증서-종류\"><a class=\"markdownIt-Anchor\" href=\"#공인-인증서-종류\"></a> 공인 인증서 종류</h3>\n<ul>\n<li>전자서명용 인증서(Digital Signature Certificate)\n<ul>\n<li>거래 상대방에 대한 신원확인(인증), 전자문서의 위.변조여부의 검출(무결성), 전자문서 송.수신자간의 송.수신사실 여부에 대한 ⑨부인방지(부인봉쇄) 목적으로 사용</li>\n</ul>\n</li>\n<li>암호화용 인증서(Encryption Certificate)\n<ul>\n<li>적법한 송.수신자를 제외한 제3자가 전송중인 메시지를 보지 못하도록 하는데 사용(비밀성)</li>\n</ul>\n</li>\n<li>클라언트 SSL 인증서(Client SSL Certificate)\n<ul>\n<li>클라이언트와 서버가 안전한 통신을 하고자 할 때, 서버가 클라이언트의 신원확인을 위해 사용</li>\n<li>Form Signing, SSO(Single Sign On)에서 사용</li>\n</ul>\n</li>\n<li>서버 SSL 인증서(Sever SSL Certificate)\n<ul>\n<li>클라이언트와 서버가 안전한 통신을 하고자 할 때, 클라이언트가 서버의 신원확인을 위해 사용</li>\n</ul>\n</li>\n<li>ⓓS/MIME 인증서(S/MIME Certificate)\n<ul>\n<li>전자메일에 전자서명 하거나 전자메일의 암호화를 위해서 사용</li>\n</ul>\n</li>\n<li>소프트웨어 배포용 인증서(Code-Signing Certificate)\n<ul>\n<li>인터넷과 같은 안전하지 않은 통신망을 통해 소프트웨어를 안전하게 배포할 목적으로 사용하는 인증서로서 Java code, Javascript 등<br />\n소프트웨어 코드에 그 제작자가 전자서명을 함으로써, 제작자의 신원확인과 전송과정에서의 소프트웨어의 위.변조를 확인할 용도로 사용합니다.</li>\n</ul>\n</li>\n<li>인증기관용 인증서(CA Certificate)\n<ul>\n<li>CA의 확인을 위해 사용</li>\n<li>클라이언트와 서버의 S/W에서 다른 인증서의 신뢰여부를 검증할 때 사용</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"verisign-무료-서비스\"><a class=\"markdownIt-Anchor\" href=\"#verisign-무료-서비스\"></a> Verisign 무료 서비스</h3>\n<ul>\n<li>\n<p>개인을 위한 인증서(digital ID) 를 60일간 무료 시험판으로 만들어서 제공</p>\n</li>\n<li>\n<p>웹 브라우저만 있으면 온라인에서 바로 발행할 수 있으며 본인 인증은 메일이 도착했는지 여부만으로 확인</p>\n</li>\n<li>\n<p>Https로 보호된 웹 사이트에서 이름, 메일 주소, 패스워드를 입력하고 인증서 작성</p>\n   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">• Organization = KECA, Inc.</span><br><span class=\"line\">• Organizational Unit = CrossCert Class 1 Consumer Individual Subscriber CA</span><br><span class=\"line\">• Organizational Unit = Terms of use at www.crosscert.com/rpa (c)01</span><br><span class=\"line\">• Organizational Unit = Authenticated by CrossCert</span><br><span class=\"line\">• Organizational Unit = Member, VeriSign Trust Network</span><br><span class=\"line\">• Organizational Unit = Persona Not Validated</span><br><span class=\"line\">• Organizational Unit = Digital ID Class 1 - Netscape</span><br><span class=\"line\">• Common Name = Gil Dong Hong</span><br><span class=\"line\">• Email Address = gildong@gmail.com</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"인증서의-표준-규격-x509\"><a class=\"markdownIt-Anchor\" href=\"#인증서의-표준-규격-x509\"></a> 인증서의 표준 규격 X.509</h3>\n<ul>\n<li>\n<p>X.509</p>\n<ul>\n<li>가장 널리 사용</li>\n<li>ITU, ISO에서 규정한 규격으로 인증서의 생성 교환을 수행할 때 사용</li>\n</ul>\n</li>\n<li>\n<p>X.509 v3 디지털 인증서의 구조</p>\n</li>\n<li>\n<p>Certificate</p>\n<ul>\n<li>Version 인증서의 버전을 나타냄</li>\n<li>Serial Number CA가 할당한 정수로 된 고유 번호</li>\n<li>Signature 서명 알고리즘 식별자</li>\n<li>Issuer 발행자</li>\n<li>Validity 유효기간\n<ul>\n<li>Not Before 유효기간 시작 날짜</li>\n<li>Not After 유효기간 끝나는 날짜</li>\n</ul>\n</li>\n<li>Subject 소유자</li>\n<li>Subject Public Key Info 소유자 공개 키 정보\n<ul>\n<li>Public Key Algorithm 공개 키 알고리즘</li>\n<li>Subject Public Key</li>\n</ul>\n</li>\n<li>Issuer Unique Identifier (Optional) 발행자 고유 식별자</li>\n<li>Subject Unique Identifier (Optional) 소유자 고유 식별자</li>\n<li>Extensions (Optional) 확장</li>\n</ul>\n</li>\n<li>\n<p>Certificate Signature Algorithm</p>\n</li>\n<li>\n<p>Certificate Signature</p>\n</li>\n<li>\n<p>인증서 파일 확장<br />\n.CER - CER 암호화 된 인증서. 복수의 인자증서도 가능.<br />\n.DER - DER 암호화 된 인증서.<br />\n.PEM - (Privacy Enhanced Mail) Base64로 인코딩 된 인증서. &quot;-----BEGIN CERTIFICATE-----&quot;와 “-----END CERTIFICATE-----” 가운데에 들어간다.<br />\n.P7B - .p7c 참조.<br />\n.P7C - PKCS#7 서명 자료 구조(자료는 제외), 인증서이거나 CRL(복수도 가능).<br />\n.PFX - .p12 참조.<br />\n.P12 - PKCS#12, 공개 인증서와 암호로 보호되는 개인 키를 가질 수 있다(복수도 가능).</p>\n</li>\n</ul>\n<h3 id=\"공개-키-기반-구조-pki\"><a class=\"markdownIt-Anchor\" href=\"#공개-키-기반-구조-pki\"></a> 공개 키 기반 구조 (PKI)</h3>\n<ul>\n<li>\n<p>공개 키 기반(public key infrastructure)</p>\n<ul>\n<li>공개 키를 효과적으로 운용하기 위해 정한 규격이나 선택사양의 총칭</li>\n<li>PKCS(Public-Key Cryptography Standards) : RSA사가 정하고 있는 규격의 집합</li>\n<li>RFC(Requests for Comments) 중에서도 PKI에 관련된 문서</li>\n<li>X.509</li>\n<li>API 사양서</li>\n</ul>\n</li>\n<li>\n<p>PKI 구성 요소</p>\n<ul>\n<li>이용자 : PKI를 이용하는 사람</li>\n<li>인증기관 : 인증서를 발행 하는 사람</li>\n<li>저장소 : 인증서를 보관하고 있는 데이터 베이스</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/certification/PKI_info.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>이용자</p>\n<ul>\n<li>PKI를 사용해서 자신의 공개 키를 등록하고 싶어 하는 사람과 등록되어 있는 공개 키를 사용하고 싶어 하는 사람</li>\n</ul>\n</li>\n<li>\n<p>이용자가 하는일</p>\n<ul>\n<li>키 쌍을 작성한다</li>\n<li>인증 기관에 공개 키를 등록한다</li>\n<li>인증 기관으로부터 인증서를 발행 받는다</li>\n<li>수신한 암호문을 복호화 한다.</li>\n<li>메세지에 디지털 서명을 한다.</li>\n</ul>\n</li>\n<li>\n<p>공개키 사용자가 하는</p>\n<ul>\n<li>메시지를 암호화해서 수신자에게 송신한다</li>\n<li>디지털 서명을 검증한다.일</li>\n</ul>\n</li>\n<li>\n<p>인증 기관 (CA; certification authority)</p>\n<ul>\n<li>인증서의 관리를 행하는 기관</li>\n<li>키 쌍을 작성한다</li>\n<li>공개키 등록 때 본인을 인증한다</li>\n<li>인증서 작성 발행, 폐지</li>\n</ul>\n</li>\n<li>\n<p>등록 기관 (RA; registration authority)</p>\n<ul>\n<li>인증 기관의 일중 공개키의 등록과 본인에 대한 인증을 대행 하는 기관</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/certification/ds_management_korea.png\" alt=\"\" /></p>\n<p>한국 공인 인증 기관</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">공인인증기관</th>\n<th style=\"text-align:center\">웹페이지</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">힌국정보인증(주)</td>\n<td style=\"text-align:center\"><a href=\"http://www.signgate.com\" target=\"_blank\" rel=\"noopener\">http://www.signgate.com</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(주)코스콤</td>\n<td style=\"text-align:center\"><a href=\"http://www.signkorea.com\" target=\"_blank\" rel=\"noopener\">http://www.signkorea.com</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">금융결제원</td>\n<td style=\"text-align:center\"><a href=\"http://www.yessign.com\" target=\"_blank\" rel=\"noopener\">http://www.yessign.com</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">한국전자인증(주)</td>\n<td style=\"text-align:center\"><a href=\"http://www.crosscert.com\" target=\"_blank\" rel=\"noopener\">http://www.crosscert.com</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">한국무역정보통신</td>\n<td style=\"text-align:center\"><a href=\"http://tradesign.net\" target=\"_blank\" rel=\"noopener\">http://tradesign.net</a></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>저장소 (repository)</p>\n<ul>\n<li>인증서를 보존해 두고, PKI의 이용자가 인증서를 입수할 수 있도록 한 데이터 베이스</li>\n<li>인증서 디렉토리</li>\n</ul>\n</li>\n<li>\n<p>인증 기관의 역할</p>\n<ul>\n<li>\n<p>키 쌍의 작성</p>\n<ul>\n<li>PKI의 이용자가 작성하거나</li>\n<li>인증기관이 이용자의 키 쌍을 생성할 경우 개인 키를 이용자에게 보내는 추가 업무를 해야한다.\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/PKCS\" target=\"_blank\" rel=\"noopener\">PKCS</a> #12 (Personal Information Exchange Syntax Standard)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>인증서 등록</p>\n<ul>\n<li>이용자는 인증 기관에 인증서 작성을 의뢰\n<ul>\n<li>규격 : <a href=\"https://en.wikipedia.org/wiki/PKCS\" target=\"_blank\" rel=\"noopener\">PKCS</a> #10 (Certification Request Syntax Standard)</li>\n</ul>\n</li>\n<li>운용 규격 (CPS; certification practice statement)에 근거해서 이용자를 인증하고, 인증서를 작성\n<ul>\n<li>인증서 형식 : <a href=\"https://en.wikipedia.org/wiki/PKCS\" target=\"_blank\" rel=\"noopener\">PKCS</a> #6 (Extended-Certificate Syntax Standard)나 X.509로 정의</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>인증서의 폐지</p>\n<ul>\n<li>이용자가 개인키에 대한 권한을 잃거나 개인키를 분실 혹은 도난 당했을 경우 인증기관은 인증서를 폐지(revoke)해서 무효화 해야한다.</li>\n<li>인증서를 폐지하는 경우 인증기관은 인증서 폐지 목록(CRL) 을 작성한다.</li>\n</ul>\n</li>\n<li>\n<p>CRL(Certification revocation list)관리</p>\n<ul>\n<li>인증기관이 폐지한 인증서의 일련번호의 목록에 대해 인증기관이 디지털 서명을 붙인 것이다.</li>\n<li><em>인증기관의 최신 CRL을 조사해서 그 인증서가 유효한지 아닌지를 확실히 확인 할 필요가 있다</em></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"계층-구조를-갖는-인증서\"><a class=\"markdownIt-Anchor\" href=\"#계층-구조를-갖는-인증서\"></a> 계층 구조를 갖는 인증서</h3>\n<ul>\n<li>루트 CA\n<ul>\n<li>최상위 인증기관</li>\n</ul>\n</li>\n<li>셀프 서명(Self-signature)\n<ul>\n<li>자기 자신의 공개 키에 대해서 자신의 개인 키로 서명하는 디지털 서명</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/certification/hierarchy_structure_CA.png\" alt=\"\" /><br />\n<img src=\"/images/cryptography/certification/flow.png\" alt=\"\" /></p>\n<ul>\n<li>한국의 PKI\n<ul>\n<li>한국인터넷진흥원 전자서명인증관리센터(<a href=\"http://rootca.kisa.or.kr\" target=\"_blank\" rel=\"noopener\">http://rootca.kisa.or.kr</a>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"공인-인증서-대체-기술\"><a class=\"markdownIt-Anchor\" href=\"#공인-인증서-대체-기술\"></a> 공인 인증서 대체 기술</h3>\n<ul>\n<li>핸드폰 개통할 때 계좌 인증, 카드 인증 사용</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">구분</th>\n<th style=\"text-align:center\">주요 내용</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">휴대폰 본인 확인</td>\n<td style=\"text-align:center\">본인 확인 기관으로 지정된 통신 3사가 휴대폰 개통 과정에서 수집된 개인정보를 활용해 본인 여부 확인</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">계좌 인증</td>\n<td style=\"text-align:center\">신분 확인을 통해 개설된 은행계좌에 소액입금과 함께 임의적 문자를 송부해 본인 여부 확인</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">카드 인증</td>\n<td style=\"text-align:center\">신분확인을 통해 발급된 신용카드의 정보입력을 통해 본인 여부 확인</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"공공-민간-전자-서명\"><a class=\"markdownIt-Anchor\" href=\"#공공-민간-전자-서명\"></a> 공공 민간 전자 서명</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">공인인증기관</th>\n<th style=\"text-align:center\">본인확인기관</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">정의</td>\n<td style=\"text-align:center\">공인인증업무를 제공 하기 위한 기관</td>\n<td style=\"text-align:center\">주민등록번호 외 본인 확인 업무를 제공하는 기관</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">업체</td>\n<td style=\"text-align:center\">한국정보인증,코스콤,금융결제원 등</td>\n<td style=\"text-align:center\">6개 공인인증 기관,3사 통신사, 카드사 등</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"인증서\"><a class=\"markdownIt-Anchor\" href=\"#인증서\"></a> 인증서</h2>\n<ul>\n<li>공개키 인증서(public-key certificate: PKC)\n<ul>\n<li>이름이나 소속, 메일 주소 등의 개인 정보</li>\n<li>당사자의 공개 키가 기재</li>\n<li>인증기관(CA; certification authority)의 개인 키로 디지털 서명</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"인증서를-사용하는-시나리오\"><a class=\"markdownIt-Anchor\" href=\"#인증서를-사용하는-시나리오\"></a> 인증서를 사용하는 시나리오</h3>\n<p><img src=\"/images/cryptography/certification/public_key_certification_senario.png\" alt=\"\" /></p>\n<h3 id=\"공인-인증서-종류\"><a class=\"markdownIt-Anchor\" href=\"#공인-인증서-종류\"></a> 공인 인증서 종류</h3>\n<ul>\n<li>전자서명용 인증서(Digital Signature Certificate)\n<ul>\n<li>거래 상대방에 대한 신원확인(인증), 전자문서의 위.변조여부의 검출(무결성), 전자문서 송.수신자간의 송.수신사실 여부에 대한 ⑨부인방지(부인봉쇄) 목적으로 사용</li>\n</ul>\n</li>\n<li>암호화용 인증서(Encryption Certificate)\n<ul>\n<li>적법한 송.수신자를 제외한 제3자가 전송중인 메시지를 보지 못하도록 하는데 사용(비밀성)</li>\n</ul>\n</li>\n<li>클라언트 SSL 인증서(Client SSL Certificate)\n<ul>\n<li>클라이언트와 서버가 안전한 통신을 하고자 할 때, 서버가 클라이언트의 신원확인을 위해 사용</li>\n<li>Form Signing, SSO(Single Sign On)에서 사용</li>\n</ul>\n</li>\n<li>서버 SSL 인증서(Sever SSL Certificate)\n<ul>\n<li>클라이언트와 서버가 안전한 통신을 하고자 할 때, 클라이언트가 서버의 신원확인을 위해 사용</li>\n</ul>\n</li>\n<li>ⓓS/MIME 인증서(S/MIME Certificate)\n<ul>\n<li>전자메일에 전자서명 하거나 전자메일의 암호화를 위해서 사용</li>\n</ul>\n</li>\n<li>소프트웨어 배포용 인증서(Code-Signing Certificate)\n<ul>\n<li>인터넷과 같은 안전하지 않은 통신망을 통해 소프트웨어를 안전하게 배포할 목적으로 사용하는 인증서로서 Java code, Javascript 등<br />\n소프트웨어 코드에 그 제작자가 전자서명을 함으로써, 제작자의 신원확인과 전송과정에서의 소프트웨어의 위.변조를 확인할 용도로 사용합니다.</li>\n</ul>\n</li>\n<li>인증기관용 인증서(CA Certificate)\n<ul>\n<li>CA의 확인을 위해 사용</li>\n<li>클라이언트와 서버의 S/W에서 다른 인증서의 신뢰여부를 검증할 때 사용</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"verisign-무료-서비스\"><a class=\"markdownIt-Anchor\" href=\"#verisign-무료-서비스\"></a> Verisign 무료 서비스</h3>\n<ul>\n<li>\n<p>개인을 위한 인증서(digital ID) 를 60일간 무료 시험판으로 만들어서 제공</p>\n</li>\n<li>\n<p>웹 브라우저만 있으면 온라인에서 바로 발행할 수 있으며 본인 인증은 메일이 도착했는지 여부만으로 확인</p>\n</li>\n<li>\n<p>Https로 보호된 웹 사이트에서 이름, 메일 주소, 패스워드를 입력하고 인증서 작성</p>\n   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">• Organization = KECA, Inc.</span><br><span class=\"line\">• Organizational Unit = CrossCert Class 1 Consumer Individual Subscriber CA</span><br><span class=\"line\">• Organizational Unit = Terms of use at www.crosscert.com/rpa (c)01</span><br><span class=\"line\">• Organizational Unit = Authenticated by CrossCert</span><br><span class=\"line\">• Organizational Unit = Member, VeriSign Trust Network</span><br><span class=\"line\">• Organizational Unit = Persona Not Validated</span><br><span class=\"line\">• Organizational Unit = Digital ID Class 1 - Netscape</span><br><span class=\"line\">• Common Name = Gil Dong Hong</span><br><span class=\"line\">• Email Address = gildong@gmail.com</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"인증서의-표준-규격-x509\"><a class=\"markdownIt-Anchor\" href=\"#인증서의-표준-규격-x509\"></a> 인증서의 표준 규격 X.509</h3>\n<ul>\n<li>\n<p>X.509</p>\n<ul>\n<li>가장 널리 사용</li>\n<li>ITU, ISO에서 규정한 규격으로 인증서의 생성 교환을 수행할 때 사용</li>\n</ul>\n</li>\n<li>\n<p>X.509 v3 디지털 인증서의 구조</p>\n</li>\n<li>\n<p>Certificate</p>\n<ul>\n<li>Version 인증서의 버전을 나타냄</li>\n<li>Serial Number CA가 할당한 정수로 된 고유 번호</li>\n<li>Signature 서명 알고리즘 식별자</li>\n<li>Issuer 발행자</li>\n<li>Validity 유효기간\n<ul>\n<li>Not Before 유효기간 시작 날짜</li>\n<li>Not After 유효기간 끝나는 날짜</li>\n</ul>\n</li>\n<li>Subject 소유자</li>\n<li>Subject Public Key Info 소유자 공개 키 정보\n<ul>\n<li>Public Key Algorithm 공개 키 알고리즘</li>\n<li>Subject Public Key</li>\n</ul>\n</li>\n<li>Issuer Unique Identifier (Optional) 발행자 고유 식별자</li>\n<li>Subject Unique Identifier (Optional) 소유자 고유 식별자</li>\n<li>Extensions (Optional) 확장</li>\n</ul>\n</li>\n<li>\n<p>Certificate Signature Algorithm</p>\n</li>\n<li>\n<p>Certificate Signature</p>\n</li>\n<li>\n<p>인증서 파일 확장<br />\n.CER - CER 암호화 된 인증서. 복수의 인자증서도 가능.<br />\n.DER - DER 암호화 된 인증서.<br />\n.PEM - (Privacy Enhanced Mail) Base64로 인코딩 된 인증서. &quot;-----BEGIN CERTIFICATE-----&quot;와 “-----END CERTIFICATE-----” 가운데에 들어간다.<br />\n.P7B - .p7c 참조.<br />\n.P7C - PKCS#7 서명 자료 구조(자료는 제외), 인증서이거나 CRL(복수도 가능).<br />\n.PFX - .p12 참조.<br />\n.P12 - PKCS#12, 공개 인증서와 암호로 보호되는 개인 키를 가질 수 있다(복수도 가능).</p>\n</li>\n</ul>\n<h3 id=\"공개-키-기반-구조-pki\"><a class=\"markdownIt-Anchor\" href=\"#공개-키-기반-구조-pki\"></a> 공개 키 기반 구조 (PKI)</h3>\n<ul>\n<li>\n<p>공개 키 기반(public key infrastructure)</p>\n<ul>\n<li>공개 키를 효과적으로 운용하기 위해 정한 규격이나 선택사양의 총칭</li>\n<li>PKCS(Public-Key Cryptography Standards) : RSA사가 정하고 있는 규격의 집합</li>\n<li>RFC(Requests for Comments) 중에서도 PKI에 관련된 문서</li>\n<li>X.509</li>\n<li>API 사양서</li>\n</ul>\n</li>\n<li>\n<p>PKI 구성 요소</p>\n<ul>\n<li>이용자 : PKI를 이용하는 사람</li>\n<li>인증기관 : 인증서를 발행 하는 사람</li>\n<li>저장소 : 인증서를 보관하고 있는 데이터 베이스</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/certification/PKI_info.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>이용자</p>\n<ul>\n<li>PKI를 사용해서 자신의 공개 키를 등록하고 싶어 하는 사람과 등록되어 있는 공개 키를 사용하고 싶어 하는 사람</li>\n</ul>\n</li>\n<li>\n<p>이용자가 하는일</p>\n<ul>\n<li>키 쌍을 작성한다</li>\n<li>인증 기관에 공개 키를 등록한다</li>\n<li>인증 기관으로부터 인증서를 발행 받는다</li>\n<li>수신한 암호문을 복호화 한다.</li>\n<li>메세지에 디지털 서명을 한다.</li>\n</ul>\n</li>\n<li>\n<p>공개키 사용자가 하는</p>\n<ul>\n<li>메시지를 암호화해서 수신자에게 송신한다</li>\n<li>디지털 서명을 검증한다.일</li>\n</ul>\n</li>\n<li>\n<p>인증 기관 (CA; certification authority)</p>\n<ul>\n<li>인증서의 관리를 행하는 기관</li>\n<li>키 쌍을 작성한다</li>\n<li>공개키 등록 때 본인을 인증한다</li>\n<li>인증서 작성 발행, 폐지</li>\n</ul>\n</li>\n<li>\n<p>등록 기관 (RA; registration authority)</p>\n<ul>\n<li>인증 기관의 일중 공개키의 등록과 본인에 대한 인증을 대행 하는 기관</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/certification/ds_management_korea.png\" alt=\"\" /></p>\n<p>한국 공인 인증 기관</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">공인인증기관</th>\n<th style=\"text-align:center\">웹페이지</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">힌국정보인증(주)</td>\n<td style=\"text-align:center\"><a href=\"http://www.signgate.com\" target=\"_blank\" rel=\"noopener\">http://www.signgate.com</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(주)코스콤</td>\n<td style=\"text-align:center\"><a href=\"http://www.signkorea.com\" target=\"_blank\" rel=\"noopener\">http://www.signkorea.com</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">금융결제원</td>\n<td style=\"text-align:center\"><a href=\"http://www.yessign.com\" target=\"_blank\" rel=\"noopener\">http://www.yessign.com</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">한국전자인증(주)</td>\n<td style=\"text-align:center\"><a href=\"http://www.crosscert.com\" target=\"_blank\" rel=\"noopener\">http://www.crosscert.com</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">한국무역정보통신</td>\n<td style=\"text-align:center\"><a href=\"http://tradesign.net\" target=\"_blank\" rel=\"noopener\">http://tradesign.net</a></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>저장소 (repository)</p>\n<ul>\n<li>인증서를 보존해 두고, PKI의 이용자가 인증서를 입수할 수 있도록 한 데이터 베이스</li>\n<li>인증서 디렉토리</li>\n</ul>\n</li>\n<li>\n<p>인증 기관의 역할</p>\n<ul>\n<li>\n<p>키 쌍의 작성</p>\n<ul>\n<li>PKI의 이용자가 작성하거나</li>\n<li>인증기관이 이용자의 키 쌍을 생성할 경우 개인 키를 이용자에게 보내는 추가 업무를 해야한다.\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/PKCS\" target=\"_blank\" rel=\"noopener\">PKCS</a> #12 (Personal Information Exchange Syntax Standard)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>인증서 등록</p>\n<ul>\n<li>이용자는 인증 기관에 인증서 작성을 의뢰\n<ul>\n<li>규격 : <a href=\"https://en.wikipedia.org/wiki/PKCS\" target=\"_blank\" rel=\"noopener\">PKCS</a> #10 (Certification Request Syntax Standard)</li>\n</ul>\n</li>\n<li>운용 규격 (CPS; certification practice statement)에 근거해서 이용자를 인증하고, 인증서를 작성\n<ul>\n<li>인증서 형식 : <a href=\"https://en.wikipedia.org/wiki/PKCS\" target=\"_blank\" rel=\"noopener\">PKCS</a> #6 (Extended-Certificate Syntax Standard)나 X.509로 정의</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>인증서의 폐지</p>\n<ul>\n<li>이용자가 개인키에 대한 권한을 잃거나 개인키를 분실 혹은 도난 당했을 경우 인증기관은 인증서를 폐지(revoke)해서 무효화 해야한다.</li>\n<li>인증서를 폐지하는 경우 인증기관은 인증서 폐지 목록(CRL) 을 작성한다.</li>\n</ul>\n</li>\n<li>\n<p>CRL(Certification revocation list)관리</p>\n<ul>\n<li>인증기관이 폐지한 인증서의 일련번호의 목록에 대해 인증기관이 디지털 서명을 붙인 것이다.</li>\n<li><em>인증기관의 최신 CRL을 조사해서 그 인증서가 유효한지 아닌지를 확실히 확인 할 필요가 있다</em></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"계층-구조를-갖는-인증서\"><a class=\"markdownIt-Anchor\" href=\"#계층-구조를-갖는-인증서\"></a> 계층 구조를 갖는 인증서</h3>\n<ul>\n<li>루트 CA\n<ul>\n<li>최상위 인증기관</li>\n</ul>\n</li>\n<li>셀프 서명(Self-signature)\n<ul>\n<li>자기 자신의 공개 키에 대해서 자신의 개인 키로 서명하는 디지털 서명</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/certification/hierarchy_structure_CA.png\" alt=\"\" /><br />\n<img src=\"/images/cryptography/certification/flow.png\" alt=\"\" /></p>\n<ul>\n<li>한국의 PKI\n<ul>\n<li>한국인터넷진흥원 전자서명인증관리센터(<a href=\"http://rootca.kisa.or.kr\" target=\"_blank\" rel=\"noopener\">http://rootca.kisa.or.kr</a>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"공인-인증서-대체-기술\"><a class=\"markdownIt-Anchor\" href=\"#공인-인증서-대체-기술\"></a> 공인 인증서 대체 기술</h3>\n<ul>\n<li>핸드폰 개통할 때 계좌 인증, 카드 인증 사용</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">구분</th>\n<th style=\"text-align:center\">주요 내용</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">휴대폰 본인 확인</td>\n<td style=\"text-align:center\">본인 확인 기관으로 지정된 통신 3사가 휴대폰 개통 과정에서 수집된 개인정보를 활용해 본인 여부 확인</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">계좌 인증</td>\n<td style=\"text-align:center\">신분 확인을 통해 개설된 은행계좌에 소액입금과 함께 임의적 문자를 송부해 본인 여부 확인</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">카드 인증</td>\n<td style=\"text-align:center\">신분확인을 통해 발급된 신용카드의 정보입력을 통해 본인 여부 확인</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"공공-민간-전자-서명\"><a class=\"markdownIt-Anchor\" href=\"#공공-민간-전자-서명\"></a> 공공 민간 전자 서명</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">공인인증기관</th>\n<th style=\"text-align:center\">본인확인기관</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">정의</td>\n<td style=\"text-align:center\">공인인증업무를 제공 하기 위한 기관</td>\n<td style=\"text-align:center\">주민등록번호 외 본인 확인 업무를 제공하는 기관</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">업체</td>\n<td style=\"text-align:center\">한국정보인증,코스콤,금융결제원 등</td>\n<td style=\"text-align:center\">6개 공인인증 기관,3사 통신사, 카드사 등</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"cryptography-block-cipher","date":"2020-04-08T04:15:22.000Z","_content":"\n## block cipher\n- DES : 보안 취약점 발견으로 이제 안씀\n\n## AES \n- 전 세계 공모를 통해 선정 벨기에의 암호학자 2명이 제출한 Rijndael \n- AES is a block cipher with a fixed block size of 128 bit (16 byte)\n\n### Padding\n- 입력 데이터가 블록 사이즈의 배수가 아니라면 블록 사임ㅇㄹ호즈에 맞추기 위한 방식이 Padding\n- 부족한 size 만큼 바이트 값을 추가하는 PKCS7 Padding을 많이 사용\n- 3Byte가 부족할 경우 03d을 3개 패딩\n\n![](온라인 상점은 Microservice 아키텍처 패턴을 사용하므로 제품 세부 사항 데이터가 여러 서비스에 분산됩니다. 예를 들어\n\n)\n\n### Operation Mode\n- 입력데이터가 블록보다 크면 암/복호화시 여러 개의 블록이 생성됨\n- 각 블록간의 관계를 처리하는게 운영 모드\n- ECB, CBC, CFR, GCM 등의 모드가 있음\n\n#### ECB\n- Electronic Code Book\n- 동일한 내용을 갖는 평문 블록은 이에 대응 되면 동일한 암호문 블록으로 변환되고 1:1 대응표를 갖게 된다.\n- 대칭키 암호화시 ECB를 사용하면 안됨\n\n![](/images/cryptography/block/AES/ECB.png)\n\n#### CBC\n- Cipher Block Chaining\n- Message Authentication Code 에 사용 불\n- 암호화\n- 직전 블록은 다음 블록의 입력으로 사용하여 안정성이 증대됨\n- 초기 블록이 유추가 어렵도록 Initial Vector 사용\n- 1단계 전에 수행되어 결과로 출력된 암호문 블록에 평문 블록을 XOR 하고 나서 암호화를 수행 \n    그결과 생성되는 각각의 암호문 블록은 단지 현재 평문 블록뿐만 아니라 그 이전의 평문 블록들의 영향\n    \n![](/images/cryptography/block/AES/CBC_encrypt.png)\n\n- 복호화\n- 최초 암호문 블록을 XOR 하고 나서 복호화의 결과와 IV를 이용해 최초 평문 블록 P1을 만들고\n- 나머지는 복호화 XOR을 통해 최초 평문 블록을 만든다. \n- 암호문 블록이 손상되면 이후 블록들이 전부 손상된다.\n\n![](/images/cryptography/block/AES/CBC_decrypt_1.png)\n![](/images/cryptography/block/AES/CBC_decrypt_2.png)\n    \n#### GCM\n- Galois/Counter Mode\n- Padding 불필요\n- 인증 기능 제공\n- 병렬 처리가 가능해서 암/복호화 속도가 매우 빠름, SSL/TLS 에서 많이 사용\n\n![](/images/cryptography/block/AES/GCM.png)\n\n    \n#### Block Size : 128/192/256\n\n#### CFB\n- Cipher FeedBack \n    - 1단계 앞의 *암호문* 블록을 암호 알고리즘의 입력으로 사용\n    - 피드백 : 암호화의 입력으로 사용\n    - 한 단계앞의 암호문 블록을 암호화 한 후 평문 블록과 XOR 연산 \n    - 최초의 암호문 블록을 만들어낼 때는 1단계 앞의 출력이 존재하지 않으므로 대신에 초기화 벡터(Initial Vector) 사용\n   - replay attack 가능\n   \n#### OFB\n- Output FeedBack\n    - 암호 알고리즘의 출력을 암호 알고리즘의 입력으로 피드백\n    - 평문 블록은 암호 알고리즘에 의해 직접 암호화 되고 있는 것은 아님\n    \n#### CTR\n- CounTeR 모드\n    - 1씩 증가해 가는 카운터를 암호화해서 키 스트림을 만들어 내는 스트림 암호\n    - CTR 모드에서는 블록을 암호화 할 때 마다 1씩 증가해 가는 카운터를 암호화해서 키 스트림을 만듬\n    - 카운터를 암호화 한 비트열과 평문 블록과 XOR을 취한 결과가 암호문 블록이 됨\n    - 카운터의 초기값은 암호화 때마다 다른 값(nonce, 비표)을 기초로 해서 만든다\n\n![](/images/cryptography/block/AES/nonce.png)\n\n- CTR 암호화\n![](/images/cryptography/block/AES/CTR_AES_encrypt.png)\n\n- CTR 복호화\n![](/images/cryptography/block/AES/CTR_AES_decrypt.png)\n\n- CTR 모드의 암호화와 복호화는 완전히 같은 구조\n- CTR 모드는 블록을 임의의 순서로 암호화, 복호화 할 수 있다.\n- 프로그램으로 구현하는 것이 매우 간단\n- 병렬 처리가 가능한 시스템에서는 CTR 모드를 이용하여 자료를 고속 처리\n- CTR Counter size 16byte\n- AES128/AES192/AES256 암호화 키 사이즈가 각각의 bit\n\n#### CBC, CTR을 중점으로 보자\n","source":"_posts/cryptography-block-cipher.md","raw":"---\ntitle: cryptography-block-cipher\ndate: 2020-04-08 13:15:22\ntags:\n- PKI\ncategories:\n- cryptography\n---\n\n## block cipher\n- DES : 보안 취약점 발견으로 이제 안씀\n\n## AES \n- 전 세계 공모를 통해 선정 벨기에의 암호학자 2명이 제출한 Rijndael \n- AES is a block cipher with a fixed block size of 128 bit (16 byte)\n\n### Padding\n- 입력 데이터가 블록 사이즈의 배수가 아니라면 블록 사임ㅇㄹ호즈에 맞추기 위한 방식이 Padding\n- 부족한 size 만큼 바이트 값을 추가하는 PKCS7 Padding을 많이 사용\n- 3Byte가 부족할 경우 03d을 3개 패딩\n\n![](온라인 상점은 Microservice 아키텍처 패턴을 사용하므로 제품 세부 사항 데이터가 여러 서비스에 분산됩니다. 예를 들어\n\n)\n\n### Operation Mode\n- 입력데이터가 블록보다 크면 암/복호화시 여러 개의 블록이 생성됨\n- 각 블록간의 관계를 처리하는게 운영 모드\n- ECB, CBC, CFR, GCM 등의 모드가 있음\n\n#### ECB\n- Electronic Code Book\n- 동일한 내용을 갖는 평문 블록은 이에 대응 되면 동일한 암호문 블록으로 변환되고 1:1 대응표를 갖게 된다.\n- 대칭키 암호화시 ECB를 사용하면 안됨\n\n![](/images/cryptography/block/AES/ECB.png)\n\n#### CBC\n- Cipher Block Chaining\n- Message Authentication Code 에 사용 불\n- 암호화\n- 직전 블록은 다음 블록의 입력으로 사용하여 안정성이 증대됨\n- 초기 블록이 유추가 어렵도록 Initial Vector 사용\n- 1단계 전에 수행되어 결과로 출력된 암호문 블록에 평문 블록을 XOR 하고 나서 암호화를 수행 \n    그결과 생성되는 각각의 암호문 블록은 단지 현재 평문 블록뿐만 아니라 그 이전의 평문 블록들의 영향\n    \n![](/images/cryptography/block/AES/CBC_encrypt.png)\n\n- 복호화\n- 최초 암호문 블록을 XOR 하고 나서 복호화의 결과와 IV를 이용해 최초 평문 블록 P1을 만들고\n- 나머지는 복호화 XOR을 통해 최초 평문 블록을 만든다. \n- 암호문 블록이 손상되면 이후 블록들이 전부 손상된다.\n\n![](/images/cryptography/block/AES/CBC_decrypt_1.png)\n![](/images/cryptography/block/AES/CBC_decrypt_2.png)\n    \n#### GCM\n- Galois/Counter Mode\n- Padding 불필요\n- 인증 기능 제공\n- 병렬 처리가 가능해서 암/복호화 속도가 매우 빠름, SSL/TLS 에서 많이 사용\n\n![](/images/cryptography/block/AES/GCM.png)\n\n    \n#### Block Size : 128/192/256\n\n#### CFB\n- Cipher FeedBack \n    - 1단계 앞의 *암호문* 블록을 암호 알고리즘의 입력으로 사용\n    - 피드백 : 암호화의 입력으로 사용\n    - 한 단계앞의 암호문 블록을 암호화 한 후 평문 블록과 XOR 연산 \n    - 최초의 암호문 블록을 만들어낼 때는 1단계 앞의 출력이 존재하지 않으므로 대신에 초기화 벡터(Initial Vector) 사용\n   - replay attack 가능\n   \n#### OFB\n- Output FeedBack\n    - 암호 알고리즘의 출력을 암호 알고리즘의 입력으로 피드백\n    - 평문 블록은 암호 알고리즘에 의해 직접 암호화 되고 있는 것은 아님\n    \n#### CTR\n- CounTeR 모드\n    - 1씩 증가해 가는 카운터를 암호화해서 키 스트림을 만들어 내는 스트림 암호\n    - CTR 모드에서는 블록을 암호화 할 때 마다 1씩 증가해 가는 카운터를 암호화해서 키 스트림을 만듬\n    - 카운터를 암호화 한 비트열과 평문 블록과 XOR을 취한 결과가 암호문 블록이 됨\n    - 카운터의 초기값은 암호화 때마다 다른 값(nonce, 비표)을 기초로 해서 만든다\n\n![](/images/cryptography/block/AES/nonce.png)\n\n- CTR 암호화\n![](/images/cryptography/block/AES/CTR_AES_encrypt.png)\n\n- CTR 복호화\n![](/images/cryptography/block/AES/CTR_AES_decrypt.png)\n\n- CTR 모드의 암호화와 복호화는 완전히 같은 구조\n- CTR 모드는 블록을 임의의 순서로 암호화, 복호화 할 수 있다.\n- 프로그램으로 구현하는 것이 매우 간단\n- 병렬 처리가 가능한 시스템에서는 CTR 모드를 이용하여 자료를 고속 처리\n- CTR Counter size 16byte\n- AES128/AES192/AES256 암호화 키 사이즈가 각각의 bit\n\n#### CBC, CTR을 중점으로 보자\n","slug":"cryptography-block-cipher","published":1,"updated":"2020-07-11T04:51:03.332Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513u000mqlvocq8le378","content":"<h2 id=\"block-cipher\"><a class=\"markdownIt-Anchor\" href=\"#block-cipher\"></a> block cipher</h2>\n<ul>\n<li>DES : 보안 취약점 발견으로 이제 안씀</li>\n</ul>\n<h2 id=\"aes\"><a class=\"markdownIt-Anchor\" href=\"#aes\"></a> AES</h2>\n<ul>\n<li>전 세계 공모를 통해 선정 벨기에의 암호학자 2명이 제출한 Rijndael</li>\n<li>AES is a block cipher with a fixed block size of 128 bit (16 byte)</li>\n</ul>\n<h3 id=\"padding\"><a class=\"markdownIt-Anchor\" href=\"#padding\"></a> Padding</h3>\n<ul>\n<li>입력 데이터가 블록 사이즈의 배수가 아니라면 블록 사임ㅇㄹ호즈에 맞추기 위한 방식이 Padding</li>\n<li>부족한 size 만큼 바이트 값을 추가하는 PKCS7 Padding을 많이 사용</li>\n<li>3Byte가 부족할 경우 03d을 3개 패딩</li>\n</ul>\n<p>![](온라인 상점은 Microservice 아키텍처 패턴을 사용하므로 제품 세부 사항 데이터가 여러 서비스에 분산됩니다. 예를 들어</p>\n<p>)</p>\n<h3 id=\"operation-mode\"><a class=\"markdownIt-Anchor\" href=\"#operation-mode\"></a> Operation Mode</h3>\n<ul>\n<li>입력데이터가 블록보다 크면 암/복호화시 여러 개의 블록이 생성됨</li>\n<li>각 블록간의 관계를 처리하는게 운영 모드</li>\n<li>ECB, CBC, CFR, GCM 등의 모드가 있음</li>\n</ul>\n<h4 id=\"ecb\"><a class=\"markdownIt-Anchor\" href=\"#ecb\"></a> ECB</h4>\n<ul>\n<li>Electronic Code Book</li>\n<li>동일한 내용을 갖는 평문 블록은 이에 대응 되면 동일한 암호문 블록으로 변환되고 1:1 대응표를 갖게 된다.</li>\n<li>대칭키 암호화시 ECB를 사용하면 안됨</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/ECB.png\" alt=\"\" /></p>\n<h4 id=\"cbc\"><a class=\"markdownIt-Anchor\" href=\"#cbc\"></a> CBC</h4>\n<ul>\n<li>Cipher Block Chaining</li>\n<li>Message Authentication Code 에 사용 불</li>\n<li>암호화</li>\n<li>직전 블록은 다음 블록의 입력으로 사용하여 안정성이 증대됨</li>\n<li>초기 블록이 유추가 어렵도록 Initial Vector 사용</li>\n<li>1단계 전에 수행되어 결과로 출력된 암호문 블록에 평문 블록을 XOR 하고 나서 암호화를 수행<br />\n그결과 생성되는 각각의 암호문 블록은 단지 현재 평문 블록뿐만 아니라 그 이전의 평문 블록들의 영향</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/CBC_encrypt.png\" alt=\"\" /></p>\n<ul>\n<li>복호화</li>\n<li>최초 암호문 블록을 XOR 하고 나서 복호화의 결과와 IV를 이용해 최초 평문 블록 P1을 만들고</li>\n<li>나머지는 복호화 XOR을 통해 최초 평문 블록을 만든다.</li>\n<li>암호문 블록이 손상되면 이후 블록들이 전부 손상된다.</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/CBC_decrypt_1.png\" alt=\"\" /><br />\n<img src=\"/images/cryptography/block/AES/CBC_decrypt_2.png\" alt=\"\" /></p>\n<h4 id=\"gcm\"><a class=\"markdownIt-Anchor\" href=\"#gcm\"></a> GCM</h4>\n<ul>\n<li>Galois/Counter Mode</li>\n<li>Padding 불필요</li>\n<li>인증 기능 제공</li>\n<li>병렬 처리가 가능해서 암/복호화 속도가 매우 빠름, SSL/TLS 에서 많이 사용</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/GCM.png\" alt=\"\" /></p>\n<h4 id=\"block-size-128192256\"><a class=\"markdownIt-Anchor\" href=\"#block-size-128192256\"></a> Block Size : 128/192/256</h4>\n<h4 id=\"cfb\"><a class=\"markdownIt-Anchor\" href=\"#cfb\"></a> CFB</h4>\n<ul>\n<li>Cipher FeedBack\n<ul>\n<li>1단계 앞의 <em>암호문</em> 블록을 암호 알고리즘의 입력으로 사용</li>\n<li>피드백 : 암호화의 입력으로 사용</li>\n<li>한 단계앞의 암호문 블록을 암호화 한 후 평문 블록과 XOR 연산</li>\n<li>최초의 암호문 블록을 만들어낼 때는 1단계 앞의 출력이 존재하지 않으므로 대신에 초기화 벡터(Initial Vector) 사용</li>\n<li>replay attack 가능</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ofb\"><a class=\"markdownIt-Anchor\" href=\"#ofb\"></a> OFB</h4>\n<ul>\n<li>Output FeedBack\n<ul>\n<li>암호 알고리즘의 출력을 암호 알고리즘의 입력으로 피드백</li>\n<li>평문 블록은 암호 알고리즘에 의해 직접 암호화 되고 있는 것은 아님</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ctr\"><a class=\"markdownIt-Anchor\" href=\"#ctr\"></a> CTR</h4>\n<ul>\n<li>CounTeR 모드\n<ul>\n<li>1씩 증가해 가는 카운터를 암호화해서 키 스트림을 만들어 내는 스트림 암호</li>\n<li>CTR 모드에서는 블록을 암호화 할 때 마다 1씩 증가해 가는 카운터를 암호화해서 키 스트림을 만듬</li>\n<li>카운터를 암호화 한 비트열과 평문 블록과 XOR을 취한 결과가 암호문 블록이 됨</li>\n<li>카운터의 초기값은 암호화 때마다 다른 값(nonce, 비표)을 기초로 해서 만든다</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/nonce.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>CTR 암호화<br />\n<img src=\"/images/cryptography/block/AES/CTR_AES_encrypt.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>CTR 복호화<br />\n<img src=\"/images/cryptography/block/AES/CTR_AES_decrypt.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>CTR 모드의 암호화와 복호화는 완전히 같은 구조</p>\n</li>\n<li>\n<p>CTR 모드는 블록을 임의의 순서로 암호화, 복호화 할 수 있다.</p>\n</li>\n<li>\n<p>프로그램으로 구현하는 것이 매우 간단</p>\n</li>\n<li>\n<p>병렬 처리가 가능한 시스템에서는 CTR 모드를 이용하여 자료를 고속 처리</p>\n</li>\n<li>\n<p>CTR Counter size 16byte</p>\n</li>\n<li>\n<p>AES128/AES192/AES256 암호화 키 사이즈가 각각의 bit</p>\n</li>\n</ul>\n<h4 id=\"cbc-ctr을-중점으로-보자\"><a class=\"markdownIt-Anchor\" href=\"#cbc-ctr을-중점으로-보자\"></a> CBC, CTR을 중점으로 보자</h4>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"block-cipher\"><a class=\"markdownIt-Anchor\" href=\"#block-cipher\"></a> block cipher</h2>\n<ul>\n<li>DES : 보안 취약점 발견으로 이제 안씀</li>\n</ul>\n<h2 id=\"aes\"><a class=\"markdownIt-Anchor\" href=\"#aes\"></a> AES</h2>\n<ul>\n<li>전 세계 공모를 통해 선정 벨기에의 암호학자 2명이 제출한 Rijndael</li>\n<li>AES is a block cipher with a fixed block size of 128 bit (16 byte)</li>\n</ul>\n<h3 id=\"padding\"><a class=\"markdownIt-Anchor\" href=\"#padding\"></a> Padding</h3>\n<ul>\n<li>입력 데이터가 블록 사이즈의 배수가 아니라면 블록 사임ㅇㄹ호즈에 맞추기 위한 방식이 Padding</li>\n<li>부족한 size 만큼 바이트 값을 추가하는 PKCS7 Padding을 많이 사용</li>\n<li>3Byte가 부족할 경우 03d을 3개 패딩</li>\n</ul>\n<p>![](온라인 상점은 Microservice 아키텍처 패턴을 사용하므로 제품 세부 사항 데이터가 여러 서비스에 분산됩니다. 예를 들어</p>\n<p>)</p>\n<h3 id=\"operation-mode\"><a class=\"markdownIt-Anchor\" href=\"#operation-mode\"></a> Operation Mode</h3>\n<ul>\n<li>입력데이터가 블록보다 크면 암/복호화시 여러 개의 블록이 생성됨</li>\n<li>각 블록간의 관계를 처리하는게 운영 모드</li>\n<li>ECB, CBC, CFR, GCM 등의 모드가 있음</li>\n</ul>\n<h4 id=\"ecb\"><a class=\"markdownIt-Anchor\" href=\"#ecb\"></a> ECB</h4>\n<ul>\n<li>Electronic Code Book</li>\n<li>동일한 내용을 갖는 평문 블록은 이에 대응 되면 동일한 암호문 블록으로 변환되고 1:1 대응표를 갖게 된다.</li>\n<li>대칭키 암호화시 ECB를 사용하면 안됨</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/ECB.png\" alt=\"\" /></p>\n<h4 id=\"cbc\"><a class=\"markdownIt-Anchor\" href=\"#cbc\"></a> CBC</h4>\n<ul>\n<li>Cipher Block Chaining</li>\n<li>Message Authentication Code 에 사용 불</li>\n<li>암호화</li>\n<li>직전 블록은 다음 블록의 입력으로 사용하여 안정성이 증대됨</li>\n<li>초기 블록이 유추가 어렵도록 Initial Vector 사용</li>\n<li>1단계 전에 수행되어 결과로 출력된 암호문 블록에 평문 블록을 XOR 하고 나서 암호화를 수행<br />\n그결과 생성되는 각각의 암호문 블록은 단지 현재 평문 블록뿐만 아니라 그 이전의 평문 블록들의 영향</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/CBC_encrypt.png\" alt=\"\" /></p>\n<ul>\n<li>복호화</li>\n<li>최초 암호문 블록을 XOR 하고 나서 복호화의 결과와 IV를 이용해 최초 평문 블록 P1을 만들고</li>\n<li>나머지는 복호화 XOR을 통해 최초 평문 블록을 만든다.</li>\n<li>암호문 블록이 손상되면 이후 블록들이 전부 손상된다.</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/CBC_decrypt_1.png\" alt=\"\" /><br />\n<img src=\"/images/cryptography/block/AES/CBC_decrypt_2.png\" alt=\"\" /></p>\n<h4 id=\"gcm\"><a class=\"markdownIt-Anchor\" href=\"#gcm\"></a> GCM</h4>\n<ul>\n<li>Galois/Counter Mode</li>\n<li>Padding 불필요</li>\n<li>인증 기능 제공</li>\n<li>병렬 처리가 가능해서 암/복호화 속도가 매우 빠름, SSL/TLS 에서 많이 사용</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/GCM.png\" alt=\"\" /></p>\n<h4 id=\"block-size-128192256\"><a class=\"markdownIt-Anchor\" href=\"#block-size-128192256\"></a> Block Size : 128/192/256</h4>\n<h4 id=\"cfb\"><a class=\"markdownIt-Anchor\" href=\"#cfb\"></a> CFB</h4>\n<ul>\n<li>Cipher FeedBack\n<ul>\n<li>1단계 앞의 <em>암호문</em> 블록을 암호 알고리즘의 입력으로 사용</li>\n<li>피드백 : 암호화의 입력으로 사용</li>\n<li>한 단계앞의 암호문 블록을 암호화 한 후 평문 블록과 XOR 연산</li>\n<li>최초의 암호문 블록을 만들어낼 때는 1단계 앞의 출력이 존재하지 않으므로 대신에 초기화 벡터(Initial Vector) 사용</li>\n<li>replay attack 가능</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ofb\"><a class=\"markdownIt-Anchor\" href=\"#ofb\"></a> OFB</h4>\n<ul>\n<li>Output FeedBack\n<ul>\n<li>암호 알고리즘의 출력을 암호 알고리즘의 입력으로 피드백</li>\n<li>평문 블록은 암호 알고리즘에 의해 직접 암호화 되고 있는 것은 아님</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ctr\"><a class=\"markdownIt-Anchor\" href=\"#ctr\"></a> CTR</h4>\n<ul>\n<li>CounTeR 모드\n<ul>\n<li>1씩 증가해 가는 카운터를 암호화해서 키 스트림을 만들어 내는 스트림 암호</li>\n<li>CTR 모드에서는 블록을 암호화 할 때 마다 1씩 증가해 가는 카운터를 암호화해서 키 스트림을 만듬</li>\n<li>카운터를 암호화 한 비트열과 평문 블록과 XOR을 취한 결과가 암호문 블록이 됨</li>\n<li>카운터의 초기값은 암호화 때마다 다른 값(nonce, 비표)을 기초로 해서 만든다</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/nonce.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>CTR 암호화<br />\n<img src=\"/images/cryptography/block/AES/CTR_AES_encrypt.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>CTR 복호화<br />\n<img src=\"/images/cryptography/block/AES/CTR_AES_decrypt.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>CTR 모드의 암호화와 복호화는 완전히 같은 구조</p>\n</li>\n<li>\n<p>CTR 모드는 블록을 임의의 순서로 암호화, 복호화 할 수 있다.</p>\n</li>\n<li>\n<p>프로그램으로 구현하는 것이 매우 간단</p>\n</li>\n<li>\n<p>병렬 처리가 가능한 시스템에서는 CTR 모드를 이용하여 자료를 고속 처리</p>\n</li>\n<li>\n<p>CTR Counter size 16byte</p>\n</li>\n<li>\n<p>AES128/AES192/AES256 암호화 키 사이즈가 각각의 bit</p>\n</li>\n</ul>\n<h4 id=\"cbc-ctr을-중점으로-보자\"><a class=\"markdownIt-Anchor\" href=\"#cbc-ctr을-중점으로-보자\"></a> CBC, CTR을 중점으로 보자</h4>\n"},{"title":"cryptography-diffie-hellman-algorithm","date":"2020-04-20T05:23:56.000Z","_content":"## Diffe-Hellman Algorithm\n- 타인에게 알려져도 상관없는 정보를 두 사람이 교환하는 것만으로 공통의 비밀 값을 만들어내는 방법\n- 실제 키 교환이 아닌 공유할 키를 계산하여 만들어 내는 것\n- 이산 대수 문제(Discrete Logarithm Problem) 이용\n$y = g^x mod P$ 일때 *g와 x와 p를 안다면 y는 구하기 쉽지만* *g와 y와 P를 알땐 x를 구하기는 어렵다*는 방식에 착안하여 만들어진 알고리즘\n\n### 잠깐의 수학시간\n- 항등원 : 집합 S의 임의의 원소 a와 원소 e를 연산한 결과가 a가 될 때 e를 연산에 대한 항등원이라고 한다.\n    - ex) 10 + 0 = 10 , 10 * 1 = 10\n    - 0은 덧셈의 항등원, 1은 곱셈의 항등원\n- 역원 : 집합 S의 임의의 원소 a와 x를 연산한 결과가 항등원 e가 될 때 x를 연산에 대한 a의 역원이라고 한다.\n    - ex ) 10 - 10 = 0, 10 * $\\frac{1}{10}$ = 1\n    - 덧셈 10 의 역원은 -10, 곱셈 10의 역원은 $\\frac{1}{10}$\n- 합동 : 두 정수 a와 b에 대하여 그들의 차 a-b가 m의 배수일 때, a는 b는 m을 법으로 *합동(congruent modulo m)* 이라함.\n    - $a \\equiv b$ (mod m)\n    - ex) $29 \\equiv 4$ (mod 5), 1 $\\equiv$ -1 (mod 2)\n- 잉여계 : 정수를 원소로 가지는 집합 A에 대하여, 어떤 임의의 서로 다른 원소도 m에 대한 합동이 아니면 집합 A는 법 m에 대한 잉여계이다.\n    - $n(A) \\le m$ 이다\n- 완전 잉여계 : C = {x|x는 법 m에 대하여 0,1,2,...(m-1)과 합동인 자연수}\n    - 특히, C = {x|x는 법 m에 대하여 0,1,2,...(m-1)} 일때 C는 법 M에 대한 최소 완전 잉여계이다.\n    - 집합 {0,1,3,7,9}는 법 5에 대한 완전 잉여계이다.\n    - 집합 {0,1,2,3,4,5,6}은 법 7에 대한 최소 완전 잉여계이다.\n- 기약 잉여계 : $\\text{\\textbraceleft}{a1,a2,..., a_m}\\text{\\textbraceright}$을 법 m에 대한 완전 잉여계라고 할 때, 이들 중 m과 서로소일때 원소만 모은 집합 $\\text{\\textbraceleft}{a_1',a_2',...,a_m'}\\text{\\textbraceright}$\n- 원시근 : 어떤 기약잉여계의 모든 원소를 원시근의 거듭제곱으로 표현할 수 있을때 이를 원시근이라 한다.\n\n### Discrete logarithm problem\n- https://www.youtube.com/watch?v=SL7J8hPKEWY&feature=youtu.be\n- https://www.youtube.com/watch?v=M-0qt6tdHzk\n- https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#DH2Ex\n","source":"_posts/cryptography-diffie-hellman-algorithm.md","raw":"---\ntitle: cryptography-diffie-hellman-algorithm\ndate: 2020-04-20 14:23:56\ntags:\n- key exchange\ncategories:\n- cryptography\n---\n## Diffe-Hellman Algorithm\n- 타인에게 알려져도 상관없는 정보를 두 사람이 교환하는 것만으로 공통의 비밀 값을 만들어내는 방법\n- 실제 키 교환이 아닌 공유할 키를 계산하여 만들어 내는 것\n- 이산 대수 문제(Discrete Logarithm Problem) 이용\n$y = g^x mod P$ 일때 *g와 x와 p를 안다면 y는 구하기 쉽지만* *g와 y와 P를 알땐 x를 구하기는 어렵다*는 방식에 착안하여 만들어진 알고리즘\n\n### 잠깐의 수학시간\n- 항등원 : 집합 S의 임의의 원소 a와 원소 e를 연산한 결과가 a가 될 때 e를 연산에 대한 항등원이라고 한다.\n    - ex) 10 + 0 = 10 , 10 * 1 = 10\n    - 0은 덧셈의 항등원, 1은 곱셈의 항등원\n- 역원 : 집합 S의 임의의 원소 a와 x를 연산한 결과가 항등원 e가 될 때 x를 연산에 대한 a의 역원이라고 한다.\n    - ex ) 10 - 10 = 0, 10 * $\\frac{1}{10}$ = 1\n    - 덧셈 10 의 역원은 -10, 곱셈 10의 역원은 $\\frac{1}{10}$\n- 합동 : 두 정수 a와 b에 대하여 그들의 차 a-b가 m의 배수일 때, a는 b는 m을 법으로 *합동(congruent modulo m)* 이라함.\n    - $a \\equiv b$ (mod m)\n    - ex) $29 \\equiv 4$ (mod 5), 1 $\\equiv$ -1 (mod 2)\n- 잉여계 : 정수를 원소로 가지는 집합 A에 대하여, 어떤 임의의 서로 다른 원소도 m에 대한 합동이 아니면 집합 A는 법 m에 대한 잉여계이다.\n    - $n(A) \\le m$ 이다\n- 완전 잉여계 : C = {x|x는 법 m에 대하여 0,1,2,...(m-1)과 합동인 자연수}\n    - 특히, C = {x|x는 법 m에 대하여 0,1,2,...(m-1)} 일때 C는 법 M에 대한 최소 완전 잉여계이다.\n    - 집합 {0,1,3,7,9}는 법 5에 대한 완전 잉여계이다.\n    - 집합 {0,1,2,3,4,5,6}은 법 7에 대한 최소 완전 잉여계이다.\n- 기약 잉여계 : $\\text{\\textbraceleft}{a1,a2,..., a_m}\\text{\\textbraceright}$을 법 m에 대한 완전 잉여계라고 할 때, 이들 중 m과 서로소일때 원소만 모은 집합 $\\text{\\textbraceleft}{a_1',a_2',...,a_m'}\\text{\\textbraceright}$\n- 원시근 : 어떤 기약잉여계의 모든 원소를 원시근의 거듭제곱으로 표현할 수 있을때 이를 원시근이라 한다.\n\n### Discrete logarithm problem\n- https://www.youtube.com/watch?v=SL7J8hPKEWY&feature=youtu.be\n- https://www.youtube.com/watch?v=M-0qt6tdHzk\n- https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#DH2Ex\n","slug":"cryptography-diffie-hellman-algorithm","published":1,"updated":"2020-07-11T04:51:03.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513x000pqlvo4ylo244s","content":"<h2 id=\"diffe-hellman-algorithm\"><a class=\"markdownIt-Anchor\" href=\"#diffe-hellman-algorithm\"></a> Diffe-Hellman Algorithm</h2>\n<ul>\n<li>타인에게 알려져도 상관없는 정보를 두 사람이 교환하는 것만으로 공통의 비밀 값을 만들어내는 방법</li>\n<li>실제 키 교환이 아닌 공유할 키를 계산하여 만들어 내는 것</li>\n<li>이산 대수 문제(Discrete Logarithm Problem) 이용<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">y = g^x mod P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 일때 <em>g와 x와 p를 안다면 y는 구하기 쉽지만</em> <em>g와 y와 P를 알땐 x를 구하기는 어렵다</em>는 방식에 착안하여 만들어진 알고리즘</li>\n</ul>\n<h3 id=\"잠깐의-수학시간\"><a class=\"markdownIt-Anchor\" href=\"#잠깐의-수학시간\"></a> 잠깐의 수학시간</h3>\n<ul>\n<li>항등원 : 집합 S의 임의의 원소 a와 원소 e를 연산한 결과가 a가 될 때 e를 연산에 대한 항등원이라고 한다.\n<ul>\n<li>ex) 10 + 0 = 10 , 10 * 1 = 10</li>\n<li>0은 덧셈의 항등원, 1은 곱셈의 항등원</li>\n</ul>\n</li>\n<li>역원 : 집합 S의 임의의 원소 a와 x를 연산한 결과가 항등원 e가 될 때 x를 연산에 대한 a의 역원이라고 한다.\n<ul>\n<li>ex ) 10 - 10 = 0, 10 * <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mn>1</mn><mn>10</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{10}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> = 1</li>\n<li>덧셈 10 의 역원은 -10, 곱셈 10의 역원은 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mn>1</mn><mn>10</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{10}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n<li>합동 : 두 정수 a와 b에 대하여 그들의 차 a-b가 m의 배수일 때, a는 b는 m을 법으로 <em>합동(congruent modulo m)</em> 이라함.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>≡</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a \\equiv b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46375em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span> (mod m)</li>\n<li>ex) <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>29</mn><mo>≡</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">29 \\equiv 4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span> (mod 5), 1 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>≡</mo></mrow><annotation encoding=\"application/x-tex\">\\equiv</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46375em;vertical-align:0em;\"></span><span class=\"mrel\">≡</span></span></span></span> -1 (mod 2)</li>\n</ul>\n</li>\n<li>잉여계 : 정수를 원소로 가지는 집합 A에 대하여, 어떤 임의의 서로 다른 원소도 m에 대한 합동이 아니면 집합 A는 법 m에 대한 잉여계이다.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">n(A) \\le m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span> 이다</li>\n</ul>\n</li>\n<li>완전 잉여계 : C = {x|x는 법 m에 대하여 0,1,2,…(m-1)과 합동인 자연수}\n<ul>\n<li>특히, C = {x|x는 법 m에 대하여 0,1,2,…(m-1)} 일때 C는 법 M에 대한 최소 완전 잉여계이다.</li>\n<li>집합 {0,1,3,7,9}는 법 5에 대한 완전 잉여계이다.</li>\n<li>집합 {0,1,2,3,4,5,6}은 법 7에 대한 최소 완전 잉여계이다.</li>\n</ul>\n</li>\n<li>기약 잉여계 : <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mtext>{</mtext><mrow><mi>a</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>a</mi><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>m</mi></msub></mrow><mtext>}</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{\\textbraceleft}{a1,a2,..., a_m}\\text{\\textbraceright}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">{</span></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\">}</span></span></span></span></span>을 법 m에 대한 완전 잉여계라고 할 때, 이들 중 m과 서로소일때 원소만 모은 집합 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mtext>{</mtext><mrow><msubsup><mi>a</mi><mn>1</mn><mo mathvariant=\"normal\">′</mo></msubsup><mo separator=\"true\">,</mo><msubsup><mi>a</mi><mn>2</mn><mo mathvariant=\"normal\">′</mo></msubsup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msubsup><mi>a</mi><mi>m</mi><mo mathvariant=\"normal\">′</mo></msubsup></mrow><mtext>}</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{\\textbraceleft}{a_1&#x27;,a_2&#x27;,...,a_m&#x27;}\\text{\\textbraceright}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">{</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\">}</span></span></span></span></span></li>\n<li>원시근 : 어떤 기약잉여계의 모든 원소를 원시근의 거듭제곱으로 표현할 수 있을때 이를 원시근이라 한다.</li>\n</ul>\n<h3 id=\"discrete-logarithm-problem\"><a class=\"markdownIt-Anchor\" href=\"#discrete-logarithm-problem\"></a> Discrete logarithm problem</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=SL7J8hPKEWY&amp;feature=youtu.be\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=SL7J8hPKEWY&amp;feature=youtu.be</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=M-0qt6tdHzk\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=M-0qt6tdHzk</a></li>\n<li><a href=\"https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#DH2Ex\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#DH2Ex</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"diffe-hellman-algorithm\"><a class=\"markdownIt-Anchor\" href=\"#diffe-hellman-algorithm\"></a> Diffe-Hellman Algorithm</h2>\n<ul>\n<li>타인에게 알려져도 상관없는 정보를 두 사람이 교환하는 것만으로 공통의 비밀 값을 만들어내는 방법</li>\n<li>실제 키 교환이 아닌 공유할 키를 계산하여 만들어 내는 것</li>\n<li>이산 대수 문제(Discrete Logarithm Problem) 이용<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">y = g^x mod P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 일때 <em>g와 x와 p를 안다면 y는 구하기 쉽지만</em> <em>g와 y와 P를 알땐 x를 구하기는 어렵다</em>는 방식에 착안하여 만들어진 알고리즘</li>\n</ul>\n<h3 id=\"잠깐의-수학시간\"><a class=\"markdownIt-Anchor\" href=\"#잠깐의-수학시간\"></a> 잠깐의 수학시간</h3>\n<ul>\n<li>항등원 : 집합 S의 임의의 원소 a와 원소 e를 연산한 결과가 a가 될 때 e를 연산에 대한 항등원이라고 한다.\n<ul>\n<li>ex) 10 + 0 = 10 , 10 * 1 = 10</li>\n<li>0은 덧셈의 항등원, 1은 곱셈의 항등원</li>\n</ul>\n</li>\n<li>역원 : 집합 S의 임의의 원소 a와 x를 연산한 결과가 항등원 e가 될 때 x를 연산에 대한 a의 역원이라고 한다.\n<ul>\n<li>ex ) 10 - 10 = 0, 10 * <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mn>1</mn><mn>10</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{10}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> = 1</li>\n<li>덧셈 10 의 역원은 -10, 곱셈 10의 역원은 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mn>1</mn><mn>10</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{10}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n<li>합동 : 두 정수 a와 b에 대하여 그들의 차 a-b가 m의 배수일 때, a는 b는 m을 법으로 <em>합동(congruent modulo m)</em> 이라함.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>≡</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a \\equiv b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46375em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span> (mod m)</li>\n<li>ex) <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>29</mn><mo>≡</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">29 \\equiv 4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span> (mod 5), 1 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>≡</mo></mrow><annotation encoding=\"application/x-tex\">\\equiv</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46375em;vertical-align:0em;\"></span><span class=\"mrel\">≡</span></span></span></span> -1 (mod 2)</li>\n</ul>\n</li>\n<li>잉여계 : 정수를 원소로 가지는 집합 A에 대하여, 어떤 임의의 서로 다른 원소도 m에 대한 합동이 아니면 집합 A는 법 m에 대한 잉여계이다.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">n(A) \\le m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span> 이다</li>\n</ul>\n</li>\n<li>완전 잉여계 : C = {x|x는 법 m에 대하여 0,1,2,…(m-1)과 합동인 자연수}\n<ul>\n<li>특히, C = {x|x는 법 m에 대하여 0,1,2,…(m-1)} 일때 C는 법 M에 대한 최소 완전 잉여계이다.</li>\n<li>집합 {0,1,3,7,9}는 법 5에 대한 완전 잉여계이다.</li>\n<li>집합 {0,1,2,3,4,5,6}은 법 7에 대한 최소 완전 잉여계이다.</li>\n</ul>\n</li>\n<li>기약 잉여계 : <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mtext>{</mtext><mrow><mi>a</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>a</mi><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>m</mi></msub></mrow><mtext>}</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{\\textbraceleft}{a1,a2,..., a_m}\\text{\\textbraceright}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">{</span></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\">}</span></span></span></span></span>을 법 m에 대한 완전 잉여계라고 할 때, 이들 중 m과 서로소일때 원소만 모은 집합 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mtext>{</mtext><mrow><msubsup><mi>a</mi><mn>1</mn><mo mathvariant=\"normal\">′</mo></msubsup><mo separator=\"true\">,</mo><msubsup><mi>a</mi><mn>2</mn><mo mathvariant=\"normal\">′</mo></msubsup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msubsup><mi>a</mi><mi>m</mi><mo mathvariant=\"normal\">′</mo></msubsup></mrow><mtext>}</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{\\textbraceleft}{a_1&#x27;,a_2&#x27;,...,a_m&#x27;}\\text{\\textbraceright}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">{</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\">}</span></span></span></span></span></li>\n<li>원시근 : 어떤 기약잉여계의 모든 원소를 원시근의 거듭제곱으로 표현할 수 있을때 이를 원시근이라 한다.</li>\n</ul>\n<h3 id=\"discrete-logarithm-problem\"><a class=\"markdownIt-Anchor\" href=\"#discrete-logarithm-problem\"></a> Discrete logarithm problem</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=SL7J8hPKEWY&amp;feature=youtu.be\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=SL7J8hPKEWY&amp;feature=youtu.be</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=M-0qt6tdHzk\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=M-0qt6tdHzk</a></li>\n<li><a href=\"https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#DH2Ex\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#DH2Ex</a></li>\n</ul>\n"},{"title":"cryptography-digital-signature","date":"2020-04-13T08:57:47.000Z","_content":"### Digital signature characteristics\n- Unforgeable (위조불가)\n    - 서명자만이 서명문을 생성 가능\n- Authentic (서명자 인증)\n    - 서명문의 서명자를 확인 가능\n- Not Reusable (재사용 불가)\n    - 서명문의 서명은 다른 문서의 서명으로 사용 불가능\n- Unalterable (변경 불가)\n    - 서명된 문서의 내용 변경 불가능\n- Nonrepudiation (부인 불가)\n    - 서명자는 후에 서명한 사실을 부인 불가능\n\n### Digital signature Requirement\n- 서명은 메세지에 의존하는 비트 형태이어야 한다.\n- 위조와 부인 방지 위해, 송신자의 유일한 정보 비트를 이용해야 함\n- 서명문을 만들기가 쉬워야 한다.\n- 서명문을 인식, 확인 하기가 쉬워야 한다.\n- 서명문을 위조하는 것이 계산적으로 실행 불가능\n- 기억장소에 서명문의 복사본을 유지하는 것이 실용적이어야 한다.\n\n#### 메시지에 직접 서명하는 방법\n![](/images/cryptography/message_signature/message_signature.png)\n\n#### 메세지의 해시 값에 서명하는 방법\n![](/images/cryptography/message_signature/hash_signature.png)\n![](/images/cryptography/message_signature/hash_time_flow.png)\n\n\n#### 디지털 서명에 대한 의문\n1. 암호문이 왜 서명으로서 사용 가능한 것인가?\n    - 개인 키로 암호화 한다는 것은, 행하고 있는 처리의 내용을 설명한 것이지, 여기에서는 기밀성을 실현하기 위해 암호화 하는 것이 아니다\n    - 인증자 (authenticator) : 키를 가지고 있는 사람만이 만들 수 있는 정보\n\n2. 기밀성을 유지할 수 없는 것은 아닐까?\n    - 디지털 서명은 기밀성을 지키기 위한 것은 아님\n    - 기밀성이 필요하다면 암호화를 별도로 행해서 보내야 한다.\n    \n3. 복사된 서명이 만들어지는 것은 아닐까?\n    - 통상의 파일 복사처럼 서명도 복사본을 만들수 있다.\n    - 서명 복사를 만들 수 있다고 해서 서명이 무의미 해 지는 것은 아니다.\n        - 복사한 데이터가 표현하고 있는 것은 특정의 서명자가 특정의 메세지에 서명했다고 하는 것뿐\n        - 복사해도 서명자는 바뀌지 않고 메세지의 내용도 바뀌지 않는다.\n    - 복사된 서명\n        - 특정 서명자와 특정 메세지가 결부되어 있다는 사실이 중요\n        - 아무리 복사를 해도 그 메세지에 누가 서명했는가는 사실에는 변화가 없다.\n\n4.  서명 변경이 가능한 것은 아닐까?\n    - 서명 후 메세지와 서명의 내용을 수정할 수는 있다.\n    - 수정하면 서명 검증에 실패하기 때문에, 검증하는 사람은 수정이 행해졌다는 것을 검출 할 수 있다.\n    - 서명 대상의 메세지와 서명 양쪽을 수정해서 서명의 검증에 성공할 수 있도록 앞뒤를 잘 맞출 수 있지는 않을까?\n        - 불가능\n\n5. 서명만 재이용할 수 있는 것은 아닐까?\n    - 서명부분만 잘라내서 다른 메세지에 첨부하는 것은 가능하나 서명의 검증에는 실패\n\n6. 서명을 삭제하더라도 계약파기를 할 수 없는 것은 아닌가?\n    - 디지털 서명이 붙은 차용서는 삭제해도 파기 할 수 없다.\n    - 디지털 서명이 붙은 차용서를 파기하는 경우에는 영수증에 상당하는 문서를 새로 만들고, 그것에 대해 상대에게 서명을 부탁해야 한다.  \n    \n7. 어떻게 해서 부인 방지가 되는 것인가?\n    - 디지털 서명의 경우 서명을 작성할 수 있는 키(개인 키)는 송신자마ㄴ 가지고 있다. 그러므로 서명을 작성할 수 있는 것은 송신자 뿐\n    - 그 서명을 내가 작성한 것이 아니다 라고 주장 할 수 없다.\n    \n### 활용 예\n1. 보안 공지\n    - 클리어 서명(Clearsign) : 메세지를 암호화하지 않고 서명만 한것\n![](/images/cryptography/message_signature/digital_signature_use_case_1.png)    \n\n2. 소프트 웨어 다운로드\n    - 소프트웨어에 디지털 서명을 작성하고, 서명 검증\n\n3. 공개 키 인증서\n    - 디지털 서명을 검증하려면 바른 공개 키가 필요\n    - 자신이 입수한 공개키가 바른 공개 키인지 어떤지를 검증하기 위해서 공개 키를 메세지로 간주하고 디지털 서명을 한다.\n    - 공개 키 인증서 : 공개키에 디지털 서명을 붙인 것\n    \n4. TLS\n    - TLS에서는 서버가 올바른 것이라는 것을 인증하기 위해서 서버 인증서를 이용하며 서버의 공개키에 디지털 서명을 한 것.\n    \n### RSA에 의한 디지털 서명\n- 서명(s) = ${m^D mod N}$\n- 서명으로 얻어진 메세지(m) = ${s^E mod N}$\n- E와 N은 서명자의 공개키 \n\n|||\n|-|-|\n|공개키|(E,N)|\n|개인키|(D,N)|\n|서명의 작성|서명(s) = ${m^D mod N}$ (메세지를 D제곱해서 N으로 나눈 나머지)|\n|서명의 검증|서명으로 얻어진 메세지(m) = ${s^E mod N}$ (m과 원래 메세지 비교)|\n\n\n#### 디지털 서명에 대한 공격\n1. 중간자 공격\n    - 입수한 공개 키가 정확한 상대의 것인지 아닌지를 확인하는 것이 필요\n    - 공개 키를 취급하는 소프트웨어는 공개 키의 해시 값을 표시하는 수단을 준비 (fingerprint)\n\n2. 일방향 해시 함수 공격\n    - 일방향 해시 함수는 충돌 내성을 가져야 한다.\n\n3. 디지털 서명을 사용한 공개 키 암호 공격\n    - 모르는 메세지에는 서명을 하지 말자.\n    \n #### 기술적인 방법만으로는 해결할 수 없는 문제\n ![](/images/cryptography/message_signature/problem.png)    \n","source":"_posts/cryptography-digital-signature.md","raw":"---\ntitle: cryptography-digital-signature\ndate: 2020-04-13 17:57:47\ntags:\n- digital signature\ncategories:\n- cryptography\n---\n### Digital signature characteristics\n- Unforgeable (위조불가)\n    - 서명자만이 서명문을 생성 가능\n- Authentic (서명자 인증)\n    - 서명문의 서명자를 확인 가능\n- Not Reusable (재사용 불가)\n    - 서명문의 서명은 다른 문서의 서명으로 사용 불가능\n- Unalterable (변경 불가)\n    - 서명된 문서의 내용 변경 불가능\n- Nonrepudiation (부인 불가)\n    - 서명자는 후에 서명한 사실을 부인 불가능\n\n### Digital signature Requirement\n- 서명은 메세지에 의존하는 비트 형태이어야 한다.\n- 위조와 부인 방지 위해, 송신자의 유일한 정보 비트를 이용해야 함\n- 서명문을 만들기가 쉬워야 한다.\n- 서명문을 인식, 확인 하기가 쉬워야 한다.\n- 서명문을 위조하는 것이 계산적으로 실행 불가능\n- 기억장소에 서명문의 복사본을 유지하는 것이 실용적이어야 한다.\n\n#### 메시지에 직접 서명하는 방법\n![](/images/cryptography/message_signature/message_signature.png)\n\n#### 메세지의 해시 값에 서명하는 방법\n![](/images/cryptography/message_signature/hash_signature.png)\n![](/images/cryptography/message_signature/hash_time_flow.png)\n\n\n#### 디지털 서명에 대한 의문\n1. 암호문이 왜 서명으로서 사용 가능한 것인가?\n    - 개인 키로 암호화 한다는 것은, 행하고 있는 처리의 내용을 설명한 것이지, 여기에서는 기밀성을 실현하기 위해 암호화 하는 것이 아니다\n    - 인증자 (authenticator) : 키를 가지고 있는 사람만이 만들 수 있는 정보\n\n2. 기밀성을 유지할 수 없는 것은 아닐까?\n    - 디지털 서명은 기밀성을 지키기 위한 것은 아님\n    - 기밀성이 필요하다면 암호화를 별도로 행해서 보내야 한다.\n    \n3. 복사된 서명이 만들어지는 것은 아닐까?\n    - 통상의 파일 복사처럼 서명도 복사본을 만들수 있다.\n    - 서명 복사를 만들 수 있다고 해서 서명이 무의미 해 지는 것은 아니다.\n        - 복사한 데이터가 표현하고 있는 것은 특정의 서명자가 특정의 메세지에 서명했다고 하는 것뿐\n        - 복사해도 서명자는 바뀌지 않고 메세지의 내용도 바뀌지 않는다.\n    - 복사된 서명\n        - 특정 서명자와 특정 메세지가 결부되어 있다는 사실이 중요\n        - 아무리 복사를 해도 그 메세지에 누가 서명했는가는 사실에는 변화가 없다.\n\n4.  서명 변경이 가능한 것은 아닐까?\n    - 서명 후 메세지와 서명의 내용을 수정할 수는 있다.\n    - 수정하면 서명 검증에 실패하기 때문에, 검증하는 사람은 수정이 행해졌다는 것을 검출 할 수 있다.\n    - 서명 대상의 메세지와 서명 양쪽을 수정해서 서명의 검증에 성공할 수 있도록 앞뒤를 잘 맞출 수 있지는 않을까?\n        - 불가능\n\n5. 서명만 재이용할 수 있는 것은 아닐까?\n    - 서명부분만 잘라내서 다른 메세지에 첨부하는 것은 가능하나 서명의 검증에는 실패\n\n6. 서명을 삭제하더라도 계약파기를 할 수 없는 것은 아닌가?\n    - 디지털 서명이 붙은 차용서는 삭제해도 파기 할 수 없다.\n    - 디지털 서명이 붙은 차용서를 파기하는 경우에는 영수증에 상당하는 문서를 새로 만들고, 그것에 대해 상대에게 서명을 부탁해야 한다.  \n    \n7. 어떻게 해서 부인 방지가 되는 것인가?\n    - 디지털 서명의 경우 서명을 작성할 수 있는 키(개인 키)는 송신자마ㄴ 가지고 있다. 그러므로 서명을 작성할 수 있는 것은 송신자 뿐\n    - 그 서명을 내가 작성한 것이 아니다 라고 주장 할 수 없다.\n    \n### 활용 예\n1. 보안 공지\n    - 클리어 서명(Clearsign) : 메세지를 암호화하지 않고 서명만 한것\n![](/images/cryptography/message_signature/digital_signature_use_case_1.png)    \n\n2. 소프트 웨어 다운로드\n    - 소프트웨어에 디지털 서명을 작성하고, 서명 검증\n\n3. 공개 키 인증서\n    - 디지털 서명을 검증하려면 바른 공개 키가 필요\n    - 자신이 입수한 공개키가 바른 공개 키인지 어떤지를 검증하기 위해서 공개 키를 메세지로 간주하고 디지털 서명을 한다.\n    - 공개 키 인증서 : 공개키에 디지털 서명을 붙인 것\n    \n4. TLS\n    - TLS에서는 서버가 올바른 것이라는 것을 인증하기 위해서 서버 인증서를 이용하며 서버의 공개키에 디지털 서명을 한 것.\n    \n### RSA에 의한 디지털 서명\n- 서명(s) = ${m^D mod N}$\n- 서명으로 얻어진 메세지(m) = ${s^E mod N}$\n- E와 N은 서명자의 공개키 \n\n|||\n|-|-|\n|공개키|(E,N)|\n|개인키|(D,N)|\n|서명의 작성|서명(s) = ${m^D mod N}$ (메세지를 D제곱해서 N으로 나눈 나머지)|\n|서명의 검증|서명으로 얻어진 메세지(m) = ${s^E mod N}$ (m과 원래 메세지 비교)|\n\n\n#### 디지털 서명에 대한 공격\n1. 중간자 공격\n    - 입수한 공개 키가 정확한 상대의 것인지 아닌지를 확인하는 것이 필요\n    - 공개 키를 취급하는 소프트웨어는 공개 키의 해시 값을 표시하는 수단을 준비 (fingerprint)\n\n2. 일방향 해시 함수 공격\n    - 일방향 해시 함수는 충돌 내성을 가져야 한다.\n\n3. 디지털 서명을 사용한 공개 키 암호 공격\n    - 모르는 메세지에는 서명을 하지 말자.\n    \n #### 기술적인 방법만으로는 해결할 수 없는 문제\n ![](/images/cryptography/message_signature/problem.png)    \n","slug":"cryptography-digital-signature","published":1,"updated":"2020-07-11T04:51:03.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo513z000rqlvo0wendo1z","content":"<h3 id=\"digital-signature-characteristics\"><a class=\"markdownIt-Anchor\" href=\"#digital-signature-characteristics\"></a> Digital signature characteristics</h3>\n<ul>\n<li>Unforgeable (위조불가)\n<ul>\n<li>서명자만이 서명문을 생성 가능</li>\n</ul>\n</li>\n<li>Authentic (서명자 인증)\n<ul>\n<li>서명문의 서명자를 확인 가능</li>\n</ul>\n</li>\n<li>Not Reusable (재사용 불가)\n<ul>\n<li>서명문의 서명은 다른 문서의 서명으로 사용 불가능</li>\n</ul>\n</li>\n<li>Unalterable (변경 불가)\n<ul>\n<li>서명된 문서의 내용 변경 불가능</li>\n</ul>\n</li>\n<li>Nonrepudiation (부인 불가)\n<ul>\n<li>서명자는 후에 서명한 사실을 부인 불가능</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"digital-signature-requirement\"><a class=\"markdownIt-Anchor\" href=\"#digital-signature-requirement\"></a> Digital signature Requirement</h3>\n<ul>\n<li>서명은 메세지에 의존하는 비트 형태이어야 한다.</li>\n<li>위조와 부인 방지 위해, 송신자의 유일한 정보 비트를 이용해야 함</li>\n<li>서명문을 만들기가 쉬워야 한다.</li>\n<li>서명문을 인식, 확인 하기가 쉬워야 한다.</li>\n<li>서명문을 위조하는 것이 계산적으로 실행 불가능</li>\n<li>기억장소에 서명문의 복사본을 유지하는 것이 실용적이어야 한다.</li>\n</ul>\n<h4 id=\"메시지에-직접-서명하는-방법\"><a class=\"markdownIt-Anchor\" href=\"#메시지에-직접-서명하는-방법\"></a> 메시지에 직접 서명하는 방법</h4>\n<p><img src=\"/images/cryptography/message_signature/message_signature.png\" alt=\"\" /></p>\n<h4 id=\"메세지의-해시-값에-서명하는-방법\"><a class=\"markdownIt-Anchor\" href=\"#메세지의-해시-값에-서명하는-방법\"></a> 메세지의 해시 값에 서명하는 방법</h4>\n<p><img src=\"/images/cryptography/message_signature/hash_signature.png\" alt=\"\" /><br />\n<img src=\"/images/cryptography/message_signature/hash_time_flow.png\" alt=\"\" /></p>\n<h4 id=\"디지털-서명에-대한-의문\"><a class=\"markdownIt-Anchor\" href=\"#디지털-서명에-대한-의문\"></a> 디지털 서명에 대한 의문</h4>\n<ol>\n<li>\n<p>암호문이 왜 서명으로서 사용 가능한 것인가?</p>\n<ul>\n<li>개인 키로 암호화 한다는 것은, 행하고 있는 처리의 내용을 설명한 것이지, 여기에서는 기밀성을 실현하기 위해 암호화 하는 것이 아니다</li>\n<li>인증자 (authenticator) : 키를 가지고 있는 사람만이 만들 수 있는 정보</li>\n</ul>\n</li>\n<li>\n<p>기밀성을 유지할 수 없는 것은 아닐까?</p>\n<ul>\n<li>디지털 서명은 기밀성을 지키기 위한 것은 아님</li>\n<li>기밀성이 필요하다면 암호화를 별도로 행해서 보내야 한다.</li>\n</ul>\n</li>\n<li>\n<p>복사된 서명이 만들어지는 것은 아닐까?</p>\n<ul>\n<li>통상의 파일 복사처럼 서명도 복사본을 만들수 있다.</li>\n<li>서명 복사를 만들 수 있다고 해서 서명이 무의미 해 지는 것은 아니다.\n<ul>\n<li>복사한 데이터가 표현하고 있는 것은 특정의 서명자가 특정의 메세지에 서명했다고 하는 것뿐</li>\n<li>복사해도 서명자는 바뀌지 않고 메세지의 내용도 바뀌지 않는다.</li>\n</ul>\n</li>\n<li>복사된 서명\n<ul>\n<li>특정 서명자와 특정 메세지가 결부되어 있다는 사실이 중요</li>\n<li>아무리 복사를 해도 그 메세지에 누가 서명했는가는 사실에는 변화가 없다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>서명 변경이 가능한 것은 아닐까?</p>\n<ul>\n<li>서명 후 메세지와 서명의 내용을 수정할 수는 있다.</li>\n<li>수정하면 서명 검증에 실패하기 때문에, 검증하는 사람은 수정이 행해졌다는 것을 검출 할 수 있다.</li>\n<li>서명 대상의 메세지와 서명 양쪽을 수정해서 서명의 검증에 성공할 수 있도록 앞뒤를 잘 맞출 수 있지는 않을까?\n<ul>\n<li>불가능</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>서명만 재이용할 수 있는 것은 아닐까?</p>\n<ul>\n<li>서명부분만 잘라내서 다른 메세지에 첨부하는 것은 가능하나 서명의 검증에는 실패</li>\n</ul>\n</li>\n<li>\n<p>서명을 삭제하더라도 계약파기를 할 수 없는 것은 아닌가?</p>\n<ul>\n<li>디지털 서명이 붙은 차용서는 삭제해도 파기 할 수 없다.</li>\n<li>디지털 서명이 붙은 차용서를 파기하는 경우에는 영수증에 상당하는 문서를 새로 만들고, 그것에 대해 상대에게 서명을 부탁해야 한다.</li>\n</ul>\n</li>\n<li>\n<p>어떻게 해서 부인 방지가 되는 것인가?</p>\n<ul>\n<li>디지털 서명의 경우 서명을 작성할 수 있는 키(개인 키)는 송신자마ㄴ 가지고 있다. 그러므로 서명을 작성할 수 있는 것은 송신자 뿐</li>\n<li>그 서명을 내가 작성한 것이 아니다 라고 주장 할 수 없다.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"활용-예\"><a class=\"markdownIt-Anchor\" href=\"#활용-예\"></a> 활용 예</h3>\n<ol>\n<li>\n<p>보안 공지</p>\n<ul>\n<li>클리어 서명(Clearsign) : 메세지를 암호화하지 않고 서명만 한것<br />\n<img src=\"/images/cryptography/message_signature/digital_signature_use_case_1.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>소프트 웨어 다운로드</p>\n<ul>\n<li>소프트웨어에 디지털 서명을 작성하고, 서명 검증</li>\n</ul>\n</li>\n<li>\n<p>공개 키 인증서</p>\n<ul>\n<li>디지털 서명을 검증하려면 바른 공개 키가 필요</li>\n<li>자신이 입수한 공개키가 바른 공개 키인지 어떤지를 검증하기 위해서 공개 키를 메세지로 간주하고 디지털 서명을 한다.</li>\n<li>공개 키 인증서 : 공개키에 디지털 서명을 붙인 것</li>\n</ul>\n</li>\n<li>\n<p>TLS</p>\n<ul>\n<li>TLS에서는 서버가 올바른 것이라는 것을 인증하기 위해서 서버 인증서를 이용하며 서버의 공개키에 디지털 서명을 한 것.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"rsa에-의한-디지털-서명\"><a class=\"markdownIt-Anchor\" href=\"#rsa에-의한-디지털-서명\"></a> RSA에 의한 디지털 서명</h3>\n<ul>\n<li>서명(s) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>m</mi><mi>D</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">{m^D mod N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></li>\n<li>서명으로 얻어진 메세지(m) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>s</mi><mi>E</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">{s^E mod N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></li>\n<li>E와 N은 서명자의 공개키</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>공개키</td>\n<td>(E,N)</td>\n</tr>\n<tr>\n<td>개인키</td>\n<td>(D,N)</td>\n</tr>\n<tr>\n<td>서명의 작성</td>\n<td>서명(s) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>m</mi><mi>D</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">{m^D mod N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span> (메세지를 D제곱해서 N으로 나눈 나머지)</td>\n</tr>\n<tr>\n<td>서명의 검증</td>\n<td>서명으로 얻어진 메세지(m) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>s</mi><mi>E</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">{s^E mod N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span> (m과 원래 메세지 비교)</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"디지털-서명에-대한-공격\"><a class=\"markdownIt-Anchor\" href=\"#디지털-서명에-대한-공격\"></a> 디지털 서명에 대한 공격</h4>\n<ol>\n<li>\n<p>중간자 공격</p>\n<ul>\n<li>입수한 공개 키가 정확한 상대의 것인지 아닌지를 확인하는 것이 필요</li>\n<li>공개 키를 취급하는 소프트웨어는 공개 키의 해시 값을 표시하는 수단을 준비 (fingerprint)</li>\n</ul>\n</li>\n<li>\n<p>일방향 해시 함수 공격</p>\n<ul>\n<li>일방향 해시 함수는 충돌 내성을 가져야 한다.</li>\n</ul>\n</li>\n<li>\n<p>디지털 서명을 사용한 공개 키 암호 공격</p>\n<ul>\n<li>모르는 메세지에는 서명을 하지 말자.</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"기술적인-방법만으로는-해결할-수-없는-문제\"><a class=\"markdownIt-Anchor\" href=\"#기술적인-방법만으로는-해결할-수-없는-문제\"></a> 기술적인 방법만으로는 해결할 수 없는 문제</h4>\n<p><img src=\"/images/cryptography/message_signature/problem.png\" alt=\"\" /></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"digital-signature-characteristics\"><a class=\"markdownIt-Anchor\" href=\"#digital-signature-characteristics\"></a> Digital signature characteristics</h3>\n<ul>\n<li>Unforgeable (위조불가)\n<ul>\n<li>서명자만이 서명문을 생성 가능</li>\n</ul>\n</li>\n<li>Authentic (서명자 인증)\n<ul>\n<li>서명문의 서명자를 확인 가능</li>\n</ul>\n</li>\n<li>Not Reusable (재사용 불가)\n<ul>\n<li>서명문의 서명은 다른 문서의 서명으로 사용 불가능</li>\n</ul>\n</li>\n<li>Unalterable (변경 불가)\n<ul>\n<li>서명된 문서의 내용 변경 불가능</li>\n</ul>\n</li>\n<li>Nonrepudiation (부인 불가)\n<ul>\n<li>서명자는 후에 서명한 사실을 부인 불가능</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"digital-signature-requirement\"><a class=\"markdownIt-Anchor\" href=\"#digital-signature-requirement\"></a> Digital signature Requirement</h3>\n<ul>\n<li>서명은 메세지에 의존하는 비트 형태이어야 한다.</li>\n<li>위조와 부인 방지 위해, 송신자의 유일한 정보 비트를 이용해야 함</li>\n<li>서명문을 만들기가 쉬워야 한다.</li>\n<li>서명문을 인식, 확인 하기가 쉬워야 한다.</li>\n<li>서명문을 위조하는 것이 계산적으로 실행 불가능</li>\n<li>기억장소에 서명문의 복사본을 유지하는 것이 실용적이어야 한다.</li>\n</ul>\n<h4 id=\"메시지에-직접-서명하는-방법\"><a class=\"markdownIt-Anchor\" href=\"#메시지에-직접-서명하는-방법\"></a> 메시지에 직접 서명하는 방법</h4>\n<p><img src=\"/images/cryptography/message_signature/message_signature.png\" alt=\"\" /></p>\n<h4 id=\"메세지의-해시-값에-서명하는-방법\"><a class=\"markdownIt-Anchor\" href=\"#메세지의-해시-값에-서명하는-방법\"></a> 메세지의 해시 값에 서명하는 방법</h4>\n<p><img src=\"/images/cryptography/message_signature/hash_signature.png\" alt=\"\" /><br />\n<img src=\"/images/cryptography/message_signature/hash_time_flow.png\" alt=\"\" /></p>\n<h4 id=\"디지털-서명에-대한-의문\"><a class=\"markdownIt-Anchor\" href=\"#디지털-서명에-대한-의문\"></a> 디지털 서명에 대한 의문</h4>\n<ol>\n<li>\n<p>암호문이 왜 서명으로서 사용 가능한 것인가?</p>\n<ul>\n<li>개인 키로 암호화 한다는 것은, 행하고 있는 처리의 내용을 설명한 것이지, 여기에서는 기밀성을 실현하기 위해 암호화 하는 것이 아니다</li>\n<li>인증자 (authenticator) : 키를 가지고 있는 사람만이 만들 수 있는 정보</li>\n</ul>\n</li>\n<li>\n<p>기밀성을 유지할 수 없는 것은 아닐까?</p>\n<ul>\n<li>디지털 서명은 기밀성을 지키기 위한 것은 아님</li>\n<li>기밀성이 필요하다면 암호화를 별도로 행해서 보내야 한다.</li>\n</ul>\n</li>\n<li>\n<p>복사된 서명이 만들어지는 것은 아닐까?</p>\n<ul>\n<li>통상의 파일 복사처럼 서명도 복사본을 만들수 있다.</li>\n<li>서명 복사를 만들 수 있다고 해서 서명이 무의미 해 지는 것은 아니다.\n<ul>\n<li>복사한 데이터가 표현하고 있는 것은 특정의 서명자가 특정의 메세지에 서명했다고 하는 것뿐</li>\n<li>복사해도 서명자는 바뀌지 않고 메세지의 내용도 바뀌지 않는다.</li>\n</ul>\n</li>\n<li>복사된 서명\n<ul>\n<li>특정 서명자와 특정 메세지가 결부되어 있다는 사실이 중요</li>\n<li>아무리 복사를 해도 그 메세지에 누가 서명했는가는 사실에는 변화가 없다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>서명 변경이 가능한 것은 아닐까?</p>\n<ul>\n<li>서명 후 메세지와 서명의 내용을 수정할 수는 있다.</li>\n<li>수정하면 서명 검증에 실패하기 때문에, 검증하는 사람은 수정이 행해졌다는 것을 검출 할 수 있다.</li>\n<li>서명 대상의 메세지와 서명 양쪽을 수정해서 서명의 검증에 성공할 수 있도록 앞뒤를 잘 맞출 수 있지는 않을까?\n<ul>\n<li>불가능</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>서명만 재이용할 수 있는 것은 아닐까?</p>\n<ul>\n<li>서명부분만 잘라내서 다른 메세지에 첨부하는 것은 가능하나 서명의 검증에는 실패</li>\n</ul>\n</li>\n<li>\n<p>서명을 삭제하더라도 계약파기를 할 수 없는 것은 아닌가?</p>\n<ul>\n<li>디지털 서명이 붙은 차용서는 삭제해도 파기 할 수 없다.</li>\n<li>디지털 서명이 붙은 차용서를 파기하는 경우에는 영수증에 상당하는 문서를 새로 만들고, 그것에 대해 상대에게 서명을 부탁해야 한다.</li>\n</ul>\n</li>\n<li>\n<p>어떻게 해서 부인 방지가 되는 것인가?</p>\n<ul>\n<li>디지털 서명의 경우 서명을 작성할 수 있는 키(개인 키)는 송신자마ㄴ 가지고 있다. 그러므로 서명을 작성할 수 있는 것은 송신자 뿐</li>\n<li>그 서명을 내가 작성한 것이 아니다 라고 주장 할 수 없다.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"활용-예\"><a class=\"markdownIt-Anchor\" href=\"#활용-예\"></a> 활용 예</h3>\n<ol>\n<li>\n<p>보안 공지</p>\n<ul>\n<li>클리어 서명(Clearsign) : 메세지를 암호화하지 않고 서명만 한것<br />\n<img src=\"/images/cryptography/message_signature/digital_signature_use_case_1.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>소프트 웨어 다운로드</p>\n<ul>\n<li>소프트웨어에 디지털 서명을 작성하고, 서명 검증</li>\n</ul>\n</li>\n<li>\n<p>공개 키 인증서</p>\n<ul>\n<li>디지털 서명을 검증하려면 바른 공개 키가 필요</li>\n<li>자신이 입수한 공개키가 바른 공개 키인지 어떤지를 검증하기 위해서 공개 키를 메세지로 간주하고 디지털 서명을 한다.</li>\n<li>공개 키 인증서 : 공개키에 디지털 서명을 붙인 것</li>\n</ul>\n</li>\n<li>\n<p>TLS</p>\n<ul>\n<li>TLS에서는 서버가 올바른 것이라는 것을 인증하기 위해서 서버 인증서를 이용하며 서버의 공개키에 디지털 서명을 한 것.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"rsa에-의한-디지털-서명\"><a class=\"markdownIt-Anchor\" href=\"#rsa에-의한-디지털-서명\"></a> RSA에 의한 디지털 서명</h3>\n<ul>\n<li>서명(s) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>m</mi><mi>D</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">{m^D mod N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></li>\n<li>서명으로 얻어진 메세지(m) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>s</mi><mi>E</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">{s^E mod N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></li>\n<li>E와 N은 서명자의 공개키</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>공개키</td>\n<td>(E,N)</td>\n</tr>\n<tr>\n<td>개인키</td>\n<td>(D,N)</td>\n</tr>\n<tr>\n<td>서명의 작성</td>\n<td>서명(s) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>m</mi><mi>D</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">{m^D mod N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span> (메세지를 D제곱해서 N으로 나눈 나머지)</td>\n</tr>\n<tr>\n<td>서명의 검증</td>\n<td>서명으로 얻어진 메세지(m) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>s</mi><mi>E</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">{s^E mod N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span> (m과 원래 메세지 비교)</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"디지털-서명에-대한-공격\"><a class=\"markdownIt-Anchor\" href=\"#디지털-서명에-대한-공격\"></a> 디지털 서명에 대한 공격</h4>\n<ol>\n<li>\n<p>중간자 공격</p>\n<ul>\n<li>입수한 공개 키가 정확한 상대의 것인지 아닌지를 확인하는 것이 필요</li>\n<li>공개 키를 취급하는 소프트웨어는 공개 키의 해시 값을 표시하는 수단을 준비 (fingerprint)</li>\n</ul>\n</li>\n<li>\n<p>일방향 해시 함수 공격</p>\n<ul>\n<li>일방향 해시 함수는 충돌 내성을 가져야 한다.</li>\n</ul>\n</li>\n<li>\n<p>디지털 서명을 사용한 공개 키 암호 공격</p>\n<ul>\n<li>모르는 메세지에는 서명을 하지 말자.</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"기술적인-방법만으로는-해결할-수-없는-문제\"><a class=\"markdownIt-Anchor\" href=\"#기술적인-방법만으로는-해결할-수-없는-문제\"></a> 기술적인 방법만으로는 해결할 수 없는 문제</h4>\n<p><img src=\"/images/cryptography/message_signature/problem.png\" alt=\"\" /></p>\n"},{"title":"cryptography-key","date":"2020-04-16T03:06:54.000Z","_content":"## 키\n\n### 키는 대단히 큰 수\n- 암호 기술을 사용하려면 반드시 키라 불리는 대단히 큰 수가 필요\n- 중요한 것은 수 그 자체의 크기보다도 키 공간(Key Space)의 크기\n- 키 공간의 크기는 키의 비트 길이로 결정\n- 암호별 키 길이\n    - AES: 128,192,256 비트\n    - RSA: 1024, 2048\n### 키는 평문과 동일한 가치를 갖는다\n- 키는 평문과 같은 가치\n    - 도청자 이브에게 키는 평문과 같은 것\n\n### 암호 알고리즘과 키\n- 암호의 기본 상식\n    - 검증된 암호 알고리즘을 사용\n    - 정보의 기밀성은 암호 알고리즘을 비밀로 하는 것이 아님\n    - 키를 비밀로 하는 것에 의해 기밀성이 지켜져야 함\n\n### 다양한 키\n- 대칭 암호\n    - 키는 송신자와 수신자만 공유\n    - 양측이 공유 키를 비밀로 유지\n![](/images/cryptography/key/symmetric_cypher.png)\n\n- 공개 키 암호\n    - 암호화와 복호화에서 다른 키 사용\n    - 개인 키를 비밀로 유지\n![](/images/cryptography/key/asymmetric_cypher.png)\n\n- 메세지 인증 코드\n    - 송신자와 수신자가 공통의 키를 사용해서 인증을 수행\n![](/images/cryptography/key/mac_key.png)\n    \n- 디지털 서명\n    - *서명 작성*과 *서명 검증*에 서로 다른 키를 사용\n![](/images/cryptography/key/digital_signature_key.png)\n\n### 기밀성을 위한 키와 인증을 위한 키\n- 보안 속성에 따른 분류\n    - 기밀성을 유지하기 위한 키\n        - 대칭 암호나 공개 키 암호에서 사용하는 키\n        - 복호화 키를 모르면 복호화 불가\n    - 인증을 수행하기 위한 키\n        - 메세지 인증 코드나 디지털 서명에서 사용하는 키\n        - 키를 모르면 데이터 변경이나 위장 불가\n- 키 사용 횟수에 따른 분류\n    - 세션 키(Session Key)\n       - 통신 때마다 한 번만 사용 되는 키\n    - 마스터 키(Master Key)\n       - 반복적으로 사용 되는 키\n       \n### 컨텐츠를 암호화 하는 키와 키를 암호화 하는 키\n- CEK (contents encrypting key) : 정보(콘텐츠)가 암호화의 대상\n- KEK (key encrypting key) : 키가 암호화의 대상\n![](/images/cryptography/key/cek_kek.png)\n\n### 키 관리\n1. 키 생성\n- 난수를 이용한 키 생성\n    - 난수 사용 : 키 성질로 다른 사람이 추측하기 어려워야 한다를 가져야 하기 때문\n    - 난수 생성 : 하드웨어를 사용하는 것이 좋지만, 통상적으로 암호용으로 설계된 의사 난수 생성기 소프트웨어를 사용\n    - 자신이 적당한 바이트 열을 만들면 안 됨\n        - 스스로는 랜덤한 값이라고 생각하고 생성해도, 거기에는 인위적인 편중이 있기 때문에 랜덤한 값이 되지 못함\n    - 암호용으로 이용하는 의사난수 생성기\n        - 반드시 암호용으로 설계되어 있는 것을 선택\n        - 암호용으로 설계되어 있지 않은 의사난수 생성기는 예측불가능 성질을 갖지 않기 때문\n\n- 패스워드를 이용한 키 생성\n    - 패스워드 (password) \n    - 패스 프레이즈 (passphrase) : 복수의 단어로 이루어지는 긴 패스워드\n    - 패스워드를 키로 직접 이용하지 않고, 패스워드를 일방향 해시 함수에 입력해서 얻어진 해시 값을 키로 이용\n    \n- PBE와 salt\n    - Password Based Encryption\n    - 패스워드에 salt라 불리는 난수를 부가해서 일방향 해시 함수에 입력하고 그 출력을 키로 사용\n    - 사전 공격(Dictinary attack)을 막기 위한 조치\n\n2. 키 배송\n- 키 배송 문제\n    - 키를 사전에 공유\n    - 키 배포 센터\n    - 공개키 암호\n    - *Diffie-Hellman 키 교환*\n    \n3. 키 갱신 (key updating)\n- 현재 키의 해시값을 다음 키로 사용\n- 키 노출시 과거 통신의 복호화를 막을 수 있다.\n- 이를 백워드 시큐리티라 한다.\n\n4. 키 보존\n- 키를 반복해서 사용할 경우 키 보존 문제를 고려\n    - 키 기억 : 보통 실용적 키의 크기나 비트화된 표현 등으로 기억할 수 없다.\n    - 키 암호화 : KEK(Key Encryption Key)\n![](/images/cryptography/key/key_hierarchy.png)\n    https://www.crocus.co.kr/1233\n    https://rsec.kr/?p=242\n    ","source":"_posts/cryptography-key.md","raw":"---\ntitle: cryptography-key\ndate: 2020-04-16 12:06:54\ntags:\n- key\ncategories:\n- cryptography\n---\n## 키\n\n### 키는 대단히 큰 수\n- 암호 기술을 사용하려면 반드시 키라 불리는 대단히 큰 수가 필요\n- 중요한 것은 수 그 자체의 크기보다도 키 공간(Key Space)의 크기\n- 키 공간의 크기는 키의 비트 길이로 결정\n- 암호별 키 길이\n    - AES: 128,192,256 비트\n    - RSA: 1024, 2048\n### 키는 평문과 동일한 가치를 갖는다\n- 키는 평문과 같은 가치\n    - 도청자 이브에게 키는 평문과 같은 것\n\n### 암호 알고리즘과 키\n- 암호의 기본 상식\n    - 검증된 암호 알고리즘을 사용\n    - 정보의 기밀성은 암호 알고리즘을 비밀로 하는 것이 아님\n    - 키를 비밀로 하는 것에 의해 기밀성이 지켜져야 함\n\n### 다양한 키\n- 대칭 암호\n    - 키는 송신자와 수신자만 공유\n    - 양측이 공유 키를 비밀로 유지\n![](/images/cryptography/key/symmetric_cypher.png)\n\n- 공개 키 암호\n    - 암호화와 복호화에서 다른 키 사용\n    - 개인 키를 비밀로 유지\n![](/images/cryptography/key/asymmetric_cypher.png)\n\n- 메세지 인증 코드\n    - 송신자와 수신자가 공통의 키를 사용해서 인증을 수행\n![](/images/cryptography/key/mac_key.png)\n    \n- 디지털 서명\n    - *서명 작성*과 *서명 검증*에 서로 다른 키를 사용\n![](/images/cryptography/key/digital_signature_key.png)\n\n### 기밀성을 위한 키와 인증을 위한 키\n- 보안 속성에 따른 분류\n    - 기밀성을 유지하기 위한 키\n        - 대칭 암호나 공개 키 암호에서 사용하는 키\n        - 복호화 키를 모르면 복호화 불가\n    - 인증을 수행하기 위한 키\n        - 메세지 인증 코드나 디지털 서명에서 사용하는 키\n        - 키를 모르면 데이터 변경이나 위장 불가\n- 키 사용 횟수에 따른 분류\n    - 세션 키(Session Key)\n       - 통신 때마다 한 번만 사용 되는 키\n    - 마스터 키(Master Key)\n       - 반복적으로 사용 되는 키\n       \n### 컨텐츠를 암호화 하는 키와 키를 암호화 하는 키\n- CEK (contents encrypting key) : 정보(콘텐츠)가 암호화의 대상\n- KEK (key encrypting key) : 키가 암호화의 대상\n![](/images/cryptography/key/cek_kek.png)\n\n### 키 관리\n1. 키 생성\n- 난수를 이용한 키 생성\n    - 난수 사용 : 키 성질로 다른 사람이 추측하기 어려워야 한다를 가져야 하기 때문\n    - 난수 생성 : 하드웨어를 사용하는 것이 좋지만, 통상적으로 암호용으로 설계된 의사 난수 생성기 소프트웨어를 사용\n    - 자신이 적당한 바이트 열을 만들면 안 됨\n        - 스스로는 랜덤한 값이라고 생각하고 생성해도, 거기에는 인위적인 편중이 있기 때문에 랜덤한 값이 되지 못함\n    - 암호용으로 이용하는 의사난수 생성기\n        - 반드시 암호용으로 설계되어 있는 것을 선택\n        - 암호용으로 설계되어 있지 않은 의사난수 생성기는 예측불가능 성질을 갖지 않기 때문\n\n- 패스워드를 이용한 키 생성\n    - 패스워드 (password) \n    - 패스 프레이즈 (passphrase) : 복수의 단어로 이루어지는 긴 패스워드\n    - 패스워드를 키로 직접 이용하지 않고, 패스워드를 일방향 해시 함수에 입력해서 얻어진 해시 값을 키로 이용\n    \n- PBE와 salt\n    - Password Based Encryption\n    - 패스워드에 salt라 불리는 난수를 부가해서 일방향 해시 함수에 입력하고 그 출력을 키로 사용\n    - 사전 공격(Dictinary attack)을 막기 위한 조치\n\n2. 키 배송\n- 키 배송 문제\n    - 키를 사전에 공유\n    - 키 배포 센터\n    - 공개키 암호\n    - *Diffie-Hellman 키 교환*\n    \n3. 키 갱신 (key updating)\n- 현재 키의 해시값을 다음 키로 사용\n- 키 노출시 과거 통신의 복호화를 막을 수 있다.\n- 이를 백워드 시큐리티라 한다.\n\n4. 키 보존\n- 키를 반복해서 사용할 경우 키 보존 문제를 고려\n    - 키 기억 : 보통 실용적 키의 크기나 비트화된 표현 등으로 기억할 수 없다.\n    - 키 암호화 : KEK(Key Encryption Key)\n![](/images/cryptography/key/key_hierarchy.png)\n    https://www.crocus.co.kr/1233\n    https://rsec.kr/?p=242\n    ","slug":"cryptography-key","published":1,"updated":"2020-07-11T04:51:03.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5142000uqlvo8jkl48a9","content":"<h2 id=\"키\"><a class=\"markdownIt-Anchor\" href=\"#키\"></a> 키</h2>\n<h3 id=\"키는-대단히-큰-수\"><a class=\"markdownIt-Anchor\" href=\"#키는-대단히-큰-수\"></a> 키는 대단히 큰 수</h3>\n<ul>\n<li>암호 기술을 사용하려면 반드시 키라 불리는 대단히 큰 수가 필요</li>\n<li>중요한 것은 수 그 자체의 크기보다도 키 공간(Key Space)의 크기</li>\n<li>키 공간의 크기는 키의 비트 길이로 결정</li>\n<li>암호별 키 길이\n<ul>\n<li>AES: 128,192,256 비트</li>\n<li>RSA: 1024, 2048</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"키는-평문과-동일한-가치를-갖는다\"><a class=\"markdownIt-Anchor\" href=\"#키는-평문과-동일한-가치를-갖는다\"></a> 키는 평문과 동일한 가치를 갖는다</h3>\n<ul>\n<li>키는 평문과 같은 가치\n<ul>\n<li>도청자 이브에게 키는 평문과 같은 것</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"암호-알고리즘과-키\"><a class=\"markdownIt-Anchor\" href=\"#암호-알고리즘과-키\"></a> 암호 알고리즘과 키</h3>\n<ul>\n<li>암호의 기본 상식\n<ul>\n<li>검증된 암호 알고리즘을 사용</li>\n<li>정보의 기밀성은 암호 알고리즘을 비밀로 하는 것이 아님</li>\n<li>키를 비밀로 하는 것에 의해 기밀성이 지켜져야 함</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"다양한-키\"><a class=\"markdownIt-Anchor\" href=\"#다양한-키\"></a> 다양한 키</h3>\n<ul>\n<li>\n<p>대칭 암호</p>\n<ul>\n<li>키는 송신자와 수신자만 공유</li>\n<li>양측이 공유 키를 비밀로 유지<br />\n<img src=\"/images/cryptography/key/symmetric_cypher.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>공개 키 암호</p>\n<ul>\n<li>암호화와 복호화에서 다른 키 사용</li>\n<li>개인 키를 비밀로 유지<br />\n<img src=\"/images/cryptography/key/asymmetric_cypher.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>메세지 인증 코드</p>\n<ul>\n<li>송신자와 수신자가 공통의 키를 사용해서 인증을 수행<br />\n<img src=\"/images/cryptography/key/mac_key.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>디지털 서명</p>\n<ul>\n<li><em>서명 작성</em>과 <em>서명 검증</em>에 서로 다른 키를 사용<br />\n<img src=\"/images/cryptography/key/digital_signature_key.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"기밀성을-위한-키와-인증을-위한-키\"><a class=\"markdownIt-Anchor\" href=\"#기밀성을-위한-키와-인증을-위한-키\"></a> 기밀성을 위한 키와 인증을 위한 키</h3>\n<ul>\n<li>보안 속성에 따른 분류\n<ul>\n<li>기밀성을 유지하기 위한 키\n<ul>\n<li>대칭 암호나 공개 키 암호에서 사용하는 키</li>\n<li>복호화 키를 모르면 복호화 불가</li>\n</ul>\n</li>\n<li>인증을 수행하기 위한 키\n<ul>\n<li>메세지 인증 코드나 디지털 서명에서 사용하는 키</li>\n<li>키를 모르면 데이터 변경이나 위장 불가</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>키 사용 횟수에 따른 분류\n<ul>\n<li>세션 키(Session Key)\n<ul>\n<li>통신 때마다 한 번만 사용 되는 키</li>\n</ul>\n</li>\n<li>마스터 키(Master Key)\n<ul>\n<li>반복적으로 사용 되는 키</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"컨텐츠를-암호화-하는-키와-키를-암호화-하는-키\"><a class=\"markdownIt-Anchor\" href=\"#컨텐츠를-암호화-하는-키와-키를-암호화-하는-키\"></a> 컨텐츠를 암호화 하는 키와 키를 암호화 하는 키</h3>\n<ul>\n<li>CEK (contents encrypting key) : 정보(콘텐츠)가 암호화의 대상</li>\n<li>KEK (key encrypting key) : 키가 암호화의 대상<br />\n<img src=\"/images/cryptography/key/cek_kek.png\" alt=\"\" /></li>\n</ul>\n<h3 id=\"키-관리\"><a class=\"markdownIt-Anchor\" href=\"#키-관리\"></a> 키 관리</h3>\n<ol>\n<li>키 생성</li>\n</ol>\n<ul>\n<li>\n<p>난수를 이용한 키 생성</p>\n<ul>\n<li>난수 사용 : 키 성질로 다른 사람이 추측하기 어려워야 한다를 가져야 하기 때문</li>\n<li>난수 생성 : 하드웨어를 사용하는 것이 좋지만, 통상적으로 암호용으로 설계된 의사 난수 생성기 소프트웨어를 사용</li>\n<li>자신이 적당한 바이트 열을 만들면 안 됨\n<ul>\n<li>스스로는 랜덤한 값이라고 생각하고 생성해도, 거기에는 인위적인 편중이 있기 때문에 랜덤한 값이 되지 못함</li>\n</ul>\n</li>\n<li>암호용으로 이용하는 의사난수 생성기\n<ul>\n<li>반드시 암호용으로 설계되어 있는 것을 선택</li>\n<li>암호용으로 설계되어 있지 않은 의사난수 생성기는 예측불가능 성질을 갖지 않기 때문</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>패스워드를 이용한 키 생성</p>\n<ul>\n<li>패스워드 (password)</li>\n<li>패스 프레이즈 (passphrase) : 복수의 단어로 이루어지는 긴 패스워드</li>\n<li>패스워드를 키로 직접 이용하지 않고, 패스워드를 일방향 해시 함수에 입력해서 얻어진 해시 값을 키로 이용</li>\n</ul>\n</li>\n<li>\n<p>PBE와 salt</p>\n<ul>\n<li>Password Based Encryption</li>\n<li>패스워드에 salt라 불리는 난수를 부가해서 일방향 해시 함수에 입력하고 그 출력을 키로 사용</li>\n<li>사전 공격(Dictinary attack)을 막기 위한 조치</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>키 배송</li>\n</ol>\n<ul>\n<li>키 배송 문제\n<ul>\n<li>키를 사전에 공유</li>\n<li>키 배포 센터</li>\n<li>공개키 암호</li>\n<li><em>Diffie-Hellman 키 교환</em></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>키 갱신 (key updating)</li>\n</ol>\n<ul>\n<li>현재 키의 해시값을 다음 키로 사용</li>\n<li>키 노출시 과거 통신의 복호화를 막을 수 있다.</li>\n<li>이를 백워드 시큐리티라 한다.</li>\n</ul>\n<ol start=\"4\">\n<li>키 보존</li>\n</ol>\n<ul>\n<li>키를 반복해서 사용할 경우 키 보존 문제를 고려\n<ul>\n<li>키 기억 : 보통 실용적 키의 크기나 비트화된 표현 등으로 기억할 수 없다.</li>\n<li>키 암호화 : KEK(Key Encryption Key)<br />\n<img src=\"/images/cryptography/key/key_hierarchy.png\" alt=\"\" /><br />\n<a href=\"https://www.crocus.co.kr/1233\" target=\"_blank\" rel=\"noopener\">https://www.crocus.co.kr/1233</a><br />\n<a href=\"https://rsec.kr/?p=242\" target=\"_blank\" rel=\"noopener\">https://rsec.kr/?p=242</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"키\"><a class=\"markdownIt-Anchor\" href=\"#키\"></a> 키</h2>\n<h3 id=\"키는-대단히-큰-수\"><a class=\"markdownIt-Anchor\" href=\"#키는-대단히-큰-수\"></a> 키는 대단히 큰 수</h3>\n<ul>\n<li>암호 기술을 사용하려면 반드시 키라 불리는 대단히 큰 수가 필요</li>\n<li>중요한 것은 수 그 자체의 크기보다도 키 공간(Key Space)의 크기</li>\n<li>키 공간의 크기는 키의 비트 길이로 결정</li>\n<li>암호별 키 길이\n<ul>\n<li>AES: 128,192,256 비트</li>\n<li>RSA: 1024, 2048</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"키는-평문과-동일한-가치를-갖는다\"><a class=\"markdownIt-Anchor\" href=\"#키는-평문과-동일한-가치를-갖는다\"></a> 키는 평문과 동일한 가치를 갖는다</h3>\n<ul>\n<li>키는 평문과 같은 가치\n<ul>\n<li>도청자 이브에게 키는 평문과 같은 것</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"암호-알고리즘과-키\"><a class=\"markdownIt-Anchor\" href=\"#암호-알고리즘과-키\"></a> 암호 알고리즘과 키</h3>\n<ul>\n<li>암호의 기본 상식\n<ul>\n<li>검증된 암호 알고리즘을 사용</li>\n<li>정보의 기밀성은 암호 알고리즘을 비밀로 하는 것이 아님</li>\n<li>키를 비밀로 하는 것에 의해 기밀성이 지켜져야 함</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"다양한-키\"><a class=\"markdownIt-Anchor\" href=\"#다양한-키\"></a> 다양한 키</h3>\n<ul>\n<li>\n<p>대칭 암호</p>\n<ul>\n<li>키는 송신자와 수신자만 공유</li>\n<li>양측이 공유 키를 비밀로 유지<br />\n<img src=\"/images/cryptography/key/symmetric_cypher.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>공개 키 암호</p>\n<ul>\n<li>암호화와 복호화에서 다른 키 사용</li>\n<li>개인 키를 비밀로 유지<br />\n<img src=\"/images/cryptography/key/asymmetric_cypher.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>메세지 인증 코드</p>\n<ul>\n<li>송신자와 수신자가 공통의 키를 사용해서 인증을 수행<br />\n<img src=\"/images/cryptography/key/mac_key.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>디지털 서명</p>\n<ul>\n<li><em>서명 작성</em>과 <em>서명 검증</em>에 서로 다른 키를 사용<br />\n<img src=\"/images/cryptography/key/digital_signature_key.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"기밀성을-위한-키와-인증을-위한-키\"><a class=\"markdownIt-Anchor\" href=\"#기밀성을-위한-키와-인증을-위한-키\"></a> 기밀성을 위한 키와 인증을 위한 키</h3>\n<ul>\n<li>보안 속성에 따른 분류\n<ul>\n<li>기밀성을 유지하기 위한 키\n<ul>\n<li>대칭 암호나 공개 키 암호에서 사용하는 키</li>\n<li>복호화 키를 모르면 복호화 불가</li>\n</ul>\n</li>\n<li>인증을 수행하기 위한 키\n<ul>\n<li>메세지 인증 코드나 디지털 서명에서 사용하는 키</li>\n<li>키를 모르면 데이터 변경이나 위장 불가</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>키 사용 횟수에 따른 분류\n<ul>\n<li>세션 키(Session Key)\n<ul>\n<li>통신 때마다 한 번만 사용 되는 키</li>\n</ul>\n</li>\n<li>마스터 키(Master Key)\n<ul>\n<li>반복적으로 사용 되는 키</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"컨텐츠를-암호화-하는-키와-키를-암호화-하는-키\"><a class=\"markdownIt-Anchor\" href=\"#컨텐츠를-암호화-하는-키와-키를-암호화-하는-키\"></a> 컨텐츠를 암호화 하는 키와 키를 암호화 하는 키</h3>\n<ul>\n<li>CEK (contents encrypting key) : 정보(콘텐츠)가 암호화의 대상</li>\n<li>KEK (key encrypting key) : 키가 암호화의 대상<br />\n<img src=\"/images/cryptography/key/cek_kek.png\" alt=\"\" /></li>\n</ul>\n<h3 id=\"키-관리\"><a class=\"markdownIt-Anchor\" href=\"#키-관리\"></a> 키 관리</h3>\n<ol>\n<li>키 생성</li>\n</ol>\n<ul>\n<li>\n<p>난수를 이용한 키 생성</p>\n<ul>\n<li>난수 사용 : 키 성질로 다른 사람이 추측하기 어려워야 한다를 가져야 하기 때문</li>\n<li>난수 생성 : 하드웨어를 사용하는 것이 좋지만, 통상적으로 암호용으로 설계된 의사 난수 생성기 소프트웨어를 사용</li>\n<li>자신이 적당한 바이트 열을 만들면 안 됨\n<ul>\n<li>스스로는 랜덤한 값이라고 생각하고 생성해도, 거기에는 인위적인 편중이 있기 때문에 랜덤한 값이 되지 못함</li>\n</ul>\n</li>\n<li>암호용으로 이용하는 의사난수 생성기\n<ul>\n<li>반드시 암호용으로 설계되어 있는 것을 선택</li>\n<li>암호용으로 설계되어 있지 않은 의사난수 생성기는 예측불가능 성질을 갖지 않기 때문</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>패스워드를 이용한 키 생성</p>\n<ul>\n<li>패스워드 (password)</li>\n<li>패스 프레이즈 (passphrase) : 복수의 단어로 이루어지는 긴 패스워드</li>\n<li>패스워드를 키로 직접 이용하지 않고, 패스워드를 일방향 해시 함수에 입력해서 얻어진 해시 값을 키로 이용</li>\n</ul>\n</li>\n<li>\n<p>PBE와 salt</p>\n<ul>\n<li>Password Based Encryption</li>\n<li>패스워드에 salt라 불리는 난수를 부가해서 일방향 해시 함수에 입력하고 그 출력을 키로 사용</li>\n<li>사전 공격(Dictinary attack)을 막기 위한 조치</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>키 배송</li>\n</ol>\n<ul>\n<li>키 배송 문제\n<ul>\n<li>키를 사전에 공유</li>\n<li>키 배포 센터</li>\n<li>공개키 암호</li>\n<li><em>Diffie-Hellman 키 교환</em></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>키 갱신 (key updating)</li>\n</ol>\n<ul>\n<li>현재 키의 해시값을 다음 키로 사용</li>\n<li>키 노출시 과거 통신의 복호화를 막을 수 있다.</li>\n<li>이를 백워드 시큐리티라 한다.</li>\n</ul>\n<ol start=\"4\">\n<li>키 보존</li>\n</ol>\n<ul>\n<li>키를 반복해서 사용할 경우 키 보존 문제를 고려\n<ul>\n<li>키 기억 : 보통 실용적 키의 크기나 비트화된 표현 등으로 기억할 수 없다.</li>\n<li>키 암호화 : KEK(Key Encryption Key)<br />\n<img src=\"/images/cryptography/key/key_hierarchy.png\" alt=\"\" /><br />\n<a href=\"https://www.crocus.co.kr/1233\" target=\"_blank\" rel=\"noopener\">https://www.crocus.co.kr/1233</a><br />\n<a href=\"https://rsec.kr/?p=242\" target=\"_blank\" rel=\"noopener\">https://rsec.kr/?p=242</a></li>\n</ul>\n</li>\n</ul>\n"},{"title":"cryptography-message-authentication-code","date":"2020-04-08T02:00:48.000Z","_content":"### 메세지 인증\n- Message Authentication : 메시지가 올바른 송신자로 부터 온것이다\n\n![](/images/cryptography/mac/alice-bob.png)\n\n- Message Authentication Code (MAC) \n    - 무결성\n    - 메세지 인증\n    - 입력 : 메세지, 공유하는 키\n    - 출력 : 고정 비트 길이의 코드\n\n![](/images/cryptography/mac/messagecodevshash.png)\n\n### 메시지 인증 순서\n1. 앨리스와 수신자 A은행 키(K) 공유\n2. 앨리스 : 송금 의뢰 메세지(M) 작성 MAC 값 (MAC(M)) 계산\n3. 앨리스 : 수신자 A 은행으로 메세지와 MAC 값을 전송\n4. 수신자 A은행 : 수신한 송금 의뢰 메세지를 기초로 해서 MAC 값을 계산\n5. 수신자 A은행 : 앨리스로부터 수신한 MAC 값과 4에서 계산한 MAC 값을 비교\n6. 수신자 A은행 : MAC 값이 같다면 인증 성공, 다르다면 인증 실패(앨리스로부터 온 것이 아니라고 판단)\n\n![](/images/cryptography/mac/message_authentication_code_flow.png)\n\n### 메시지 인증 코드의 키 배송 문제\n- 키 배송 문제 해결\n    - 공개키 암호\n    - Diffie-Hellman 키 교환\n    - 키 배포 센터\n    - 키를 안전한 방법으로 별도로 보내기\n    \n### 메세지 인증 코드 구현\n#### Hash\n- HMAC\n\n### Block\n- triple DES, AES\n    - 블록 암호 키를 메세지 인증 코드의 공유키로 사용\n    - CBC 모드로 메세지 전체를 암호화\n    - 메세지 인증 코드에서는 복호화를 할 필요가 없으므로 최종 블록 이외는 폐기\n    - 최종 블록을 MAC 값으로 이용\n    \n#### GCM\n- Galois/Counter Mode\n- Padding 불필요\n- 인증 기능 제공\n- 병렬 처리가 가능해서 암/복호화 속도가 매우 빠름, SSL/TLS 에서 많이 사용\n\n![](/images/cryptography/block/AES/GCM.png)\n\n- c : Cypher message\n- m : message\n- $K_E$ : Message를 암호화 할 Key\n- $K_I$ : Tag를 암호화 할 Key\n- $E(K_E,m)$ : message 암호화\n- $S(K_I,c)$ : c로 MAC값 계산\n- $E(K_E, m||tag)$\n\n- Encrypt-then-MAC\n    - 평문을 대칭 암호로 암호화 한 후 암호문의 MAC 값을 계싼\n    - 메세지 인증 코드 입력에 암호문을 부여\n    - 선택 암호문 공격을 막을 수 있다.\n    - ex) IPsec\n    \n![](/images/cryptography/mac/encrypt-then-mac.png)\n    \n- Encrypt-and-MAC\n    - 평문을 대칭 암호로 암호화 한 후 그와는 별도로 평문의 MAC 값을 얻는 방법\n    - ex) SSH\n\n![](/images/cryptography/mac/encrypt-and-mac.png)\n\n- MAC-then-Encrypt\n    - 미리 평문의 MAC 값을 얻고, 평문과 MAC 값 양쪽을 정리하여 대칭 암호로 암호화 하는 방법\n    - ex) SSL\n  \n![](/images/cryptography/mac/MAC-then-Encrypt.png)\n\n#### GMAC \n- Galois/Counter Mode MAC\n    - GCM을 메세지 인증 코드 전용으로 사용\n\n#### HMAC\n- Hash Message Authentication Code\n- 일방향 해시 함수를 이용하여 메시지 인증 코드를 구성\n- HMAC의 일방향 해시 함수는 모듈형으로 골라서 사용\n- HMAC-SHA1 : SHA-1\n\n- RFC 2104 정의\n    $HMAC(K,m) = H\\big( ({K'}\\oplus opad ) \\big) ||  H\\big( ({K'}\\oplus ipad || m)\\big )$\n    $K' = \\begin{cases} \n    H(K) &\\text{K is larger than block size} \\\\\n    K &\\text{otherwise}\n    \\end{cases}$\n\n- HMAC의 순서\n    1. 키 패딩 : 일방향 해시 함수 블록 길이\n    2. 패딩한 키와 ipad (Inner Padding)의 XOR\n    3. 메시지 결합\n    4. 해시 값의 계산\n    5. 패딩한 키와 opad(Outer Padding)의 XOR\n    6. 해시 값과의 결합\n    7. 해시 값의 계산\n    \n![](/images/cryptography/mac/HMAC.png)\n\n- Replay 공격\n\n![](/images/cryptography/mac/replay_attack.png)\n\n- Replay 공격 방어\n    - 순서 번호 (Sequence number) : 송신 메세지에 매회 1씩 증가하는 번호 (순서 번호, Sequence number)\n        - 마지막 통신시 순서 번호를 저장\n    - TimeStamp\n        - 송신 메세지에 현재 시각 넣기\n        - 송수신자 사이의 동기화 필요\n    - 비표(Nonce)\n        - 송신자에게 일회용의 랜덤한 값을 전송\n        - 메시지와 비표를 합해 MAC 값을 계산\n        - 비표 값은 통신 마다 교체\n        \n- 키 추측 공격\n    - Brute Force\n    - Birthday Attack\n\n- MAC 값만 획득한 공격자가 키를 추측하지 못하도록 해야 한다\n    - 해시 함수의 일방향성\n    - 해시 함수의 충돌내성\n    - 키 생성에 의사난수 생성기 사용\n\n\n![](/images/cryptography/mac/mac_algorithm_types.png)\n","source":"_posts/cryptography-message-authentication-code.md","raw":"---\ntitle: cryptography-message-authentication-code\ndate: 2020-04-08 11:00:48\ntags:\n- PKI\ncategories:\n- cryptography\n---\n### 메세지 인증\n- Message Authentication : 메시지가 올바른 송신자로 부터 온것이다\n\n![](/images/cryptography/mac/alice-bob.png)\n\n- Message Authentication Code (MAC) \n    - 무결성\n    - 메세지 인증\n    - 입력 : 메세지, 공유하는 키\n    - 출력 : 고정 비트 길이의 코드\n\n![](/images/cryptography/mac/messagecodevshash.png)\n\n### 메시지 인증 순서\n1. 앨리스와 수신자 A은행 키(K) 공유\n2. 앨리스 : 송금 의뢰 메세지(M) 작성 MAC 값 (MAC(M)) 계산\n3. 앨리스 : 수신자 A 은행으로 메세지와 MAC 값을 전송\n4. 수신자 A은행 : 수신한 송금 의뢰 메세지를 기초로 해서 MAC 값을 계산\n5. 수신자 A은행 : 앨리스로부터 수신한 MAC 값과 4에서 계산한 MAC 값을 비교\n6. 수신자 A은행 : MAC 값이 같다면 인증 성공, 다르다면 인증 실패(앨리스로부터 온 것이 아니라고 판단)\n\n![](/images/cryptography/mac/message_authentication_code_flow.png)\n\n### 메시지 인증 코드의 키 배송 문제\n- 키 배송 문제 해결\n    - 공개키 암호\n    - Diffie-Hellman 키 교환\n    - 키 배포 센터\n    - 키를 안전한 방법으로 별도로 보내기\n    \n### 메세지 인증 코드 구현\n#### Hash\n- HMAC\n\n### Block\n- triple DES, AES\n    - 블록 암호 키를 메세지 인증 코드의 공유키로 사용\n    - CBC 모드로 메세지 전체를 암호화\n    - 메세지 인증 코드에서는 복호화를 할 필요가 없으므로 최종 블록 이외는 폐기\n    - 최종 블록을 MAC 값으로 이용\n    \n#### GCM\n- Galois/Counter Mode\n- Padding 불필요\n- 인증 기능 제공\n- 병렬 처리가 가능해서 암/복호화 속도가 매우 빠름, SSL/TLS 에서 많이 사용\n\n![](/images/cryptography/block/AES/GCM.png)\n\n- c : Cypher message\n- m : message\n- $K_E$ : Message를 암호화 할 Key\n- $K_I$ : Tag를 암호화 할 Key\n- $E(K_E,m)$ : message 암호화\n- $S(K_I,c)$ : c로 MAC값 계산\n- $E(K_E, m||tag)$\n\n- Encrypt-then-MAC\n    - 평문을 대칭 암호로 암호화 한 후 암호문의 MAC 값을 계싼\n    - 메세지 인증 코드 입력에 암호문을 부여\n    - 선택 암호문 공격을 막을 수 있다.\n    - ex) IPsec\n    \n![](/images/cryptography/mac/encrypt-then-mac.png)\n    \n- Encrypt-and-MAC\n    - 평문을 대칭 암호로 암호화 한 후 그와는 별도로 평문의 MAC 값을 얻는 방법\n    - ex) SSH\n\n![](/images/cryptography/mac/encrypt-and-mac.png)\n\n- MAC-then-Encrypt\n    - 미리 평문의 MAC 값을 얻고, 평문과 MAC 값 양쪽을 정리하여 대칭 암호로 암호화 하는 방법\n    - ex) SSL\n  \n![](/images/cryptography/mac/MAC-then-Encrypt.png)\n\n#### GMAC \n- Galois/Counter Mode MAC\n    - GCM을 메세지 인증 코드 전용으로 사용\n\n#### HMAC\n- Hash Message Authentication Code\n- 일방향 해시 함수를 이용하여 메시지 인증 코드를 구성\n- HMAC의 일방향 해시 함수는 모듈형으로 골라서 사용\n- HMAC-SHA1 : SHA-1\n\n- RFC 2104 정의\n    $HMAC(K,m) = H\\big( ({K'}\\oplus opad ) \\big) ||  H\\big( ({K'}\\oplus ipad || m)\\big )$\n    $K' = \\begin{cases} \n    H(K) &\\text{K is larger than block size} \\\\\n    K &\\text{otherwise}\n    \\end{cases}$\n\n- HMAC의 순서\n    1. 키 패딩 : 일방향 해시 함수 블록 길이\n    2. 패딩한 키와 ipad (Inner Padding)의 XOR\n    3. 메시지 결합\n    4. 해시 값의 계산\n    5. 패딩한 키와 opad(Outer Padding)의 XOR\n    6. 해시 값과의 결합\n    7. 해시 값의 계산\n    \n![](/images/cryptography/mac/HMAC.png)\n\n- Replay 공격\n\n![](/images/cryptography/mac/replay_attack.png)\n\n- Replay 공격 방어\n    - 순서 번호 (Sequence number) : 송신 메세지에 매회 1씩 증가하는 번호 (순서 번호, Sequence number)\n        - 마지막 통신시 순서 번호를 저장\n    - TimeStamp\n        - 송신 메세지에 현재 시각 넣기\n        - 송수신자 사이의 동기화 필요\n    - 비표(Nonce)\n        - 송신자에게 일회용의 랜덤한 값을 전송\n        - 메시지와 비표를 합해 MAC 값을 계산\n        - 비표 값은 통신 마다 교체\n        \n- 키 추측 공격\n    - Brute Force\n    - Birthday Attack\n\n- MAC 값만 획득한 공격자가 키를 추측하지 못하도록 해야 한다\n    - 해시 함수의 일방향성\n    - 해시 함수의 충돌내성\n    - 키 생성에 의사난수 생성기 사용\n\n\n![](/images/cryptography/mac/mac_algorithm_types.png)\n","slug":"cryptography-message-authentication-code","published":1,"updated":"2020-07-11T04:51:03.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5144000xqlvocbhlh6hw","content":"<h3 id=\"메세지-인증\"><a class=\"markdownIt-Anchor\" href=\"#메세지-인증\"></a> 메세지 인증</h3>\n<ul>\n<li>Message Authentication : 메시지가 올바른 송신자로 부터 온것이다</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/alice-bob.png\" alt=\"\" /></p>\n<ul>\n<li>Message Authentication Code (MAC)\n<ul>\n<li>무결성</li>\n<li>메세지 인증</li>\n<li>입력 : 메세지, 공유하는 키</li>\n<li>출력 : 고정 비트 길이의 코드</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/messagecodevshash.png\" alt=\"\" /></p>\n<h3 id=\"메시지-인증-순서\"><a class=\"markdownIt-Anchor\" href=\"#메시지-인증-순서\"></a> 메시지 인증 순서</h3>\n<ol>\n<li>앨리스와 수신자 A은행 키(K) 공유</li>\n<li>앨리스 : 송금 의뢰 메세지(M) 작성 MAC 값 (MAC(M)) 계산</li>\n<li>앨리스 : 수신자 A 은행으로 메세지와 MAC 값을 전송</li>\n<li>수신자 A은행 : 수신한 송금 의뢰 메세지를 기초로 해서 MAC 값을 계산</li>\n<li>수신자 A은행 : 앨리스로부터 수신한 MAC 값과 4에서 계산한 MAC 값을 비교</li>\n<li>수신자 A은행 : MAC 값이 같다면 인증 성공, 다르다면 인증 실패(앨리스로부터 온 것이 아니라고 판단)</li>\n</ol>\n<p><img src=\"/images/cryptography/mac/message_authentication_code_flow.png\" alt=\"\" /></p>\n<h3 id=\"메시지-인증-코드의-키-배송-문제\"><a class=\"markdownIt-Anchor\" href=\"#메시지-인증-코드의-키-배송-문제\"></a> 메시지 인증 코드의 키 배송 문제</h3>\n<ul>\n<li>키 배송 문제 해결\n<ul>\n<li>공개키 암호</li>\n<li>Diffie-Hellman 키 교환</li>\n<li>키 배포 센터</li>\n<li>키를 안전한 방법으로 별도로 보내기</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"메세지-인증-코드-구현\"><a class=\"markdownIt-Anchor\" href=\"#메세지-인증-코드-구현\"></a> 메세지 인증 코드 구현</h3>\n<h4 id=\"hash\"><a class=\"markdownIt-Anchor\" href=\"#hash\"></a> Hash</h4>\n<ul>\n<li>HMAC</li>\n</ul>\n<h3 id=\"block\"><a class=\"markdownIt-Anchor\" href=\"#block\"></a> Block</h3>\n<ul>\n<li>triple DES, AES\n<ul>\n<li>블록 암호 키를 메세지 인증 코드의 공유키로 사용</li>\n<li>CBC 모드로 메세지 전체를 암호화</li>\n<li>메세지 인증 코드에서는 복호화를 할 필요가 없으므로 최종 블록 이외는 폐기</li>\n<li>최종 블록을 MAC 값으로 이용</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"gcm\"><a class=\"markdownIt-Anchor\" href=\"#gcm\"></a> GCM</h4>\n<ul>\n<li>Galois/Counter Mode</li>\n<li>Padding 불필요</li>\n<li>인증 기능 제공</li>\n<li>병렬 처리가 가능해서 암/복호화 속도가 매우 빠름, SSL/TLS 에서 많이 사용</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/GCM.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>c : Cypher message</p>\n</li>\n<li>\n<p>m : message</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>K</mi><mi>E</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> : Message를 암호화 할 Key</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>K</mi><mi>I</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> : Tag를 암호화 할 Key</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mi>E</mi></msub><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(K_E,m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span> : message 암호화</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mi>I</mi></msub><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S(K_I,c)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">)</span></span></span></span> : c로 MAC값 계산</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mi>E</mi></msub><mo separator=\"true\">,</mo><mi>m</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mi>a</mi><mi>g</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(K_E, m||tag)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>Encrypt-then-MAC</p>\n<ul>\n<li>평문을 대칭 암호로 암호화 한 후 암호문의 MAC 값을 계싼</li>\n<li>메세지 인증 코드 입력에 암호문을 부여</li>\n<li>선택 암호문 공격을 막을 수 있다.</li>\n<li>ex) IPsec</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/encrypt-then-mac.png\" alt=\"\" /></p>\n<ul>\n<li>Encrypt-and-MAC\n<ul>\n<li>평문을 대칭 암호로 암호화 한 후 그와는 별도로 평문의 MAC 값을 얻는 방법</li>\n<li>ex) SSH</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/encrypt-and-mac.png\" alt=\"\" /></p>\n<ul>\n<li>MAC-then-Encrypt\n<ul>\n<li>미리 평문의 MAC 값을 얻고, 평문과 MAC 값 양쪽을 정리하여 대칭 암호로 암호화 하는 방법</li>\n<li>ex) SSL</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/MAC-then-Encrypt.png\" alt=\"\" /></p>\n<h4 id=\"gmac\"><a class=\"markdownIt-Anchor\" href=\"#gmac\"></a> GMAC</h4>\n<ul>\n<li>Galois/Counter Mode MAC\n<ul>\n<li>GCM을 메세지 인증 코드 전용으로 사용</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"hmac\"><a class=\"markdownIt-Anchor\" href=\"#hmac\"></a> HMAC</h4>\n<ul>\n<li>\n<p>Hash Message Authentication Code</p>\n</li>\n<li>\n<p>일방향 해시 함수를 이용하여 메시지 인증 코드를 구성</p>\n</li>\n<li>\n<p>HMAC의 일방향 해시 함수는 모듈형으로 골라서 사용</p>\n</li>\n<li>\n<p>HMAC-SHA1 : SHA-1</p>\n</li>\n<li>\n<p>RFC 2104 정의<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mi>M</mi><mi>A</mi><mi>C</mi><mo stretchy=\"false\">(</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo fence=\"false\">(</mo><mo stretchy=\"false\">(</mo><msup><mi>K</mi><mo mathvariant=\"normal\">′</mo></msup><mo>⊕</mo><mi>o</mi><mi>p</mi><mi>a</mi><mi>d</mi><mo stretchy=\"false\">)</mo><mo fence=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>H</mi><mo fence=\"false\">(</mo><mo stretchy=\"false\">(</mo><msup><mi>K</mi><mo mathvariant=\"normal\">′</mo></msup><mo>⊕</mo><mi>i</mi><mi>p</mi><mi>a</mi><mi>d</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>m</mi><mo stretchy=\"false\">)</mo><mo fence=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">HMAC(K,m) = H\\big( ({K&#x27;}\\oplus opad ) \\big) ||  H\\big( ({K&#x27;}\\oplus ipad || m)\\big )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathdefault\">A</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord\"><span class=\"delimsizing size1\">(</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">d</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"delimsizing size1\">)</span></span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord\"><span class=\"delimsizing size1\">(</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">d</span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"delimsizing size1\">)</span></span></span></span></span><br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>K</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>K</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>K is larger than block size</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>K</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">K&#x27; = \\begin{cases} \n  H(K) &amp;\\text{K is larger than block size} \\\\\n  K &amp;\\text{otherwise}\n  \\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0000299999999998em;vertical-align:-1.25003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">K is larger than block size</span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">otherwise</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n</li>\n<li>\n<p>HMAC의 순서</p>\n<ol>\n<li>키 패딩 : 일방향 해시 함수 블록 길이</li>\n<li>패딩한 키와 ipad (Inner Padding)의 XOR</li>\n<li>메시지 결합</li>\n<li>해시 값의 계산</li>\n<li>패딩한 키와 opad(Outer Padding)의 XOR</li>\n<li>해시 값과의 결합</li>\n<li>해시 값의 계산</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/HMAC.png\" alt=\"\" /></p>\n<ul>\n<li>Replay 공격</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/replay_attack.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>Replay 공격 방어</p>\n<ul>\n<li>순서 번호 (Sequence number) : 송신 메세지에 매회 1씩 증가하는 번호 (순서 번호, Sequence number)\n<ul>\n<li>마지막 통신시 순서 번호를 저장</li>\n</ul>\n</li>\n<li>TimeStamp\n<ul>\n<li>송신 메세지에 현재 시각 넣기</li>\n<li>송수신자 사이의 동기화 필요</li>\n</ul>\n</li>\n<li>비표(Nonce)\n<ul>\n<li>송신자에게 일회용의 랜덤한 값을 전송</li>\n<li>메시지와 비표를 합해 MAC 값을 계산</li>\n<li>비표 값은 통신 마다 교체</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>키 추측 공격</p>\n<ul>\n<li>Brute Force</li>\n<li>Birthday Attack</li>\n</ul>\n</li>\n<li>\n<p>MAC 값만 획득한 공격자가 키를 추측하지 못하도록 해야 한다</p>\n<ul>\n<li>해시 함수의 일방향성</li>\n<li>해시 함수의 충돌내성</li>\n<li>키 생성에 의사난수 생성기 사용</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/mac_algorithm_types.png\" alt=\"\" /></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"메세지-인증\"><a class=\"markdownIt-Anchor\" href=\"#메세지-인증\"></a> 메세지 인증</h3>\n<ul>\n<li>Message Authentication : 메시지가 올바른 송신자로 부터 온것이다</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/alice-bob.png\" alt=\"\" /></p>\n<ul>\n<li>Message Authentication Code (MAC)\n<ul>\n<li>무결성</li>\n<li>메세지 인증</li>\n<li>입력 : 메세지, 공유하는 키</li>\n<li>출력 : 고정 비트 길이의 코드</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/messagecodevshash.png\" alt=\"\" /></p>\n<h3 id=\"메시지-인증-순서\"><a class=\"markdownIt-Anchor\" href=\"#메시지-인증-순서\"></a> 메시지 인증 순서</h3>\n<ol>\n<li>앨리스와 수신자 A은행 키(K) 공유</li>\n<li>앨리스 : 송금 의뢰 메세지(M) 작성 MAC 값 (MAC(M)) 계산</li>\n<li>앨리스 : 수신자 A 은행으로 메세지와 MAC 값을 전송</li>\n<li>수신자 A은행 : 수신한 송금 의뢰 메세지를 기초로 해서 MAC 값을 계산</li>\n<li>수신자 A은행 : 앨리스로부터 수신한 MAC 값과 4에서 계산한 MAC 값을 비교</li>\n<li>수신자 A은행 : MAC 값이 같다면 인증 성공, 다르다면 인증 실패(앨리스로부터 온 것이 아니라고 판단)</li>\n</ol>\n<p><img src=\"/images/cryptography/mac/message_authentication_code_flow.png\" alt=\"\" /></p>\n<h3 id=\"메시지-인증-코드의-키-배송-문제\"><a class=\"markdownIt-Anchor\" href=\"#메시지-인증-코드의-키-배송-문제\"></a> 메시지 인증 코드의 키 배송 문제</h3>\n<ul>\n<li>키 배송 문제 해결\n<ul>\n<li>공개키 암호</li>\n<li>Diffie-Hellman 키 교환</li>\n<li>키 배포 센터</li>\n<li>키를 안전한 방법으로 별도로 보내기</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"메세지-인증-코드-구현\"><a class=\"markdownIt-Anchor\" href=\"#메세지-인증-코드-구현\"></a> 메세지 인증 코드 구현</h3>\n<h4 id=\"hash\"><a class=\"markdownIt-Anchor\" href=\"#hash\"></a> Hash</h4>\n<ul>\n<li>HMAC</li>\n</ul>\n<h3 id=\"block\"><a class=\"markdownIt-Anchor\" href=\"#block\"></a> Block</h3>\n<ul>\n<li>triple DES, AES\n<ul>\n<li>블록 암호 키를 메세지 인증 코드의 공유키로 사용</li>\n<li>CBC 모드로 메세지 전체를 암호화</li>\n<li>메세지 인증 코드에서는 복호화를 할 필요가 없으므로 최종 블록 이외는 폐기</li>\n<li>최종 블록을 MAC 값으로 이용</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"gcm\"><a class=\"markdownIt-Anchor\" href=\"#gcm\"></a> GCM</h4>\n<ul>\n<li>Galois/Counter Mode</li>\n<li>Padding 불필요</li>\n<li>인증 기능 제공</li>\n<li>병렬 처리가 가능해서 암/복호화 속도가 매우 빠름, SSL/TLS 에서 많이 사용</li>\n</ul>\n<p><img src=\"/images/cryptography/block/AES/GCM.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>c : Cypher message</p>\n</li>\n<li>\n<p>m : message</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>K</mi><mi>E</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> : Message를 암호화 할 Key</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>K</mi><mi>I</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> : Tag를 암호화 할 Key</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mi>E</mi></msub><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(K_E,m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span> : message 암호화</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mi>I</mi></msub><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S(K_I,c)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">)</span></span></span></span> : c로 MAC값 계산</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mi>E</mi></msub><mo separator=\"true\">,</mo><mi>m</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mi>a</mi><mi>g</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(K_E, m||tag)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>Encrypt-then-MAC</p>\n<ul>\n<li>평문을 대칭 암호로 암호화 한 후 암호문의 MAC 값을 계싼</li>\n<li>메세지 인증 코드 입력에 암호문을 부여</li>\n<li>선택 암호문 공격을 막을 수 있다.</li>\n<li>ex) IPsec</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/encrypt-then-mac.png\" alt=\"\" /></p>\n<ul>\n<li>Encrypt-and-MAC\n<ul>\n<li>평문을 대칭 암호로 암호화 한 후 그와는 별도로 평문의 MAC 값을 얻는 방법</li>\n<li>ex) SSH</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/encrypt-and-mac.png\" alt=\"\" /></p>\n<ul>\n<li>MAC-then-Encrypt\n<ul>\n<li>미리 평문의 MAC 값을 얻고, 평문과 MAC 값 양쪽을 정리하여 대칭 암호로 암호화 하는 방법</li>\n<li>ex) SSL</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/MAC-then-Encrypt.png\" alt=\"\" /></p>\n<h4 id=\"gmac\"><a class=\"markdownIt-Anchor\" href=\"#gmac\"></a> GMAC</h4>\n<ul>\n<li>Galois/Counter Mode MAC\n<ul>\n<li>GCM을 메세지 인증 코드 전용으로 사용</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"hmac\"><a class=\"markdownIt-Anchor\" href=\"#hmac\"></a> HMAC</h4>\n<ul>\n<li>\n<p>Hash Message Authentication Code</p>\n</li>\n<li>\n<p>일방향 해시 함수를 이용하여 메시지 인증 코드를 구성</p>\n</li>\n<li>\n<p>HMAC의 일방향 해시 함수는 모듈형으로 골라서 사용</p>\n</li>\n<li>\n<p>HMAC-SHA1 : SHA-1</p>\n</li>\n<li>\n<p>RFC 2104 정의<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mi>M</mi><mi>A</mi><mi>C</mi><mo stretchy=\"false\">(</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo fence=\"false\">(</mo><mo stretchy=\"false\">(</mo><msup><mi>K</mi><mo mathvariant=\"normal\">′</mo></msup><mo>⊕</mo><mi>o</mi><mi>p</mi><mi>a</mi><mi>d</mi><mo stretchy=\"false\">)</mo><mo fence=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>H</mi><mo fence=\"false\">(</mo><mo stretchy=\"false\">(</mo><msup><mi>K</mi><mo mathvariant=\"normal\">′</mo></msup><mo>⊕</mo><mi>i</mi><mi>p</mi><mi>a</mi><mi>d</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>m</mi><mo stretchy=\"false\">)</mo><mo fence=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">HMAC(K,m) = H\\big( ({K&#x27;}\\oplus opad ) \\big) ||  H\\big( ({K&#x27;}\\oplus ipad || m)\\big )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathdefault\">A</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord\"><span class=\"delimsizing size1\">(</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">d</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"delimsizing size1\">)</span></span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord\"><span class=\"delimsizing size1\">(</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">d</span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"delimsizing size1\">)</span></span></span></span></span><br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>K</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>K</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>K is larger than block size</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>K</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">K&#x27; = \\begin{cases} \n  H(K) &amp;\\text{K is larger than block size} \\\\\n  K &amp;\\text{otherwise}\n  \\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0000299999999998em;vertical-align:-1.25003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">K is larger than block size</span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">otherwise</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n</li>\n<li>\n<p>HMAC의 순서</p>\n<ol>\n<li>키 패딩 : 일방향 해시 함수 블록 길이</li>\n<li>패딩한 키와 ipad (Inner Padding)의 XOR</li>\n<li>메시지 결합</li>\n<li>해시 값의 계산</li>\n<li>패딩한 키와 opad(Outer Padding)의 XOR</li>\n<li>해시 값과의 결합</li>\n<li>해시 값의 계산</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/HMAC.png\" alt=\"\" /></p>\n<ul>\n<li>Replay 공격</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/replay_attack.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>Replay 공격 방어</p>\n<ul>\n<li>순서 번호 (Sequence number) : 송신 메세지에 매회 1씩 증가하는 번호 (순서 번호, Sequence number)\n<ul>\n<li>마지막 통신시 순서 번호를 저장</li>\n</ul>\n</li>\n<li>TimeStamp\n<ul>\n<li>송신 메세지에 현재 시각 넣기</li>\n<li>송수신자 사이의 동기화 필요</li>\n</ul>\n</li>\n<li>비표(Nonce)\n<ul>\n<li>송신자에게 일회용의 랜덤한 값을 전송</li>\n<li>메시지와 비표를 합해 MAC 값을 계산</li>\n<li>비표 값은 통신 마다 교체</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>키 추측 공격</p>\n<ul>\n<li>Brute Force</li>\n<li>Birthday Attack</li>\n</ul>\n</li>\n<li>\n<p>MAC 값만 획득한 공격자가 키를 추측하지 못하도록 해야 한다</p>\n<ul>\n<li>해시 함수의 일방향성</li>\n<li>해시 함수의 충돌내성</li>\n<li>키 생성에 의사난수 생성기 사용</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/cryptography/mac/mac_algorithm_types.png\" alt=\"\" /></p>\n"},{"title":"cryptography-signatures","date":"2020-04-07T00:23:21.000Z","_content":"\n## Signatures\n### Electronic Signature\n- 계약 또는 기타 기록에 첨부된 서명으로 서명하려는 사람이 실행하거나 채택한 전자 신호,심볼 또는 프로세스로 정의 된다.\n- 기본적으로 전자 서명은 손으로 쓴 서명을 디지털화 한 것과 동일하며 문서 내의 내용 또는 특정 문서의 용어를 확인하는 데 사용할 수 있다.\n\n### Digital Signature\n- 문서에 서명 한 사람이 본인이 맞는가?\n- 서명이 유효하고 위조되지 않았는지 어떻게 확인할 수 있는가?\n- 문서가 변경되지 않았는지 어떻게 확인할 수 있을까?\n- Digital Signature의 경우 Certification Authority(CA)으로 알려진 신뢰할 수 있는 제 3자가 신원 확인 측면에서 공증인 역할을 한다.\n- 인증 기관은 신원을 PKI (Public Key Infrastructure) 기반 디지털 인증서에 바인딩해서 문서 및 클라우드 기반 서명 플랫폼에 디지털 서명을 적용 할 수 있다.\n\n#### 보장 범위\n- 문서는 정통이며 검증된 출처에서 제공된다.\n- 서명이 변경되면 서명이 유효하지 않은 것으로 표시되어 디지털 서명 된 이후 문서가 변경되지 않았다.\n- 사용자의 신원이 신뢰할 수 있는 조직에 의해 확인되었다.\n- Certified Signature \n- Approval Signature\n- Signature Line\n\n#### PKI (Public Key Infrastructure)\n- RFC 2459 : Internet X.509 Public Key Infrastructure\n    - Message Digest (Hash Function)\n    - Symmetric Key Algorithm\n    - Asymmetric Key Algorithm\n\n- Cryptographic Hash Function\n    - Message Digest\n    - MD5(128bit), SHA-1(160bit)\n\n- Symmetric Key Algorithm\n    - One key (대칭키)\n    - Encryption, Decryption\n    - 3DES, AES\n\n- Asymmetric Key Algorithm\n    - Two Key (비 대칭키)\n    - RSA (Rivest, Shmir, Adelman)\n\n- 공개키 : 평문을 공개키로 *암호화*한후 개인키로 *복호화*해 Encrypted Text를 만든다.\n- 개인키 : 개인키로 *암호화*한 후 공개키로 *복호화*해 Encrypted Text를 만든다. 개인이 보낸 내용을 증명할 때 많이 사용하며 이러한 경우를\n        개인키 '전자서명', 공개키 '서명검증' 이라고 한다.\n\n#### 서명 작성과 서명 검증\n- 메시지의 서명을 작성하는 행위\n    - 디지털 서명에는 서명용 키와 검증용 키가 나누어져 있다.\n    - 서명용 키는 서명을 하는 사람이 가지고 있지만, 검증용 키는 서명을 검증하는 사람이라면 누구라도 가질 수 있다.\n\n#### 공개키 암호와 디지털 서명\n- 공개 키 암호\n    - 암호화키와 복호화키가 나누어져 있어 암호키로 복호화를 행할 수는 없다.\n    - 복호화 키는 복호화를 행하는 사람만이 가지고 있지만 암호키는 암호화를 행하는 사람이라면 누구나 가질 수 있다.\n    - 디지털 서명은 공개 키 암호를 역으로 사용함으로써 실현한다.\n\n||개인키|공개키|\n|-|:-:|:-:|\n|공개키 암호|수신자가 복호화에 사용|송신자들이 암호화에 사용|\n|디지털 서명|서명자가 서명 작성에 사용| 검증자들이 서명 검증에 사용|\n|키는 누가 갖는가?|개인이 갖는다|필요한 사람은 아무나 가지고 있어도 된다.|\n\n- 메세지를 개인키로 암호화 하는 것이 서명 작성\n![](/images/cryptography/signature/public_key_enc.png)\n\n- 암호문을 공개키로 복호화 하는 것이 서명 검증\n![](/images/cryptography/signature/private_key_enc.png)\n\n- 공개키 암호는 누구라도 암호화\n![](/images/cryptography/signature/public_key_enc1.png)\n\n- 디지털 서명은 누구라도 서명검증\n![](/images/cryptography/signature/private_key_signature_verify.png)\n\n참조 : https://crazia.tistory.com/entry/PKI-PKI-%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EA%B0%84%EB%8B%A8-%EC%84%A4%EB%AA%85","source":"_posts/cryptography-signatures.md","raw":"---\ntitle: cryptography-signatures\ndate: 2020-04-07 09:23:21\ntags:\n- PKI\ncategories:\n- cryptography\n---\n\n## Signatures\n### Electronic Signature\n- 계약 또는 기타 기록에 첨부된 서명으로 서명하려는 사람이 실행하거나 채택한 전자 신호,심볼 또는 프로세스로 정의 된다.\n- 기본적으로 전자 서명은 손으로 쓴 서명을 디지털화 한 것과 동일하며 문서 내의 내용 또는 특정 문서의 용어를 확인하는 데 사용할 수 있다.\n\n### Digital Signature\n- 문서에 서명 한 사람이 본인이 맞는가?\n- 서명이 유효하고 위조되지 않았는지 어떻게 확인할 수 있는가?\n- 문서가 변경되지 않았는지 어떻게 확인할 수 있을까?\n- Digital Signature의 경우 Certification Authority(CA)으로 알려진 신뢰할 수 있는 제 3자가 신원 확인 측면에서 공증인 역할을 한다.\n- 인증 기관은 신원을 PKI (Public Key Infrastructure) 기반 디지털 인증서에 바인딩해서 문서 및 클라우드 기반 서명 플랫폼에 디지털 서명을 적용 할 수 있다.\n\n#### 보장 범위\n- 문서는 정통이며 검증된 출처에서 제공된다.\n- 서명이 변경되면 서명이 유효하지 않은 것으로 표시되어 디지털 서명 된 이후 문서가 변경되지 않았다.\n- 사용자의 신원이 신뢰할 수 있는 조직에 의해 확인되었다.\n- Certified Signature \n- Approval Signature\n- Signature Line\n\n#### PKI (Public Key Infrastructure)\n- RFC 2459 : Internet X.509 Public Key Infrastructure\n    - Message Digest (Hash Function)\n    - Symmetric Key Algorithm\n    - Asymmetric Key Algorithm\n\n- Cryptographic Hash Function\n    - Message Digest\n    - MD5(128bit), SHA-1(160bit)\n\n- Symmetric Key Algorithm\n    - One key (대칭키)\n    - Encryption, Decryption\n    - 3DES, AES\n\n- Asymmetric Key Algorithm\n    - Two Key (비 대칭키)\n    - RSA (Rivest, Shmir, Adelman)\n\n- 공개키 : 평문을 공개키로 *암호화*한후 개인키로 *복호화*해 Encrypted Text를 만든다.\n- 개인키 : 개인키로 *암호화*한 후 공개키로 *복호화*해 Encrypted Text를 만든다. 개인이 보낸 내용을 증명할 때 많이 사용하며 이러한 경우를\n        개인키 '전자서명', 공개키 '서명검증' 이라고 한다.\n\n#### 서명 작성과 서명 검증\n- 메시지의 서명을 작성하는 행위\n    - 디지털 서명에는 서명용 키와 검증용 키가 나누어져 있다.\n    - 서명용 키는 서명을 하는 사람이 가지고 있지만, 검증용 키는 서명을 검증하는 사람이라면 누구라도 가질 수 있다.\n\n#### 공개키 암호와 디지털 서명\n- 공개 키 암호\n    - 암호화키와 복호화키가 나누어져 있어 암호키로 복호화를 행할 수는 없다.\n    - 복호화 키는 복호화를 행하는 사람만이 가지고 있지만 암호키는 암호화를 행하는 사람이라면 누구나 가질 수 있다.\n    - 디지털 서명은 공개 키 암호를 역으로 사용함으로써 실현한다.\n\n||개인키|공개키|\n|-|:-:|:-:|\n|공개키 암호|수신자가 복호화에 사용|송신자들이 암호화에 사용|\n|디지털 서명|서명자가 서명 작성에 사용| 검증자들이 서명 검증에 사용|\n|키는 누가 갖는가?|개인이 갖는다|필요한 사람은 아무나 가지고 있어도 된다.|\n\n- 메세지를 개인키로 암호화 하는 것이 서명 작성\n![](/images/cryptography/signature/public_key_enc.png)\n\n- 암호문을 공개키로 복호화 하는 것이 서명 검증\n![](/images/cryptography/signature/private_key_enc.png)\n\n- 공개키 암호는 누구라도 암호화\n![](/images/cryptography/signature/public_key_enc1.png)\n\n- 디지털 서명은 누구라도 서명검증\n![](/images/cryptography/signature/private_key_signature_verify.png)\n\n참조 : https://crazia.tistory.com/entry/PKI-PKI-%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EA%B0%84%EB%8B%A8-%EC%84%A4%EB%AA%85","slug":"cryptography-signatures","published":1,"updated":"2020-07-11T04:51:03.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo51460010qlvo2g8ccjpg","content":"<h2 id=\"signatures\"><a class=\"markdownIt-Anchor\" href=\"#signatures\"></a> Signatures</h2>\n<h3 id=\"electronic-signature\"><a class=\"markdownIt-Anchor\" href=\"#electronic-signature\"></a> Electronic Signature</h3>\n<ul>\n<li>계약 또는 기타 기록에 첨부된 서명으로 서명하려는 사람이 실행하거나 채택한 전자 신호,심볼 또는 프로세스로 정의 된다.</li>\n<li>기본적으로 전자 서명은 손으로 쓴 서명을 디지털화 한 것과 동일하며 문서 내의 내용 또는 특정 문서의 용어를 확인하는 데 사용할 수 있다.</li>\n</ul>\n<h3 id=\"digital-signature\"><a class=\"markdownIt-Anchor\" href=\"#digital-signature\"></a> Digital Signature</h3>\n<ul>\n<li>문서에 서명 한 사람이 본인이 맞는가?</li>\n<li>서명이 유효하고 위조되지 않았는지 어떻게 확인할 수 있는가?</li>\n<li>문서가 변경되지 않았는지 어떻게 확인할 수 있을까?</li>\n<li>Digital Signature의 경우 Certification Authority(CA)으로 알려진 신뢰할 수 있는 제 3자가 신원 확인 측면에서 공증인 역할을 한다.</li>\n<li>인증 기관은 신원을 PKI (Public Key Infrastructure) 기반 디지털 인증서에 바인딩해서 문서 및 클라우드 기반 서명 플랫폼에 디지털 서명을 적용 할 수 있다.</li>\n</ul>\n<h4 id=\"보장-범위\"><a class=\"markdownIt-Anchor\" href=\"#보장-범위\"></a> 보장 범위</h4>\n<ul>\n<li>문서는 정통이며 검증된 출처에서 제공된다.</li>\n<li>서명이 변경되면 서명이 유효하지 않은 것으로 표시되어 디지털 서명 된 이후 문서가 변경되지 않았다.</li>\n<li>사용자의 신원이 신뢰할 수 있는 조직에 의해 확인되었다.</li>\n<li>Certified Signature</li>\n<li>Approval Signature</li>\n<li>Signature Line</li>\n</ul>\n<h4 id=\"pki-public-key-infrastructure\"><a class=\"markdownIt-Anchor\" href=\"#pki-public-key-infrastructure\"></a> PKI (Public Key Infrastructure)</h4>\n<ul>\n<li>\n<p>RFC 2459 : Internet X.509 Public Key Infrastructure</p>\n<ul>\n<li>Message Digest (Hash Function)</li>\n<li>Symmetric Key Algorithm</li>\n<li>Asymmetric Key Algorithm</li>\n</ul>\n</li>\n<li>\n<p>Cryptographic Hash Function</p>\n<ul>\n<li>Message Digest</li>\n<li>MD5(128bit), SHA-1(160bit)</li>\n</ul>\n</li>\n<li>\n<p>Symmetric Key Algorithm</p>\n<ul>\n<li>One key (대칭키)</li>\n<li>Encryption, Decryption</li>\n<li>3DES, AES</li>\n</ul>\n</li>\n<li>\n<p>Asymmetric Key Algorithm</p>\n<ul>\n<li>Two Key (비 대칭키)</li>\n<li>RSA (Rivest, Shmir, Adelman)</li>\n</ul>\n</li>\n<li>\n<p>공개키 : 평문을 공개키로 <em>암호화</em>한후 개인키로 <em>복호화</em>해 Encrypted Text를 만든다.</p>\n</li>\n<li>\n<p>개인키 : 개인키로 <em>암호화</em>한 후 공개키로 <em>복호화</em>해 Encrypted Text를 만든다. 개인이 보낸 내용을 증명할 때 많이 사용하며 이러한 경우를<br />\n개인키 ‘전자서명’, 공개키 ‘서명검증’ 이라고 한다.</p>\n</li>\n</ul>\n<h4 id=\"서명-작성과-서명-검증\"><a class=\"markdownIt-Anchor\" href=\"#서명-작성과-서명-검증\"></a> 서명 작성과 서명 검증</h4>\n<ul>\n<li>메시지의 서명을 작성하는 행위\n<ul>\n<li>디지털 서명에는 서명용 키와 검증용 키가 나누어져 있다.</li>\n<li>서명용 키는 서명을 하는 사람이 가지고 있지만, 검증용 키는 서명을 검증하는 사람이라면 누구라도 가질 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"공개키-암호와-디지털-서명\"><a class=\"markdownIt-Anchor\" href=\"#공개키-암호와-디지털-서명\"></a> 공개키 암호와 디지털 서명</h4>\n<ul>\n<li>공개 키 암호\n<ul>\n<li>암호화키와 복호화키가 나누어져 있어 암호키로 복호화를 행할 수는 없다.</li>\n<li>복호화 키는 복호화를 행하는 사람만이 가지고 있지만 암호키는 암호화를 행하는 사람이라면 누구나 가질 수 있다.</li>\n<li>디지털 서명은 공개 키 암호를 역으로 사용함으로써 실현한다.</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th style=\"text-align:center\">개인키</th>\n<th style=\"text-align:center\">공개키</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>공개키 암호</td>\n<td style=\"text-align:center\">수신자가 복호화에 사용</td>\n<td style=\"text-align:center\">송신자들이 암호화에 사용</td>\n</tr>\n<tr>\n<td>디지털 서명</td>\n<td style=\"text-align:center\">서명자가 서명 작성에 사용</td>\n<td style=\"text-align:center\">검증자들이 서명 검증에 사용</td>\n</tr>\n<tr>\n<td>키는 누가 갖는가?</td>\n<td style=\"text-align:center\">개인이 갖는다</td>\n<td style=\"text-align:center\">필요한 사람은 아무나 가지고 있어도 된다.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>메세지를 개인키로 암호화 하는 것이 서명 작성<br />\n<img src=\"/images/cryptography/signature/public_key_enc.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>암호문을 공개키로 복호화 하는 것이 서명 검증<br />\n<img src=\"/images/cryptography/signature/private_key_enc.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>공개키 암호는 누구라도 암호화<br />\n<img src=\"/images/cryptography/signature/public_key_enc1.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>디지털 서명은 누구라도 서명검증<br />\n<img src=\"/images/cryptography/signature/private_key_signature_verify.png\" alt=\"\" /></p>\n</li>\n</ul>\n<p>참조 : <a href=\"https://crazia.tistory.com/entry/PKI-PKI-%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EA%B0%84%EB%8B%A8-%EC%84%A4%EB%AA%85\" target=\"_blank\" rel=\"noopener\">https://crazia.tistory.com/entry/PKI-PKI-의-기본-개념-간단-설명</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"signatures\"><a class=\"markdownIt-Anchor\" href=\"#signatures\"></a> Signatures</h2>\n<h3 id=\"electronic-signature\"><a class=\"markdownIt-Anchor\" href=\"#electronic-signature\"></a> Electronic Signature</h3>\n<ul>\n<li>계약 또는 기타 기록에 첨부된 서명으로 서명하려는 사람이 실행하거나 채택한 전자 신호,심볼 또는 프로세스로 정의 된다.</li>\n<li>기본적으로 전자 서명은 손으로 쓴 서명을 디지털화 한 것과 동일하며 문서 내의 내용 또는 특정 문서의 용어를 확인하는 데 사용할 수 있다.</li>\n</ul>\n<h3 id=\"digital-signature\"><a class=\"markdownIt-Anchor\" href=\"#digital-signature\"></a> Digital Signature</h3>\n<ul>\n<li>문서에 서명 한 사람이 본인이 맞는가?</li>\n<li>서명이 유효하고 위조되지 않았는지 어떻게 확인할 수 있는가?</li>\n<li>문서가 변경되지 않았는지 어떻게 확인할 수 있을까?</li>\n<li>Digital Signature의 경우 Certification Authority(CA)으로 알려진 신뢰할 수 있는 제 3자가 신원 확인 측면에서 공증인 역할을 한다.</li>\n<li>인증 기관은 신원을 PKI (Public Key Infrastructure) 기반 디지털 인증서에 바인딩해서 문서 및 클라우드 기반 서명 플랫폼에 디지털 서명을 적용 할 수 있다.</li>\n</ul>\n<h4 id=\"보장-범위\"><a class=\"markdownIt-Anchor\" href=\"#보장-범위\"></a> 보장 범위</h4>\n<ul>\n<li>문서는 정통이며 검증된 출처에서 제공된다.</li>\n<li>서명이 변경되면 서명이 유효하지 않은 것으로 표시되어 디지털 서명 된 이후 문서가 변경되지 않았다.</li>\n<li>사용자의 신원이 신뢰할 수 있는 조직에 의해 확인되었다.</li>\n<li>Certified Signature</li>\n<li>Approval Signature</li>\n<li>Signature Line</li>\n</ul>\n<h4 id=\"pki-public-key-infrastructure\"><a class=\"markdownIt-Anchor\" href=\"#pki-public-key-infrastructure\"></a> PKI (Public Key Infrastructure)</h4>\n<ul>\n<li>\n<p>RFC 2459 : Internet X.509 Public Key Infrastructure</p>\n<ul>\n<li>Message Digest (Hash Function)</li>\n<li>Symmetric Key Algorithm</li>\n<li>Asymmetric Key Algorithm</li>\n</ul>\n</li>\n<li>\n<p>Cryptographic Hash Function</p>\n<ul>\n<li>Message Digest</li>\n<li>MD5(128bit), SHA-1(160bit)</li>\n</ul>\n</li>\n<li>\n<p>Symmetric Key Algorithm</p>\n<ul>\n<li>One key (대칭키)</li>\n<li>Encryption, Decryption</li>\n<li>3DES, AES</li>\n</ul>\n</li>\n<li>\n<p>Asymmetric Key Algorithm</p>\n<ul>\n<li>Two Key (비 대칭키)</li>\n<li>RSA (Rivest, Shmir, Adelman)</li>\n</ul>\n</li>\n<li>\n<p>공개키 : 평문을 공개키로 <em>암호화</em>한후 개인키로 <em>복호화</em>해 Encrypted Text를 만든다.</p>\n</li>\n<li>\n<p>개인키 : 개인키로 <em>암호화</em>한 후 공개키로 <em>복호화</em>해 Encrypted Text를 만든다. 개인이 보낸 내용을 증명할 때 많이 사용하며 이러한 경우를<br />\n개인키 ‘전자서명’, 공개키 ‘서명검증’ 이라고 한다.</p>\n</li>\n</ul>\n<h4 id=\"서명-작성과-서명-검증\"><a class=\"markdownIt-Anchor\" href=\"#서명-작성과-서명-검증\"></a> 서명 작성과 서명 검증</h4>\n<ul>\n<li>메시지의 서명을 작성하는 행위\n<ul>\n<li>디지털 서명에는 서명용 키와 검증용 키가 나누어져 있다.</li>\n<li>서명용 키는 서명을 하는 사람이 가지고 있지만, 검증용 키는 서명을 검증하는 사람이라면 누구라도 가질 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"공개키-암호와-디지털-서명\"><a class=\"markdownIt-Anchor\" href=\"#공개키-암호와-디지털-서명\"></a> 공개키 암호와 디지털 서명</h4>\n<ul>\n<li>공개 키 암호\n<ul>\n<li>암호화키와 복호화키가 나누어져 있어 암호키로 복호화를 행할 수는 없다.</li>\n<li>복호화 키는 복호화를 행하는 사람만이 가지고 있지만 암호키는 암호화를 행하는 사람이라면 누구나 가질 수 있다.</li>\n<li>디지털 서명은 공개 키 암호를 역으로 사용함으로써 실현한다.</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th style=\"text-align:center\">개인키</th>\n<th style=\"text-align:center\">공개키</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>공개키 암호</td>\n<td style=\"text-align:center\">수신자가 복호화에 사용</td>\n<td style=\"text-align:center\">송신자들이 암호화에 사용</td>\n</tr>\n<tr>\n<td>디지털 서명</td>\n<td style=\"text-align:center\">서명자가 서명 작성에 사용</td>\n<td style=\"text-align:center\">검증자들이 서명 검증에 사용</td>\n</tr>\n<tr>\n<td>키는 누가 갖는가?</td>\n<td style=\"text-align:center\">개인이 갖는다</td>\n<td style=\"text-align:center\">필요한 사람은 아무나 가지고 있어도 된다.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>메세지를 개인키로 암호화 하는 것이 서명 작성<br />\n<img src=\"/images/cryptography/signature/public_key_enc.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>암호문을 공개키로 복호화 하는 것이 서명 검증<br />\n<img src=\"/images/cryptography/signature/private_key_enc.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>공개키 암호는 누구라도 암호화<br />\n<img src=\"/images/cryptography/signature/public_key_enc1.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>디지털 서명은 누구라도 서명검증<br />\n<img src=\"/images/cryptography/signature/private_key_signature_verify.png\" alt=\"\" /></p>\n</li>\n</ul>\n<p>참조 : <a href=\"https://crazia.tistory.com/entry/PKI-PKI-%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EA%B0%84%EB%8B%A8-%EC%84%A4%EB%AA%85\" target=\"_blank\" rel=\"noopener\">https://crazia.tistory.com/entry/PKI-PKI-의-기본-개념-간단-설명</a></p>\n"},{"title":"cryptography-ssl-tls","date":"2020-04-29T01:39:00.000Z","_content":"\n### SSL(Secure socket layer)/TLS(Transport Layer Security)\n- 통신 내용을 암호화 해주는 프로토콜\n    - SSL/TLS 상에 HTTP을 올리는 것이다.\n    - HTTP의 통신(요청과 응답)은 암호화되어 도청을 방지할 수 있다.\n    \n### SSL/TLS의 역할\n- *도청* 당하는 일 없이 통신하고 싶다. ( 기밀성 )\n- *조작* 당하는 일 없이 통신하고 싶다. ( 무결성 )\n- 통신 상대의 웹 서버가 해당 상대인 것을 확인하고 싶다 ( 상호 인증 )\n\n### Cypher Suite\n- 암호 기술의 추천 세트가 SSL/TLS로 규정 되어 있다.\n\n### HTTPS 인증서 유형\n- 신원 검증\n    - DV (Domain Validated) : DV 인증서는 해당 도메인에 대한 알맞은 공개 키인지를 간단히 확인하며, 브라우저에서는 법적 신원을 보여주지 않는다.\n    - EV (Extended Validation) : EV 인증서는 웹 사이트의 법적 신분을 검증한다.\n        - 도메인 관리\n        - 공인된 사업기록\n        - D&B(Dunn and Bradstreet), salesforce, connect.data.com 등에 기재된 정보\n        - 인증서의 모든 도메인 이름 검사 ( 와일드카드 안됨)\n\n- 도메인 수 \n    - 단일 도메인\n    - 다중 도메인(Unified Communications Certificate/SAN)\n    - 와일드 카드\n    \n### HTTPS 구성\n- 초기 키 교환 (공개키 알고리즘)\n- 신원 인증서 (인증기관에서 발행한 HTTPS 인증서)\n- 실제 메세지 암호화 (대칭키 알고리즘)\n- MAC (Hash 알고리즘)    \n\n### 참고 자료\n\nhttps://dokydoky.tistory.com/462\nhttps://dokydoky.tistory.com/463\nhttps://dokydoky.tistory.com/464","source":"_posts/cryptography-ssl-tls.md","raw":"---\ntitle: cryptography-ssl-tls\ndate: 2020-04-29 10:39:00\ntags:\n- key exchange\n- ssl\n- tls\n- https\ncategories:\n- cryptography\n---\n\n### SSL(Secure socket layer)/TLS(Transport Layer Security)\n- 통신 내용을 암호화 해주는 프로토콜\n    - SSL/TLS 상에 HTTP을 올리는 것이다.\n    - HTTP의 통신(요청과 응답)은 암호화되어 도청을 방지할 수 있다.\n    \n### SSL/TLS의 역할\n- *도청* 당하는 일 없이 통신하고 싶다. ( 기밀성 )\n- *조작* 당하는 일 없이 통신하고 싶다. ( 무결성 )\n- 통신 상대의 웹 서버가 해당 상대인 것을 확인하고 싶다 ( 상호 인증 )\n\n### Cypher Suite\n- 암호 기술의 추천 세트가 SSL/TLS로 규정 되어 있다.\n\n### HTTPS 인증서 유형\n- 신원 검증\n    - DV (Domain Validated) : DV 인증서는 해당 도메인에 대한 알맞은 공개 키인지를 간단히 확인하며, 브라우저에서는 법적 신원을 보여주지 않는다.\n    - EV (Extended Validation) : EV 인증서는 웹 사이트의 법적 신분을 검증한다.\n        - 도메인 관리\n        - 공인된 사업기록\n        - D&B(Dunn and Bradstreet), salesforce, connect.data.com 등에 기재된 정보\n        - 인증서의 모든 도메인 이름 검사 ( 와일드카드 안됨)\n\n- 도메인 수 \n    - 단일 도메인\n    - 다중 도메인(Unified Communications Certificate/SAN)\n    - 와일드 카드\n    \n### HTTPS 구성\n- 초기 키 교환 (공개키 알고리즘)\n- 신원 인증서 (인증기관에서 발행한 HTTPS 인증서)\n- 실제 메세지 암호화 (대칭키 알고리즘)\n- MAC (Hash 알고리즘)    \n\n### 참고 자료\n\nhttps://dokydoky.tistory.com/462\nhttps://dokydoky.tistory.com/463\nhttps://dokydoky.tistory.com/464","slug":"cryptography-ssl-tls","published":1,"updated":"2020-07-11T04:51:03.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo51480012qlvo7pr1ekdf","content":"<h3 id=\"sslsecure-socket-layertlstransport-layer-security\"><a class=\"markdownIt-Anchor\" href=\"#sslsecure-socket-layertlstransport-layer-security\"></a> SSL(Secure socket layer)/TLS(Transport Layer Security)</h3>\n<ul>\n<li>통신 내용을 암호화 해주는 프로토콜\n<ul>\n<li>SSL/TLS 상에 HTTP을 올리는 것이다.</li>\n<li>HTTP의 통신(요청과 응답)은 암호화되어 도청을 방지할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"ssltls의-역할\"><a class=\"markdownIt-Anchor\" href=\"#ssltls의-역할\"></a> SSL/TLS의 역할</h3>\n<ul>\n<li><em>도청</em> 당하는 일 없이 통신하고 싶다. ( 기밀성 )</li>\n<li><em>조작</em> 당하는 일 없이 통신하고 싶다. ( 무결성 )</li>\n<li>통신 상대의 웹 서버가 해당 상대인 것을 확인하고 싶다 ( 상호 인증 )</li>\n</ul>\n<h3 id=\"cypher-suite\"><a class=\"markdownIt-Anchor\" href=\"#cypher-suite\"></a> Cypher Suite</h3>\n<ul>\n<li>암호 기술의 추천 세트가 SSL/TLS로 규정 되어 있다.</li>\n</ul>\n<h3 id=\"https-인증서-유형\"><a class=\"markdownIt-Anchor\" href=\"#https-인증서-유형\"></a> HTTPS 인증서 유형</h3>\n<ul>\n<li>\n<p>신원 검증</p>\n<ul>\n<li>DV (Domain Validated) : DV 인증서는 해당 도메인에 대한 알맞은 공개 키인지를 간단히 확인하며, 브라우저에서는 법적 신원을 보여주지 않는다.</li>\n<li>EV (Extended Validation) : EV 인증서는 웹 사이트의 법적 신분을 검증한다.\n<ul>\n<li>도메인 관리</li>\n<li>공인된 사업기록</li>\n<li>D&amp;B(Dunn and Bradstreet), salesforce, <a href=\"http://connect.data.com\" target=\"_blank\" rel=\"noopener\">connect.data.com</a> 등에 기재된 정보</li>\n<li>인증서의 모든 도메인 이름 검사 ( 와일드카드 안됨)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>도메인 수</p>\n<ul>\n<li>단일 도메인</li>\n<li>다중 도메인(Unified Communications Certificate/SAN)</li>\n<li>와일드 카드</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"https-구성\"><a class=\"markdownIt-Anchor\" href=\"#https-구성\"></a> HTTPS 구성</h3>\n<ul>\n<li>초기 키 교환 (공개키 알고리즘)</li>\n<li>신원 인증서 (인증기관에서 발행한 HTTPS 인증서)</li>\n<li>실제 메세지 암호화 (대칭키 알고리즘)</li>\n<li>MAC (Hash 알고리즘)</li>\n</ul>\n<h3 id=\"참고-자료\"><a class=\"markdownIt-Anchor\" href=\"#참고-자료\"></a> 참고 자료</h3>\n<p><a href=\"https://dokydoky.tistory.com/462\" target=\"_blank\" rel=\"noopener\">https://dokydoky.tistory.com/462</a><br />\n<a href=\"https://dokydoky.tistory.com/463\" target=\"_blank\" rel=\"noopener\">https://dokydoky.tistory.com/463</a><br />\n<a href=\"https://dokydoky.tistory.com/464\" target=\"_blank\" rel=\"noopener\">https://dokydoky.tistory.com/464</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"sslsecure-socket-layertlstransport-layer-security\"><a class=\"markdownIt-Anchor\" href=\"#sslsecure-socket-layertlstransport-layer-security\"></a> SSL(Secure socket layer)/TLS(Transport Layer Security)</h3>\n<ul>\n<li>통신 내용을 암호화 해주는 프로토콜\n<ul>\n<li>SSL/TLS 상에 HTTP을 올리는 것이다.</li>\n<li>HTTP의 통신(요청과 응답)은 암호화되어 도청을 방지할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"ssltls의-역할\"><a class=\"markdownIt-Anchor\" href=\"#ssltls의-역할\"></a> SSL/TLS의 역할</h3>\n<ul>\n<li><em>도청</em> 당하는 일 없이 통신하고 싶다. ( 기밀성 )</li>\n<li><em>조작</em> 당하는 일 없이 통신하고 싶다. ( 무결성 )</li>\n<li>통신 상대의 웹 서버가 해당 상대인 것을 확인하고 싶다 ( 상호 인증 )</li>\n</ul>\n<h3 id=\"cypher-suite\"><a class=\"markdownIt-Anchor\" href=\"#cypher-suite\"></a> Cypher Suite</h3>\n<ul>\n<li>암호 기술의 추천 세트가 SSL/TLS로 규정 되어 있다.</li>\n</ul>\n<h3 id=\"https-인증서-유형\"><a class=\"markdownIt-Anchor\" href=\"#https-인증서-유형\"></a> HTTPS 인증서 유형</h3>\n<ul>\n<li>\n<p>신원 검증</p>\n<ul>\n<li>DV (Domain Validated) : DV 인증서는 해당 도메인에 대한 알맞은 공개 키인지를 간단히 확인하며, 브라우저에서는 법적 신원을 보여주지 않는다.</li>\n<li>EV (Extended Validation) : EV 인증서는 웹 사이트의 법적 신분을 검증한다.\n<ul>\n<li>도메인 관리</li>\n<li>공인된 사업기록</li>\n<li>D&amp;B(Dunn and Bradstreet), salesforce, <a href=\"http://connect.data.com\" target=\"_blank\" rel=\"noopener\">connect.data.com</a> 등에 기재된 정보</li>\n<li>인증서의 모든 도메인 이름 검사 ( 와일드카드 안됨)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>도메인 수</p>\n<ul>\n<li>단일 도메인</li>\n<li>다중 도메인(Unified Communications Certificate/SAN)</li>\n<li>와일드 카드</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"https-구성\"><a class=\"markdownIt-Anchor\" href=\"#https-구성\"></a> HTTPS 구성</h3>\n<ul>\n<li>초기 키 교환 (공개키 알고리즘)</li>\n<li>신원 인증서 (인증기관에서 발행한 HTTPS 인증서)</li>\n<li>실제 메세지 암호화 (대칭키 알고리즘)</li>\n<li>MAC (Hash 알고리즘)</li>\n</ul>\n<h3 id=\"참고-자료\"><a class=\"markdownIt-Anchor\" href=\"#참고-자료\"></a> 참고 자료</h3>\n<p><a href=\"https://dokydoky.tistory.com/462\" target=\"_blank\" rel=\"noopener\">https://dokydoky.tistory.com/462</a><br />\n<a href=\"https://dokydoky.tistory.com/463\" target=\"_blank\" rel=\"noopener\">https://dokydoky.tistory.com/463</a><br />\n<a href=\"https://dokydoky.tistory.com/464\" target=\"_blank\" rel=\"noopener\">https://dokydoky.tistory.com/464</a></p>\n"},{"title":"enable-annotation-spring","date":"2020-01-20T11:06:59.000Z","_content":"\n### Spring Boot에서 Enable로 시작하는 Annotation\n\n- Bean을 생성할 때, 고정 값이 아닌 동적으로 값을 얻어와 빈을 생성해 주어야 하는 경우가 있다. \n    - ex) Url이 DB에 저장되어 있거나 File에 저장되어 있어 이를 읽어와 빈을 생성해야 하는경우\n\n- 선언적으로 빈을 생성하지 못하고 동적으로 빈을 생성해야 할 경우 @Enable* Annotation을 사용해 빈을 선언할 수 있다.\n\n#### @Enable* Annotation 을 사용하는 방법은 3가지이다.\n- @Import를 사용하여 정의한 Bean을 불러와서 사용 ex) EnableScheduling\n\n```java\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Import(SchedulingConfiguration.class)\n@Documented\npublic @interface EnableScheduling {\n \n}\n@Configuration\npublic class SchedulingConfiguration {\n \n @Bean(name=AnnotationConfigUtils.SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME)\n @Role(BeanDefinition.ROLE_INFRASTRUCTURE)\n public ScheduledAnnotationBeanPostProcessor scheduledAnnotationProcessor() {\n  return new ScheduledAnnotationBeanPostProcessor();\n }\n \n}\n```\n\n- @ImportSelector를 사용하여 빈을 생성하는 경우 \n    - ImportSelector 인터페이스를 구현하고 Return하는 배열에 클래스의 이름을 적어 반환해주면 된다. Ex) EnableTransaction\n\n```java\n\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Import(TransactionManagementConfigurationSelector.class)\npublic @interface EnableTransactionManagement {\n\n\tboolean proxyTargetClass() default false;\n\tAdviceMode mode() default AdviceMode.PROXY;\n\n\tint order() default Ordered.LOWEST_PRECEDENCE;\n}\n\npublic class TransactionManagementConfigurationSelector extends AdviceModeImportSelector<EnableTransactionManagement> {\n\t@Override\n\tprotected String[] selectImports(AdviceMode adviceMode) {\n\t\tswitch (adviceMode) {\n\t\t\tcase PROXY:\n\t\t\t\treturn new String[] {AutoProxyRegistrar.class.getName(),\n\t\t\t\t\t\tProxyTransactionManagementConfiguration.class.getName()};\n\t\t\tcase ASPECTJ:\n\t\t\t\treturn new String[] {determineTransactionAspectClass()};\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate String determineTransactionAspectClass() {\n\t\treturn (ClassUtils.isPresent(\"javax.transaction.Transactional\", getClass().getClassLoader()) ?\n\t\t\t\tTransactionManagementConfigUtils.JTA_TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME :\n\t\t\t\tTransactionManagementConfigUtils.TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME);\n\t}\n}\n\n```\n\n- @ImportBeanDefinitionRegistrar를 사용한 BeanRegistry에 Bean 등록하기\n    - 동적으로 값을 얻어와 빈에 할당하려면 이 방법 뿐이였다.\n    - 준비물 : Google Reflections Library, \n\n\n```java\npublic void registerBeanDefinitions(AnnotationMetadata annotationMetadata, BeanDefinitionRegistry registry) {\n    String basePackageName = ((StandardAnnotationMetadata) annotationMetadata).getIntrospectedClass().getPackage().getName();\n    Set<Class<?>> interfaces = new Reflections(basePackageName).getTypesAnnotatedWith(ProjectFeignClient.class);\n\n    interfaces.forEach(type -> {\n      BeanDefinitionBuilder builder = BeanDefinitionBuilder.genericBeanDefinition(ProjectFeignFactoryBean.class);\n      builder.setLazyInit(true);\n      builder.addPropertyValue(\"type\", type.getName());\n      builder.setAutowireMode(2);\n\n      AbstractBeanDefinition definition = builder.getBeanDefinition();\n      definition.setPrimary(true);\n\n      BeanDefinitionReaderUtils.registerBeanDefinition(\n              new BeanDefinitionHolder(definition, type.getName()), registry\n      );\n    });\n```\n    \n","source":"_posts/enable-annotation-spring.md","raw":"---\ntitle: enable-annotation-spring\ndate: 2020-01-20 20:06:59\ntags:\n- Java\n- Spring\n- EnableAnnotation\ncategories:\n- Java\n- Spring\n---\n\n### Spring Boot에서 Enable로 시작하는 Annotation\n\n- Bean을 생성할 때, 고정 값이 아닌 동적으로 값을 얻어와 빈을 생성해 주어야 하는 경우가 있다. \n    - ex) Url이 DB에 저장되어 있거나 File에 저장되어 있어 이를 읽어와 빈을 생성해야 하는경우\n\n- 선언적으로 빈을 생성하지 못하고 동적으로 빈을 생성해야 할 경우 @Enable* Annotation을 사용해 빈을 선언할 수 있다.\n\n#### @Enable* Annotation 을 사용하는 방법은 3가지이다.\n- @Import를 사용하여 정의한 Bean을 불러와서 사용 ex) EnableScheduling\n\n```java\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Import(SchedulingConfiguration.class)\n@Documented\npublic @interface EnableScheduling {\n \n}\n@Configuration\npublic class SchedulingConfiguration {\n \n @Bean(name=AnnotationConfigUtils.SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME)\n @Role(BeanDefinition.ROLE_INFRASTRUCTURE)\n public ScheduledAnnotationBeanPostProcessor scheduledAnnotationProcessor() {\n  return new ScheduledAnnotationBeanPostProcessor();\n }\n \n}\n```\n\n- @ImportSelector를 사용하여 빈을 생성하는 경우 \n    - ImportSelector 인터페이스를 구현하고 Return하는 배열에 클래스의 이름을 적어 반환해주면 된다. Ex) EnableTransaction\n\n```java\n\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Import(TransactionManagementConfigurationSelector.class)\npublic @interface EnableTransactionManagement {\n\n\tboolean proxyTargetClass() default false;\n\tAdviceMode mode() default AdviceMode.PROXY;\n\n\tint order() default Ordered.LOWEST_PRECEDENCE;\n}\n\npublic class TransactionManagementConfigurationSelector extends AdviceModeImportSelector<EnableTransactionManagement> {\n\t@Override\n\tprotected String[] selectImports(AdviceMode adviceMode) {\n\t\tswitch (adviceMode) {\n\t\t\tcase PROXY:\n\t\t\t\treturn new String[] {AutoProxyRegistrar.class.getName(),\n\t\t\t\t\t\tProxyTransactionManagementConfiguration.class.getName()};\n\t\t\tcase ASPECTJ:\n\t\t\t\treturn new String[] {determineTransactionAspectClass()};\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate String determineTransactionAspectClass() {\n\t\treturn (ClassUtils.isPresent(\"javax.transaction.Transactional\", getClass().getClassLoader()) ?\n\t\t\t\tTransactionManagementConfigUtils.JTA_TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME :\n\t\t\t\tTransactionManagementConfigUtils.TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME);\n\t}\n}\n\n```\n\n- @ImportBeanDefinitionRegistrar를 사용한 BeanRegistry에 Bean 등록하기\n    - 동적으로 값을 얻어와 빈에 할당하려면 이 방법 뿐이였다.\n    - 준비물 : Google Reflections Library, \n\n\n```java\npublic void registerBeanDefinitions(AnnotationMetadata annotationMetadata, BeanDefinitionRegistry registry) {\n    String basePackageName = ((StandardAnnotationMetadata) annotationMetadata).getIntrospectedClass().getPackage().getName();\n    Set<Class<?>> interfaces = new Reflections(basePackageName).getTypesAnnotatedWith(ProjectFeignClient.class);\n\n    interfaces.forEach(type -> {\n      BeanDefinitionBuilder builder = BeanDefinitionBuilder.genericBeanDefinition(ProjectFeignFactoryBean.class);\n      builder.setLazyInit(true);\n      builder.addPropertyValue(\"type\", type.getName());\n      builder.setAutowireMode(2);\n\n      AbstractBeanDefinition definition = builder.getBeanDefinition();\n      definition.setPrimary(true);\n\n      BeanDefinitionReaderUtils.registerBeanDefinition(\n              new BeanDefinitionHolder(definition, type.getName()), registry\n      );\n    });\n```\n    \n","slug":"enable-annotation-spring","published":1,"updated":"2020-07-11T04:51:03.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo51490016qlvo5f9u7w68","content":"<h3 id=\"spring-boot에서-enable로-시작하는-annotation\"><a class=\"markdownIt-Anchor\" href=\"#spring-boot에서-enable로-시작하는-annotation\"></a> Spring Boot에서 Enable로 시작하는 Annotation</h3>\n<ul>\n<li>\n<p>Bean을 생성할 때, 고정 값이 아닌 동적으로 값을 얻어와 빈을 생성해 주어야 하는 경우가 있다.</p>\n<ul>\n<li>ex) Url이 DB에 저장되어 있거나 File에 저장되어 있어 이를 읽어와 빈을 생성해야 하는경우</li>\n</ul>\n</li>\n<li>\n<p>선언적으로 빈을 생성하지 못하고 동적으로 빈을 생성해야 할 경우 @Enable* Annotation을 사용해 빈을 선언할 수 있다.</p>\n</li>\n</ul>\n<h4 id=\"enable-annotation-을-사용하는-방법은-3가지이다\"><a class=\"markdownIt-Anchor\" href=\"#enable-annotation-을-사용하는-방법은-3가지이다\"></a> @Enable* Annotation 을 사용하는 방법은 3가지이다.</h4>\n<ul>\n<li>@Import를 사용하여 정의한 Bean을 불러와서 사용 ex) EnableScheduling</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target</span>(ElementType.TYPE)</span><br><span class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class=\"line\"><span class=\"meta\">@Import</span>(SchedulingConfiguration.class)</span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> EnableScheduling &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SchedulingConfiguration</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"meta\">@Bean</span>(name=AnnotationConfigUtils.SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME)</span><br><span class=\"line\"> <span class=\"meta\">@Role</span>(BeanDefinition.ROLE_INFRASTRUCTURE)</span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> ScheduledAnnotationBeanPostProcessor <span class=\"title\">scheduledAnnotationProcessor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ScheduledAnnotationBeanPostProcessor();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>@ImportSelector를 사용하여 빈을 생성하는 경우\n<ul>\n<li>ImportSelector 인터페이스를 구현하고 Return하는 배열에 클래스의 이름을 적어 반환해주면 된다. Ex) EnableTransaction</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Target</span>(ElementType.TYPE)</span><br><span class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Import</span>(TransactionManagementConfigurationSelector.class)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> EnableTransactionManagement &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">proxyTargetClass</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"keyword\">false</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">AdviceMode <span class=\"title\">mode</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> AdviceMode.PROXY</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">order</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> Ordered.LOWEST_PRECEDENCE</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TransactionManagementConfigurationSelector</span> <span class=\"keyword\">extends</span> <span class=\"title\">AdviceModeImportSelector</span>&lt;<span class=\"title\">EnableTransactionManagement</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> String[] selectImports(AdviceMode adviceMode) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> (adviceMode) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> PROXY:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String[] &#123;AutoProxyRegistrar.class.getName(),</span><br><span class=\"line\">\t\t\t\t\t\tProxyTransactionManagementConfiguration.class.getName()&#125;;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> ASPECTJ:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String[] &#123;determineTransactionAspectClass()&#125;;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">determineTransactionAspectClass</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (ClassUtils.isPresent(<span class=\"string\">\"javax.transaction.Transactional\"</span>, getClass().getClassLoader()) ?</span><br><span class=\"line\">\t\t\t\tTransactionManagementConfigUtils.JTA_TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME :</span><br><span class=\"line\">\t\t\t\tTransactionManagementConfigUtils.TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>@ImportBeanDefinitionRegistrar를 사용한 BeanRegistry에 Bean 등록하기\n<ul>\n<li>동적으로 값을 얻어와 빈에 할당하려면 이 방법 뿐이였다.</li>\n<li>준비물 : Google Reflections Library,</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">registerBeanDefinitions</span><span class=\"params\">(AnnotationMetadata annotationMetadata, BeanDefinitionRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">    String basePackageName = ((StandardAnnotationMetadata) annotationMetadata).getIntrospectedClass().getPackage().getName();</span><br><span class=\"line\">    Set&lt;Class&lt;?&gt;&gt; interfaces = <span class=\"keyword\">new</span> Reflections(basePackageName).getTypesAnnotatedWith(ProjectFeignClient.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    interfaces.forEach(type -&gt; &#123;</span><br><span class=\"line\">      BeanDefinitionBuilder builder = BeanDefinitionBuilder.genericBeanDefinition(ProjectFeignFactoryBean.class);</span><br><span class=\"line\">      builder.setLazyInit(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">      builder.addPropertyValue(<span class=\"string\">\"type\"</span>, type.getName());</span><br><span class=\"line\">      builder.setAutowireMode(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      AbstractBeanDefinition definition = builder.getBeanDefinition();</span><br><span class=\"line\">      definition.setPrimary(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      BeanDefinitionReaderUtils.registerBeanDefinition(</span><br><span class=\"line\">              <span class=\"keyword\">new</span> BeanDefinitionHolder(definition, type.getName()), registry</span><br><span class=\"line\">      );</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"spring-boot에서-enable로-시작하는-annotation\"><a class=\"markdownIt-Anchor\" href=\"#spring-boot에서-enable로-시작하는-annotation\"></a> Spring Boot에서 Enable로 시작하는 Annotation</h3>\n<ul>\n<li>\n<p>Bean을 생성할 때, 고정 값이 아닌 동적으로 값을 얻어와 빈을 생성해 주어야 하는 경우가 있다.</p>\n<ul>\n<li>ex) Url이 DB에 저장되어 있거나 File에 저장되어 있어 이를 읽어와 빈을 생성해야 하는경우</li>\n</ul>\n</li>\n<li>\n<p>선언적으로 빈을 생성하지 못하고 동적으로 빈을 생성해야 할 경우 @Enable* Annotation을 사용해 빈을 선언할 수 있다.</p>\n</li>\n</ul>\n<h4 id=\"enable-annotation-을-사용하는-방법은-3가지이다\"><a class=\"markdownIt-Anchor\" href=\"#enable-annotation-을-사용하는-방법은-3가지이다\"></a> @Enable* Annotation 을 사용하는 방법은 3가지이다.</h4>\n<ul>\n<li>@Import를 사용하여 정의한 Bean을 불러와서 사용 ex) EnableScheduling</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target</span>(ElementType.TYPE)</span><br><span class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class=\"line\"><span class=\"meta\">@Import</span>(SchedulingConfiguration.class)</span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> EnableScheduling &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SchedulingConfiguration</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"meta\">@Bean</span>(name=AnnotationConfigUtils.SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME)</span><br><span class=\"line\"> <span class=\"meta\">@Role</span>(BeanDefinition.ROLE_INFRASTRUCTURE)</span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> ScheduledAnnotationBeanPostProcessor <span class=\"title\">scheduledAnnotationProcessor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ScheduledAnnotationBeanPostProcessor();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>@ImportSelector를 사용하여 빈을 생성하는 경우\n<ul>\n<li>ImportSelector 인터페이스를 구현하고 Return하는 배열에 클래스의 이름을 적어 반환해주면 된다. Ex) EnableTransaction</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Target</span>(ElementType.TYPE)</span><br><span class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Import</span>(TransactionManagementConfigurationSelector.class)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> EnableTransactionManagement &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">proxyTargetClass</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"keyword\">false</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">AdviceMode <span class=\"title\">mode</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> AdviceMode.PROXY</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">order</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> Ordered.LOWEST_PRECEDENCE</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TransactionManagementConfigurationSelector</span> <span class=\"keyword\">extends</span> <span class=\"title\">AdviceModeImportSelector</span>&lt;<span class=\"title\">EnableTransactionManagement</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> String[] selectImports(AdviceMode adviceMode) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> (adviceMode) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> PROXY:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String[] &#123;AutoProxyRegistrar.class.getName(),</span><br><span class=\"line\">\t\t\t\t\t\tProxyTransactionManagementConfiguration.class.getName()&#125;;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> ASPECTJ:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String[] &#123;determineTransactionAspectClass()&#125;;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">determineTransactionAspectClass</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (ClassUtils.isPresent(<span class=\"string\">\"javax.transaction.Transactional\"</span>, getClass().getClassLoader()) ?</span><br><span class=\"line\">\t\t\t\tTransactionManagementConfigUtils.JTA_TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME :</span><br><span class=\"line\">\t\t\t\tTransactionManagementConfigUtils.TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>@ImportBeanDefinitionRegistrar를 사용한 BeanRegistry에 Bean 등록하기\n<ul>\n<li>동적으로 값을 얻어와 빈에 할당하려면 이 방법 뿐이였다.</li>\n<li>준비물 : Google Reflections Library,</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">registerBeanDefinitions</span><span class=\"params\">(AnnotationMetadata annotationMetadata, BeanDefinitionRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">    String basePackageName = ((StandardAnnotationMetadata) annotationMetadata).getIntrospectedClass().getPackage().getName();</span><br><span class=\"line\">    Set&lt;Class&lt;?&gt;&gt; interfaces = <span class=\"keyword\">new</span> Reflections(basePackageName).getTypesAnnotatedWith(ProjectFeignClient.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    interfaces.forEach(type -&gt; &#123;</span><br><span class=\"line\">      BeanDefinitionBuilder builder = BeanDefinitionBuilder.genericBeanDefinition(ProjectFeignFactoryBean.class);</span><br><span class=\"line\">      builder.setLazyInit(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">      builder.addPropertyValue(<span class=\"string\">\"type\"</span>, type.getName());</span><br><span class=\"line\">      builder.setAutowireMode(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      AbstractBeanDefinition definition = builder.getBeanDefinition();</span><br><span class=\"line\">      definition.setPrimary(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      BeanDefinitionReaderUtils.registerBeanDefinition(</span><br><span class=\"line\">              <span class=\"keyword\">new</span> BeanDefinitionHolder(definition, type.getName()), registry</span><br><span class=\"line\">      );</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"intro","date":"2019-10-28T06:40:04.000Z","_content":"","source":"_posts/intro.md","raw":"---\ntitle: intro\ndate: 2019-10-28 15:40:04\ntags:\n---\n","slug":"intro","published":1,"updated":"2020-07-11T04:51:03.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514c0019qlvo9ukd4wy5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"event-publishing-run-listener","date":"2019-12-19T06:44:23.000Z","_content":"\n스프링부트가 기동 될때, 기본적으로 등록하는 Run Listener\n\n![](/images/springboot/eventpublishinglistener/eventpublisingrunlistener.png)\n\n내부에 SpringApplication을 가지고 있고, \nSimpleApplicationEventMulticaster에 ApplicationListener들을 등록한다.","source":"_posts/event-publishing-run-listener.md","raw":"---\ntitle: event-publishing-run-listener\ndate: 2019-12-19 15:44:23\ntags: Spring Boot Listener\n---\n\n스프링부트가 기동 될때, 기본적으로 등록하는 Run Listener\n\n![](/images/springboot/eventpublishinglistener/eventpublisingrunlistener.png)\n\n내부에 SpringApplication을 가지고 있고, \nSimpleApplicationEventMulticaster에 ApplicationListener들을 등록한다.","slug":"event-publishing-run-listener","published":1,"updated":"2020-07-11T04:51:03.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514e001bqlvod3cv9xjb","content":"<p>스프링부트가 기동 될때, 기본적으로 등록하는 Run Listener</p>\n<p><img src=\"/images/springboot/eventpublishinglistener/eventpublisingrunlistener.png\" alt=\"\" /></p>\n<p>내부에 SpringApplication을 가지고 있고,<br />\nSimpleApplicationEventMulticaster에 ApplicationListener들을 등록한다.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>스프링부트가 기동 될때, 기본적으로 등록하는 Run Listener</p>\n<p><img src=\"/images/springboot/eventpublishinglistener/eventpublisingrunlistener.png\" alt=\"\" /></p>\n<p>내부에 SpringApplication을 가지고 있고,<br />\nSimpleApplicationEventMulticaster에 ApplicationListener들을 등록한다.</p>\n"},{"title":"java-class-clazz","date":"2020-03-30T00:50:55.000Z","_content":"간단하게 instanceof는 특정 Object가 어떤 클래스/인터페이스를 상속/구현했는지를 체크하며\nClass.isAssignableFrom()은 특정 Class가 어떤 클래스/인터페이스를 상속/구현했는지 체크합니다.\n\n```java\n// instanceof\nMacPro obj = new MacPro();\nif (obj instanceof Computer) {\n  ...\n}\n\n// Class.isAssignableFrom()\nif (Computer.class.isAssignableFrom(MacPro.class)) {\n  ...\n}\n```\n\n특정 클래스가 다른 인터페이스를 구현했거나 상속받았는지를 체크하기 위해서는 어떻게 하면 될까? 상위클래스들을 모조리(java.lang.Object 가 될때까지) 찾아다니면서 구현한 Interface들을 확인하면 될것도 같은데 왠지 세련되지 않은 것 같다.\nisAssignableFrom 이라는 메소드는 위 문제를 쉽게 해결해준다.\n내가 원하는 것은 사용자로부터 입력받은 클래스가 java.util.Collection 인터페이스를 (implements)구현한 클래스인지 체크하는 것이었다.","source":"_posts/java-class-clazz.md","raw":"---\ntitle: java-class-clazz\ndate: 2020-03-30 09:50:55\ntags:\n---\n간단하게 instanceof는 특정 Object가 어떤 클래스/인터페이스를 상속/구현했는지를 체크하며\nClass.isAssignableFrom()은 특정 Class가 어떤 클래스/인터페이스를 상속/구현했는지 체크합니다.\n\n```java\n// instanceof\nMacPro obj = new MacPro();\nif (obj instanceof Computer) {\n  ...\n}\n\n// Class.isAssignableFrom()\nif (Computer.class.isAssignableFrom(MacPro.class)) {\n  ...\n}\n```\n\n특정 클래스가 다른 인터페이스를 구현했거나 상속받았는지를 체크하기 위해서는 어떻게 하면 될까? 상위클래스들을 모조리(java.lang.Object 가 될때까지) 찾아다니면서 구현한 Interface들을 확인하면 될것도 같은데 왠지 세련되지 않은 것 같다.\nisAssignableFrom 이라는 메소드는 위 문제를 쉽게 해결해준다.\n내가 원하는 것은 사용자로부터 입력받은 클래스가 java.util.Collection 인터페이스를 (implements)구현한 클래스인지 체크하는 것이었다.","slug":"java-class-clazz","published":1,"updated":"2020-07-11T04:51:03.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514g001eqlvo9dfh3iwx","content":"<p>간단하게 instanceof는 특정 Object가 어떤 클래스/인터페이스를 상속/구현했는지를 체크하며<br />\nClass.isAssignableFrom()은 특정 Class가 어떤 클래스/인터페이스를 상속/구현했는지 체크합니다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// instanceof</span></span><br><span class=\"line\">MacPro obj = <span class=\"keyword\">new</span> MacPro();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> Computer) &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Class.isAssignableFrom()</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (Computer.class.isAssignableFrom(MacPro.class)) &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>특정 클래스가 다른 인터페이스를 구현했거나 상속받았는지를 체크하기 위해서는 어떻게 하면 될까? 상위클래스들을 모조리(java.lang.Object 가 될때까지) 찾아다니면서 구현한 Interface들을 확인하면 될것도 같은데 왠지 세련되지 않은 것 같다.<br />\nisAssignableFrom 이라는 메소드는 위 문제를 쉽게 해결해준다.<br />\n내가 원하는 것은 사용자로부터 입력받은 클래스가 java.util.Collection 인터페이스를 (implements)구현한 클래스인지 체크하는 것이었다.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>간단하게 instanceof는 특정 Object가 어떤 클래스/인터페이스를 상속/구현했는지를 체크하며<br />\nClass.isAssignableFrom()은 특정 Class가 어떤 클래스/인터페이스를 상속/구현했는지 체크합니다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// instanceof</span></span><br><span class=\"line\">MacPro obj = <span class=\"keyword\">new</span> MacPro();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> Computer) &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Class.isAssignableFrom()</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (Computer.class.isAssignableFrom(MacPro.class)) &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>특정 클래스가 다른 인터페이스를 구현했거나 상속받았는지를 체크하기 위해서는 어떻게 하면 될까? 상위클래스들을 모조리(java.lang.Object 가 될때까지) 찾아다니면서 구현한 Interface들을 확인하면 될것도 같은데 왠지 세련되지 않은 것 같다.<br />\nisAssignableFrom 이라는 메소드는 위 문제를 쉽게 해결해준다.<br />\n내가 원하는 것은 사용자로부터 입력받은 클래스가 java.util.Collection 인터페이스를 (implements)구현한 클래스인지 체크하는 것이었다.</p>\n"},{"title":"java-fundamental-method-stack","date":"2020-02-27T02:23:55.000Z","_content":"![](/images/java/fundamental/method_stack_memory/method_stacks.png)\n\n## Java Virtual Machine Stacks\n- Local Variable Section\n    - Method Parameters음\n        - float size 1\n        - long, double size 2\n        - char, byte, boolean, short, int 전체가 int형으로 선언되어 있음\n    - Local variable\n\n- Operand Stack\n    - Work Space in JVM \n        - JVM 작업 공간, JVM 이 프로그램을 수행하면서 연산을 위해 사용되는 데이터 및 결과를 Operand Stack에 집어넣고 처리함\n\n![](/images/java/fundamental/method_stack_memory/operand_stack.png)\n\n\n- Frame Data\n    - Constant pool Resolution\n    - Normal Method Return\n    - Exception Dispatch\n\n## Native Method Stacks\n- Native Code C ==> C Stack\n- Native Code C++ ==> C++ Stack\n\n![](/images/java/fundamental/method_stack_memory/native_method.png)\n","source":"_posts/java-fundamental-method-stack.md","raw":"---\ntitle: java-fundamental-method-stack\ndate: 2020-02-27 11:23:55\ntags:\n---\n![](/images/java/fundamental/method_stack_memory/method_stacks.png)\n\n## Java Virtual Machine Stacks\n- Local Variable Section\n    - Method Parameters음\n        - float size 1\n        - long, double size 2\n        - char, byte, boolean, short, int 전체가 int형으로 선언되어 있음\n    - Local variable\n\n- Operand Stack\n    - Work Space in JVM \n        - JVM 작업 공간, JVM 이 프로그램을 수행하면서 연산을 위해 사용되는 데이터 및 결과를 Operand Stack에 집어넣고 처리함\n\n![](/images/java/fundamental/method_stack_memory/operand_stack.png)\n\n\n- Frame Data\n    - Constant pool Resolution\n    - Normal Method Return\n    - Exception Dispatch\n\n## Native Method Stacks\n- Native Code C ==> C Stack\n- Native Code C++ ==> C++ Stack\n\n![](/images/java/fundamental/method_stack_memory/native_method.png)\n","slug":"java-fundamental-method-stack","published":1,"updated":"2020-07-11T04:51:03.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514i001hqlvohintertb","content":"<p><img src=\"/images/java/fundamental/method_stack_memory/method_stacks.png\" alt=\"\" /></p>\n<h2 id=\"java-virtual-machine-stacks\"><a class=\"markdownIt-Anchor\" href=\"#java-virtual-machine-stacks\"></a> Java Virtual Machine Stacks</h2>\n<ul>\n<li>\n<p>Local Variable Section</p>\n<ul>\n<li>Method Parameters음\n<ul>\n<li>float size 1</li>\n<li>long, double size 2</li>\n<li>char, byte, boolean, short, int 전체가 int형으로 선언되어 있음</li>\n</ul>\n</li>\n<li>Local variable</li>\n</ul>\n</li>\n<li>\n<p>Operand Stack</p>\n<ul>\n<li>Work Space in JVM\n<ul>\n<li>JVM 작업 공간, JVM 이 프로그램을 수행하면서 연산을 위해 사용되는 데이터 및 결과를 Operand Stack에 집어넣고 처리함</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/java/fundamental/method_stack_memory/operand_stack.png\" alt=\"\" /></p>\n<ul>\n<li>Frame Data\n<ul>\n<li>Constant pool Resolution</li>\n<li>Normal Method Return</li>\n<li>Exception Dispatch</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"native-method-stacks\"><a class=\"markdownIt-Anchor\" href=\"#native-method-stacks\"></a> Native Method Stacks</h2>\n<ul>\n<li>Native Code C ==&gt; C Stack</li>\n<li>Native Code C++ ==&gt; C++ Stack</li>\n</ul>\n<p><img src=\"/images/java/fundamental/method_stack_memory/native_method.png\" alt=\"\" /></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/java/fundamental/method_stack_memory/method_stacks.png\" alt=\"\" /></p>\n<h2 id=\"java-virtual-machine-stacks\"><a class=\"markdownIt-Anchor\" href=\"#java-virtual-machine-stacks\"></a> Java Virtual Machine Stacks</h2>\n<ul>\n<li>\n<p>Local Variable Section</p>\n<ul>\n<li>Method Parameters음\n<ul>\n<li>float size 1</li>\n<li>long, double size 2</li>\n<li>char, byte, boolean, short, int 전체가 int형으로 선언되어 있음</li>\n</ul>\n</li>\n<li>Local variable</li>\n</ul>\n</li>\n<li>\n<p>Operand Stack</p>\n<ul>\n<li>Work Space in JVM\n<ul>\n<li>JVM 작업 공간, JVM 이 프로그램을 수행하면서 연산을 위해 사용되는 데이터 및 결과를 Operand Stack에 집어넣고 처리함</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/java/fundamental/method_stack_memory/operand_stack.png\" alt=\"\" /></p>\n<ul>\n<li>Frame Data\n<ul>\n<li>Constant pool Resolution</li>\n<li>Normal Method Return</li>\n<li>Exception Dispatch</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"native-method-stacks\"><a class=\"markdownIt-Anchor\" href=\"#native-method-stacks\"></a> Native Method Stacks</h2>\n<ul>\n<li>Native Code C ==&gt; C Stack</li>\n<li>Native Code C++ ==&gt; C++ Stack</li>\n</ul>\n<p><img src=\"/images/java/fundamental/method_stack_memory/native_method.png\" alt=\"\" /></p>\n"},{"title":"java-calendar-locale-timezone","date":"2020-03-16T09:19:33.000Z","_content":"## Java Date & Calendar\n\nLocale Extension : buddhist, japanese, gregory 형태의 달력 선택 가능 \n- BuddhistCalendar (불멸기원 : 석가모니가 입멸한 해를 기준으로 삼는 연대 표기)\n- JapaneseImperialCalendar (일본 연호 : 일본에서는 새 천황이 즉위하거나 나라에 자연재해가 계속될 때 연호를 바꾼다. )\n```java\n  public static final int BEFORE_MEIJI = 0;\n  public static final int MEIJI = 1; (1868년 ~ 1912년)\n  public static final int TAISHO = 2; \n  public static final int SHOWA = 3;\n  public static final int HEISEI = 4;\n  private static final int REIWA = 5;\n```\n\n- GregorianCalendar \n    - 율리우스력의 바탕이 된 이집트력을 기본으로 하고 1년의 길이를 365.2425일로 정하는 역법체계. 윤년을 포함하는 양력을 말한다.\n    - 율리우스력의 오차를 수정한 달력이며, 기본 구조는 율리우스력을 그대로 따르되 윤년을 정하는 규칙을 추가했다.\n    \n## Java Locale\n\n- A Locale object represents a specific geographical, political, or cultural region. \n- Language, Script, Country\n- [Country Code & Language Code](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html)\n\n||Language Code|Script Code| Country|\n|:--:|:--:|:--:|:--:|\n|한국어|ko|Kore|KR|\n|일본어|ja||JP|\n|영어|en||US|\n\n- Locale 은 Display 속성과 Format 속성을 따로 관리한다.\n- Display 속성은 언어를 표현하는 단어를 어울러서 가지고 있다.\n- Format 속성은 Locale 에 해당하는 숫자, 연도 포멧을 가지고 있다.\n\n## Java TimeZone\n\n- [GMT(Greenwich Mean Time)](https://ko.wikipedia.org/wiki/%EA%B7%B8%EB%A6%AC%EB%8B%88%EC%B9%98_%ED%8F%89%EA%B7%A0%EC%8B%9C)\n    - 그리니치 천문대를 기준으로 하는 평균 태양시\n- [UTC(universal time coordinated)](https://ko.wikipedia.org/wiki/%ED%98%91%EC%A0%95_%EC%84%B8%EA%B3%84%EC%8B%9C)\n    - 세슘 원자의 진동수에 기반한 것으로 오차가 30만년에 1초 수준\n- UTC vs GMT\n    - 초의 소수점 차이만 난다. ms 이하의 값들이 중요하다면 UTC를 쓰고 아니면 GMT를 써도 무방\n\n- 타국 타임존\n    - UTC, GMT(세계 표준시 ) : 한국시간에 9시간을 빼어 계산한다.\n    - CEST(중부 유럽 서머타임)  : UTC+2 hours , 한국시간에 7시간을 빼어 계산한다.\n    - BST(영국 서머타임)     : UTC+1 hour , 한국시간에 8시간을 빼어 계산한다.\n    - EDT(미국동부 서머타임, 예:뉴욕)   : UTC-4 hours , 한국시간에 13시간을 빼어 계산한다.\n    - CDT(미국중부 서머타임, 예:시카고)   : UTC-5 hours , 한국시간에 14시간을 빼어 계산한다.\n    - CST(중국표준시, 예:타이페이)  : UTC+8 hours , 한국시간에 1시간을 빼어 계산한다.\n\n## 유닉스 시간 (POSIX, Epoch)   \n- UTC 1970년 1월 1일 00:00:00 부터 경과 시간을 초로 환산하여 정수로 나타낸 것\n    ","source":"_posts/java-calendar-locale-timezone.md","raw":"---\ntitle: java-calendar-locale-timezone\ndate: 2020-03-16 18:19:33\ntags: \n- Java\ncategories:\n- Date\n- Calendar\n---\n## Java Date & Calendar\n\nLocale Extension : buddhist, japanese, gregory 형태의 달력 선택 가능 \n- BuddhistCalendar (불멸기원 : 석가모니가 입멸한 해를 기준으로 삼는 연대 표기)\n- JapaneseImperialCalendar (일본 연호 : 일본에서는 새 천황이 즉위하거나 나라에 자연재해가 계속될 때 연호를 바꾼다. )\n```java\n  public static final int BEFORE_MEIJI = 0;\n  public static final int MEIJI = 1; (1868년 ~ 1912년)\n  public static final int TAISHO = 2; \n  public static final int SHOWA = 3;\n  public static final int HEISEI = 4;\n  private static final int REIWA = 5;\n```\n\n- GregorianCalendar \n    - 율리우스력의 바탕이 된 이집트력을 기본으로 하고 1년의 길이를 365.2425일로 정하는 역법체계. 윤년을 포함하는 양력을 말한다.\n    - 율리우스력의 오차를 수정한 달력이며, 기본 구조는 율리우스력을 그대로 따르되 윤년을 정하는 규칙을 추가했다.\n    \n## Java Locale\n\n- A Locale object represents a specific geographical, political, or cultural region. \n- Language, Script, Country\n- [Country Code & Language Code](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html)\n\n||Language Code|Script Code| Country|\n|:--:|:--:|:--:|:--:|\n|한국어|ko|Kore|KR|\n|일본어|ja||JP|\n|영어|en||US|\n\n- Locale 은 Display 속성과 Format 속성을 따로 관리한다.\n- Display 속성은 언어를 표현하는 단어를 어울러서 가지고 있다.\n- Format 속성은 Locale 에 해당하는 숫자, 연도 포멧을 가지고 있다.\n\n## Java TimeZone\n\n- [GMT(Greenwich Mean Time)](https://ko.wikipedia.org/wiki/%EA%B7%B8%EB%A6%AC%EB%8B%88%EC%B9%98_%ED%8F%89%EA%B7%A0%EC%8B%9C)\n    - 그리니치 천문대를 기준으로 하는 평균 태양시\n- [UTC(universal time coordinated)](https://ko.wikipedia.org/wiki/%ED%98%91%EC%A0%95_%EC%84%B8%EA%B3%84%EC%8B%9C)\n    - 세슘 원자의 진동수에 기반한 것으로 오차가 30만년에 1초 수준\n- UTC vs GMT\n    - 초의 소수점 차이만 난다. ms 이하의 값들이 중요하다면 UTC를 쓰고 아니면 GMT를 써도 무방\n\n- 타국 타임존\n    - UTC, GMT(세계 표준시 ) : 한국시간에 9시간을 빼어 계산한다.\n    - CEST(중부 유럽 서머타임)  : UTC+2 hours , 한국시간에 7시간을 빼어 계산한다.\n    - BST(영국 서머타임)     : UTC+1 hour , 한국시간에 8시간을 빼어 계산한다.\n    - EDT(미국동부 서머타임, 예:뉴욕)   : UTC-4 hours , 한국시간에 13시간을 빼어 계산한다.\n    - CDT(미국중부 서머타임, 예:시카고)   : UTC-5 hours , 한국시간에 14시간을 빼어 계산한다.\n    - CST(중국표준시, 예:타이페이)  : UTC+8 hours , 한국시간에 1시간을 빼어 계산한다.\n\n## 유닉스 시간 (POSIX, Epoch)   \n- UTC 1970년 1월 1일 00:00:00 부터 경과 시간을 초로 환산하여 정수로 나타낸 것\n    ","slug":"java-calendar-locale-timezone","published":1,"updated":"2020-07-11T04:51:03.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514k001lqlvo75bwa531","content":"<h2 id=\"java-date-calendar\"><a class=\"markdownIt-Anchor\" href=\"#java-date-calendar\"></a> Java Date &amp; Calendar</h2>\n<p>Locale Extension : buddhist, japanese, gregory 형태의 달력 선택 가능</p>\n<ul>\n<li>BuddhistCalendar (불멸기원 : 석가모니가 입멸한 해를 기준으로 삼는 연대 표기)</li>\n<li>JapaneseImperialCalendar (일본 연호 : 일본에서는 새 천황이 즉위하거나 나라에 자연재해가 계속될 때 연호를 바꾼다. )</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> BEFORE_MEIJI = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MEIJI = <span class=\"number\">1</span>; (<span class=\"number\">1868</span>년 ~ <span class=\"number\">1912</span>년)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> TAISHO = <span class=\"number\">2</span>; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SHOWA = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> HEISEI = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> REIWA = <span class=\"number\">5</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>GregorianCalendar\n<ul>\n<li>율리우스력의 바탕이 된 이집트력을 기본으로 하고 1년의 길이를 365.2425일로 정하는 역법체계. 윤년을 포함하는 양력을 말한다.</li>\n<li>율리우스력의 오차를 수정한 달력이며, 기본 구조는 율리우스력을 그대로 따르되 윤년을 정하는 규칙을 추가했다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"java-locale\"><a class=\"markdownIt-Anchor\" href=\"#java-locale\"></a> Java Locale</h2>\n<ul>\n<li>A Locale object represents a specific geographical, political, or cultural region.</li>\n<li>Language, Script, Country</li>\n<li><a href=\"https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html\" target=\"_blank\" rel=\"noopener\">Country Code &amp; Language Code</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">Language Code</th>\n<th style=\"text-align:center\">Script Code</th>\n<th style=\"text-align:center\">Country</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">한국어</td>\n<td style=\"text-align:center\">ko</td>\n<td style=\"text-align:center\">Kore</td>\n<td style=\"text-align:center\">KR</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">일본어</td>\n<td style=\"text-align:center\">ja</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">JP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">영어</td>\n<td style=\"text-align:center\">en</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">US</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Locale 은 Display 속성과 Format 속성을 따로 관리한다.</li>\n<li>Display 속성은 언어를 표현하는 단어를 어울러서 가지고 있다.</li>\n<li>Format 속성은 Locale 에 해당하는 숫자, 연도 포멧을 가지고 있다.</li>\n</ul>\n<h2 id=\"java-timezone\"><a class=\"markdownIt-Anchor\" href=\"#java-timezone\"></a> Java TimeZone</h2>\n<ul>\n<li>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EA%B7%B8%EB%A6%AC%EB%8B%88%EC%B9%98_%ED%8F%89%EA%B7%A0%EC%8B%9C\" target=\"_blank\" rel=\"noopener\">GMT(Greenwich Mean Time)</a></p>\n<ul>\n<li>그리니치 천문대를 기준으로 하는 평균 태양시</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://ko.wikipedia.org/wiki/%ED%98%91%EC%A0%95_%EC%84%B8%EA%B3%84%EC%8B%9C\" target=\"_blank\" rel=\"noopener\">UTC(universal time coordinated)</a></p>\n<ul>\n<li>세슘 원자의 진동수에 기반한 것으로 오차가 30만년에 1초 수준</li>\n</ul>\n</li>\n<li>\n<p>UTC vs GMT</p>\n<ul>\n<li>초의 소수점 차이만 난다. ms 이하의 값들이 중요하다면 UTC를 쓰고 아니면 GMT를 써도 무방</li>\n</ul>\n</li>\n<li>\n<p>타국 타임존</p>\n<ul>\n<li>UTC, GMT(세계 표준시 ) : 한국시간에 9시간을 빼어 계산한다.</li>\n<li>CEST(중부 유럽 서머타임)  : UTC+2 hours , 한국시간에 7시간을 빼어 계산한다.</li>\n<li>BST(영국 서머타임)     : UTC+1 hour , 한국시간에 8시간을 빼어 계산한다.</li>\n<li>EDT(미국동부 서머타임, 예:뉴욕)   : UTC-4 hours , 한국시간에 13시간을 빼어 계산한다.</li>\n<li>CDT(미국중부 서머타임, 예:시카고)   : UTC-5 hours , 한국시간에 14시간을 빼어 계산한다.</li>\n<li>CST(중국표준시, 예:타이페이)  : UTC+8 hours , 한국시간에 1시간을 빼어 계산한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"유닉스-시간-posix-epoch\"><a class=\"markdownIt-Anchor\" href=\"#유닉스-시간-posix-epoch\"></a> 유닉스 시간 (POSIX, Epoch)</h2>\n<ul>\n<li>UTC 1970년 1월 1일 00:00:00 부터 경과 시간을 초로 환산하여 정수로 나타낸 것</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"java-date-calendar\"><a class=\"markdownIt-Anchor\" href=\"#java-date-calendar\"></a> Java Date &amp; Calendar</h2>\n<p>Locale Extension : buddhist, japanese, gregory 형태의 달력 선택 가능</p>\n<ul>\n<li>BuddhistCalendar (불멸기원 : 석가모니가 입멸한 해를 기준으로 삼는 연대 표기)</li>\n<li>JapaneseImperialCalendar (일본 연호 : 일본에서는 새 천황이 즉위하거나 나라에 자연재해가 계속될 때 연호를 바꾼다. )</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> BEFORE_MEIJI = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MEIJI = <span class=\"number\">1</span>; (<span class=\"number\">1868</span>년 ~ <span class=\"number\">1912</span>년)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> TAISHO = <span class=\"number\">2</span>; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SHOWA = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> HEISEI = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> REIWA = <span class=\"number\">5</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>GregorianCalendar\n<ul>\n<li>율리우스력의 바탕이 된 이집트력을 기본으로 하고 1년의 길이를 365.2425일로 정하는 역법체계. 윤년을 포함하는 양력을 말한다.</li>\n<li>율리우스력의 오차를 수정한 달력이며, 기본 구조는 율리우스력을 그대로 따르되 윤년을 정하는 규칙을 추가했다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"java-locale\"><a class=\"markdownIt-Anchor\" href=\"#java-locale\"></a> Java Locale</h2>\n<ul>\n<li>A Locale object represents a specific geographical, political, or cultural region.</li>\n<li>Language, Script, Country</li>\n<li><a href=\"https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html\" target=\"_blank\" rel=\"noopener\">Country Code &amp; Language Code</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">Language Code</th>\n<th style=\"text-align:center\">Script Code</th>\n<th style=\"text-align:center\">Country</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">한국어</td>\n<td style=\"text-align:center\">ko</td>\n<td style=\"text-align:center\">Kore</td>\n<td style=\"text-align:center\">KR</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">일본어</td>\n<td style=\"text-align:center\">ja</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">JP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">영어</td>\n<td style=\"text-align:center\">en</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">US</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Locale 은 Display 속성과 Format 속성을 따로 관리한다.</li>\n<li>Display 속성은 언어를 표현하는 단어를 어울러서 가지고 있다.</li>\n<li>Format 속성은 Locale 에 해당하는 숫자, 연도 포멧을 가지고 있다.</li>\n</ul>\n<h2 id=\"java-timezone\"><a class=\"markdownIt-Anchor\" href=\"#java-timezone\"></a> Java TimeZone</h2>\n<ul>\n<li>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EA%B7%B8%EB%A6%AC%EB%8B%88%EC%B9%98_%ED%8F%89%EA%B7%A0%EC%8B%9C\" target=\"_blank\" rel=\"noopener\">GMT(Greenwich Mean Time)</a></p>\n<ul>\n<li>그리니치 천문대를 기준으로 하는 평균 태양시</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://ko.wikipedia.org/wiki/%ED%98%91%EC%A0%95_%EC%84%B8%EA%B3%84%EC%8B%9C\" target=\"_blank\" rel=\"noopener\">UTC(universal time coordinated)</a></p>\n<ul>\n<li>세슘 원자의 진동수에 기반한 것으로 오차가 30만년에 1초 수준</li>\n</ul>\n</li>\n<li>\n<p>UTC vs GMT</p>\n<ul>\n<li>초의 소수점 차이만 난다. ms 이하의 값들이 중요하다면 UTC를 쓰고 아니면 GMT를 써도 무방</li>\n</ul>\n</li>\n<li>\n<p>타국 타임존</p>\n<ul>\n<li>UTC, GMT(세계 표준시 ) : 한국시간에 9시간을 빼어 계산한다.</li>\n<li>CEST(중부 유럽 서머타임)  : UTC+2 hours , 한국시간에 7시간을 빼어 계산한다.</li>\n<li>BST(영국 서머타임)     : UTC+1 hour , 한국시간에 8시간을 빼어 계산한다.</li>\n<li>EDT(미국동부 서머타임, 예:뉴욕)   : UTC-4 hours , 한국시간에 13시간을 빼어 계산한다.</li>\n<li>CDT(미국중부 서머타임, 예:시카고)   : UTC-5 hours , 한국시간에 14시간을 빼어 계산한다.</li>\n<li>CST(중국표준시, 예:타이페이)  : UTC+8 hours , 한국시간에 1시간을 빼어 계산한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"유닉스-시간-posix-epoch\"><a class=\"markdownIt-Anchor\" href=\"#유닉스-시간-posix-epoch\"></a> 유닉스 시간 (POSIX, Epoch)</h2>\n<ul>\n<li>UTC 1970년 1월 1일 00:00:00 부터 경과 시간을 초로 환산하여 정수로 나타낸 것</li>\n</ul>\n"},{"title":"java-fundamental-method-area","date":"2020-02-27T02:52:51.000Z","_content":"\n![](/images/java/fundamental/method_area/method_area.png)\n","source":"_posts/java-fundamental-method-area.md","raw":"---\ntitle: java-fundamental-method-area\ndate: 2020-02-27 11:52:51\ntags:\n---\n\n![](/images/java/fundamental/method_area/method_area.png)\n","slug":"java-fundamental-method-area","published":1,"updated":"2020-07-11T04:51:03.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514m001oqlvo2pcgdklv","content":"<p><img src=\"/images/java/fundamental/method_area/method_area.png\" alt=\"\" /></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/java/fundamental/method_area/method_area.png\" alt=\"\" /></p>\n"},{"title":"java-map-marker","date":"2020-03-26T04:13:37.000Z","_content":"\n## Map\n\n- Spatial DB\n- OGC\n- POI (Point of Interesting)","source":"_posts/java-map-marker.md","raw":"---\ntitle: java-map-marker\ndate: 2020-03-26 13:13:37\ntags:\n---\n\n## Map\n\n- Spatial DB\n- OGC\n- POI (Point of Interesting)","slug":"java-map-marker","published":1,"updated":"2020-07-11T04:51:03.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514r001sqlvoaoa8hdlb","content":"<h2 id=\"map\"><a class=\"markdownIt-Anchor\" href=\"#map\"></a> Map</h2>\n<ul>\n<li>Spatial DB</li>\n<li>OGC</li>\n<li>POI (Point of Interesting)</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"map\"><a class=\"markdownIt-Anchor\" href=\"#map\"></a> Map</h2>\n<ul>\n<li>Spatial DB</li>\n<li>OGC</li>\n<li>POI (Point of Interesting)</li>\n</ul>\n"},{"title":"java-fundamental-runtime-data-areas","date":"2020-02-27T02:40:06.000Z","_content":"\n![](/images/java/fundamental/runtime_data_areas/runtime_data_areas.png)\n\n## Runtime Data Areas\n- PC Registers\n    - CPU에서 명령어(Instruction)을 수행하는 과정에서 필요한 정보를 레지스터(Register)라고 하는 CPU내 기억장치를 사용한다.\n    - Java의 PC Registers는 Register-Base로 구동되는 방식이 아니라 Stack-Base로 작동한다.\n    - JVM은 CPU에 직접 명령어를 수행하지 않고 Stack에서 Operand를 뽑아내 이를 별도의 메모리 공간에 저장하는 방식을 취하고 있다.\n    - 플랫폼 독립적인 설계를 위해 버퍼공간으로 만든 메모리 공간을 PC Registers라고 한다.\n    \n- Java Virtual Machine Stacks\n    - Thread의 수행 정보를 기록하는 Frame을 저장하는 공간\n    - Thread별로 하나씩 존재하며 Thread가 시작할 때 생성된다.\n    - Stack Frame 이라고 하는 것들로 구성이 되는데 JVM은 Stack Frame을 push,pop 작업만 수행한다.\n    - 그래서 이 Stack Frame들의 정보를 Stack Trace또는 Stack Dump를 얻어내어 분석을 하게 된다.\n    - 현재 수행하고 있는 Method의 Strack Frame을 Current Frame이라고 한다.\n    - 현재 수행하고 있는 Method의 Class를 Current Class이라고 한다.\n    \n- Method Area\n    - 메모리 영역들이 각 Thread마다 할당되는 배타적인 공간인데 반해 Method Area는 모든 thread들이 공유하는 메모리 영역이다.\n    - Load된 Type(Class, Interface)을 저장하는 논리적 메모리 공간\n    - Type의 ByteCode 뿐만 아니라, 모든 변수, 상수, Reference, Method Data등이 포함된다.\n    - Class Variable과 Method와 생성자의 정보도 포함된다. 이 정보들은 ClassLoader에게 넘겨받은 Class File에서 Type관련 정보를\n      추출하여 저장하게 된다.\n    - Method Area는 JVM이 기동할때 생성이 되고 GC대상이며, 이는 벤더마다 구현이 다르다.","source":"_posts/java-fundamental-runtime-data-areas.md","raw":"---\ntitle: java-fundamental-runtime-data-areas\ndate: 2020-02-27 11:40:06\ntags:\n---\n\n![](/images/java/fundamental/runtime_data_areas/runtime_data_areas.png)\n\n## Runtime Data Areas\n- PC Registers\n    - CPU에서 명령어(Instruction)을 수행하는 과정에서 필요한 정보를 레지스터(Register)라고 하는 CPU내 기억장치를 사용한다.\n    - Java의 PC Registers는 Register-Base로 구동되는 방식이 아니라 Stack-Base로 작동한다.\n    - JVM은 CPU에 직접 명령어를 수행하지 않고 Stack에서 Operand를 뽑아내 이를 별도의 메모리 공간에 저장하는 방식을 취하고 있다.\n    - 플랫폼 독립적인 설계를 위해 버퍼공간으로 만든 메모리 공간을 PC Registers라고 한다.\n    \n- Java Virtual Machine Stacks\n    - Thread의 수행 정보를 기록하는 Frame을 저장하는 공간\n    - Thread별로 하나씩 존재하며 Thread가 시작할 때 생성된다.\n    - Stack Frame 이라고 하는 것들로 구성이 되는데 JVM은 Stack Frame을 push,pop 작업만 수행한다.\n    - 그래서 이 Stack Frame들의 정보를 Stack Trace또는 Stack Dump를 얻어내어 분석을 하게 된다.\n    - 현재 수행하고 있는 Method의 Strack Frame을 Current Frame이라고 한다.\n    - 현재 수행하고 있는 Method의 Class를 Current Class이라고 한다.\n    \n- Method Area\n    - 메모리 영역들이 각 Thread마다 할당되는 배타적인 공간인데 반해 Method Area는 모든 thread들이 공유하는 메모리 영역이다.\n    - Load된 Type(Class, Interface)을 저장하는 논리적 메모리 공간\n    - Type의 ByteCode 뿐만 아니라, 모든 변수, 상수, Reference, Method Data등이 포함된다.\n    - Class Variable과 Method와 생성자의 정보도 포함된다. 이 정보들은 ClassLoader에게 넘겨받은 Class File에서 Type관련 정보를\n      추출하여 저장하게 된다.\n    - Method Area는 JVM이 기동할때 생성이 되고 GC대상이며, 이는 벤더마다 구현이 다르다.","slug":"java-fundamental-runtime-data-areas","published":1,"updated":"2020-07-11T04:51:03.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514s001vqlvo3700bm8a","content":"<p><img src=\"/images/java/fundamental/runtime_data_areas/runtime_data_areas.png\" alt=\"\" /></p>\n<h2 id=\"runtime-data-areas\"><a class=\"markdownIt-Anchor\" href=\"#runtime-data-areas\"></a> Runtime Data Areas</h2>\n<ul>\n<li>\n<p>PC Registers</p>\n<ul>\n<li>CPU에서 명령어(Instruction)을 수행하는 과정에서 필요한 정보를 레지스터(Register)라고 하는 CPU내 기억장치를 사용한다.</li>\n<li>Java의 PC Registers는 Register-Base로 구동되는 방식이 아니라 Stack-Base로 작동한다.</li>\n<li>JVM은 CPU에 직접 명령어를 수행하지 않고 Stack에서 Operand를 뽑아내 이를 별도의 메모리 공간에 저장하는 방식을 취하고 있다.</li>\n<li>플랫폼 독립적인 설계를 위해 버퍼공간으로 만든 메모리 공간을 PC Registers라고 한다.</li>\n</ul>\n</li>\n<li>\n<p>Java Virtual Machine Stacks</p>\n<ul>\n<li>Thread의 수행 정보를 기록하는 Frame을 저장하는 공간</li>\n<li>Thread별로 하나씩 존재하며 Thread가 시작할 때 생성된다.</li>\n<li>Stack Frame 이라고 하는 것들로 구성이 되는데 JVM은 Stack Frame을 push,pop 작업만 수행한다.</li>\n<li>그래서 이 Stack Frame들의 정보를 Stack Trace또는 Stack Dump를 얻어내어 분석을 하게 된다.</li>\n<li>현재 수행하고 있는 Method의 Strack Frame을 Current Frame이라고 한다.</li>\n<li>현재 수행하고 있는 Method의 Class를 Current Class이라고 한다.</li>\n</ul>\n</li>\n<li>\n<p>Method Area</p>\n<ul>\n<li>메모리 영역들이 각 Thread마다 할당되는 배타적인 공간인데 반해 Method Area는 모든 thread들이 공유하는 메모리 영역이다.</li>\n<li>Load된 Type(Class, Interface)을 저장하는 논리적 메모리 공간</li>\n<li>Type의 ByteCode 뿐만 아니라, 모든 변수, 상수, Reference, Method Data등이 포함된다.</li>\n<li>Class Variable과 Method와 생성자의 정보도 포함된다. 이 정보들은 ClassLoader에게 넘겨받은 Class File에서 Type관련 정보를<br />\n추출하여 저장하게 된다.</li>\n<li>Method Area는 JVM이 기동할때 생성이 되고 GC대상이며, 이는 벤더마다 구현이 다르다.</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/java/fundamental/runtime_data_areas/runtime_data_areas.png\" alt=\"\" /></p>\n<h2 id=\"runtime-data-areas\"><a class=\"markdownIt-Anchor\" href=\"#runtime-data-areas\"></a> Runtime Data Areas</h2>\n<ul>\n<li>\n<p>PC Registers</p>\n<ul>\n<li>CPU에서 명령어(Instruction)을 수행하는 과정에서 필요한 정보를 레지스터(Register)라고 하는 CPU내 기억장치를 사용한다.</li>\n<li>Java의 PC Registers는 Register-Base로 구동되는 방식이 아니라 Stack-Base로 작동한다.</li>\n<li>JVM은 CPU에 직접 명령어를 수행하지 않고 Stack에서 Operand를 뽑아내 이를 별도의 메모리 공간에 저장하는 방식을 취하고 있다.</li>\n<li>플랫폼 독립적인 설계를 위해 버퍼공간으로 만든 메모리 공간을 PC Registers라고 한다.</li>\n</ul>\n</li>\n<li>\n<p>Java Virtual Machine Stacks</p>\n<ul>\n<li>Thread의 수행 정보를 기록하는 Frame을 저장하는 공간</li>\n<li>Thread별로 하나씩 존재하며 Thread가 시작할 때 생성된다.</li>\n<li>Stack Frame 이라고 하는 것들로 구성이 되는데 JVM은 Stack Frame을 push,pop 작업만 수행한다.</li>\n<li>그래서 이 Stack Frame들의 정보를 Stack Trace또는 Stack Dump를 얻어내어 분석을 하게 된다.</li>\n<li>현재 수행하고 있는 Method의 Strack Frame을 Current Frame이라고 한다.</li>\n<li>현재 수행하고 있는 Method의 Class를 Current Class이라고 한다.</li>\n</ul>\n</li>\n<li>\n<p>Method Area</p>\n<ul>\n<li>메모리 영역들이 각 Thread마다 할당되는 배타적인 공간인데 반해 Method Area는 모든 thread들이 공유하는 메모리 영역이다.</li>\n<li>Load된 Type(Class, Interface)을 저장하는 논리적 메모리 공간</li>\n<li>Type의 ByteCode 뿐만 아니라, 모든 변수, 상수, Reference, Method Data등이 포함된다.</li>\n<li>Class Variable과 Method와 생성자의 정보도 포함된다. 이 정보들은 ClassLoader에게 넘겨받은 Class File에서 Type관련 정보를<br />\n추출하여 저장하게 된다.</li>\n<li>Method Area는 JVM이 기동할때 생성이 되고 GC대상이며, 이는 벤더마다 구현이 다르다.</li>\n</ul>\n</li>\n</ul>\n"},{"title":"java-poi","date":"2020-02-19T12:28:41.000Z","_content":"확인해보\nhttps://blog.naver.com/tmondev/221388780914\nhttps://blog.miyam.net/41\nhttps://www.codejava.net/coding/java-code-example-to-export-data-from-database-to-excel-file\nhttp://jexcelapi.sourceforge.net/resources/faq/\nhttps://offbyone.tistory.com/70\nflyweight pattern\n","source":"_posts/java-poi.md","raw":"---\ntitle: java-poi\ndate: 2020-02-19 21:28:41\ntags:\n---\n확인해보\nhttps://blog.naver.com/tmondev/221388780914\nhttps://blog.miyam.net/41\nhttps://www.codejava.net/coding/java-code-example-to-export-data-from-database-to-excel-file\nhttp://jexcelapi.sourceforge.net/resources/faq/\nhttps://offbyone.tistory.com/70\nflyweight pattern\n","slug":"java-poi","published":1,"updated":"2020-07-11T04:51:03.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514u001zqlvo6ownb3tv","content":"<p>확인해보<br />\n<a href=\"https://blog.naver.com/tmondev/221388780914\" target=\"_blank\" rel=\"noopener\">https://blog.naver.com/tmondev/221388780914</a><br />\n<a href=\"https://blog.miyam.net/41\" target=\"_blank\" rel=\"noopener\">https://blog.miyam.net/41</a><br />\n<a href=\"https://www.codejava.net/coding/java-code-example-to-export-data-from-database-to-excel-file\" target=\"_blank\" rel=\"noopener\">https://www.codejava.net/coding/java-code-example-to-export-data-from-database-to-excel-file</a><br />\n<a href=\"http://jexcelapi.sourceforge.net/resources/faq/\" target=\"_blank\" rel=\"noopener\">http://jexcelapi.sourceforge.net/resources/faq/</a><br />\n<a href=\"https://offbyone.tistory.com/70\" target=\"_blank\" rel=\"noopener\">https://offbyone.tistory.com/70</a><br />\nflyweight pattern</p>\n","site":{"data":{}},"excerpt":"","more":"<p>확인해보<br />\n<a href=\"https://blog.naver.com/tmondev/221388780914\" target=\"_blank\" rel=\"noopener\">https://blog.naver.com/tmondev/221388780914</a><br />\n<a href=\"https://blog.miyam.net/41\" target=\"_blank\" rel=\"noopener\">https://blog.miyam.net/41</a><br />\n<a href=\"https://www.codejava.net/coding/java-code-example-to-export-data-from-database-to-excel-file\" target=\"_blank\" rel=\"noopener\">https://www.codejava.net/coding/java-code-example-to-export-data-from-database-to-excel-file</a><br />\n<a href=\"http://jexcelapi.sourceforge.net/resources/faq/\" target=\"_blank\" rel=\"noopener\">http://jexcelapi.sourceforge.net/resources/faq/</a><br />\n<a href=\"https://offbyone.tistory.com/70\" target=\"_blank\" rel=\"noopener\">https://offbyone.tistory.com/70</a><br />\nflyweight pattern</p>\n"},{"title":"java-stream-function-interface","date":"2020-02-19T12:41:18.000Z","_content":"\n| 함수형 인터페이스 | Descriptor | Method명| \n| ------------ | ----------- | ------ |\n| Predicate<T> | T -> boolean| test() |\n| Consumer<T>  | T -> void   | accept()|\n| Supplier<T>  | () -> T     | accept()|\n| Function<T,R> | T -> R     | apply() |\n| UnaryOperator<T> | T -> T  | identity()|","source":"_posts/java-stream-function-interface.md","raw":"---\ntitle: java-stream-function-interface\ndate: 2020-02-19 21:41:18\ntags:\n---\n\n| 함수형 인터페이스 | Descriptor | Method명| \n| ------------ | ----------- | ------ |\n| Predicate<T> | T -> boolean| test() |\n| Consumer<T>  | T -> void   | accept()|\n| Supplier<T>  | () -> T     | accept()|\n| Function<T,R> | T -> R     | apply() |\n| UnaryOperator<T> | T -> T  | identity()|","slug":"java-stream-function-interface","published":1,"updated":"2020-07-11T04:51:03.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514w0020qlvoaqsxduxd","content":"<table>\n<thead>\n<tr>\n<th>함수형 인터페이스</th>\n<th>Descriptor</th>\n<th>Method명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Predicate<T></td>\n<td>T -&gt; boolean</td>\n<td>test()</td>\n</tr>\n<tr>\n<td>Consumer<T></td>\n<td>T -&gt; void</td>\n<td>accept()</td>\n</tr>\n<tr>\n<td>Supplier<T></td>\n<td>() -&gt; T</td>\n<td>accept()</td>\n</tr>\n<tr>\n<td>Function&lt;T,R&gt;</td>\n<td>T -&gt; R</td>\n<td>apply()</td>\n</tr>\n<tr>\n<td>UnaryOperator<T></td>\n<td>T -&gt; T</td>\n<td>identity()</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>함수형 인터페이스</th>\n<th>Descriptor</th>\n<th>Method명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Predicate<T></td>\n<td>T -&gt; boolean</td>\n<td>test()</td>\n</tr>\n<tr>\n<td>Consumer<T></td>\n<td>T -&gt; void</td>\n<td>accept()</td>\n</tr>\n<tr>\n<td>Supplier<T></td>\n<td>() -&gt; T</td>\n<td>accept()</td>\n</tr>\n<tr>\n<td>Function&lt;T,R&gt;</td>\n<td>T -&gt; R</td>\n<td>apply()</td>\n</tr>\n<tr>\n<td>UnaryOperator<T></td>\n<td>T -&gt; T</td>\n<td>identity()</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"java-stream-parallel","date":"2020-02-19T12:12:14.000Z","_content":"Java 8의 변경 사항중 하나인 lambda를 효과적으로 사용할 수 있도록 collection들은 stream을 제공한다.\nstream interface는 collection을 파이프식으로 처리 가능하도록 고차함수로 그 구조를 추상화 했다.\n\n스트림을 사용하면서, 반복적인 형번환 소스코드를 간편하게 처리 할 수 있게 되었고, 가독성 또한 높아졌다. 만\n또한 병렬연산을 쉽게 지원할 수 있게 도와주니 매력적으로 보인다.\n\n하지만 Thread Pool을 직접 지정하는 이전 소스코드에 비해 Java 내부에 존재하는 공유  CommonPorkJoinPool 을 사용하기 때문에\n여러개의 Thread가 일을 수행하는 Web Project의 경우에는 공유 Thread Pool의 Thread가 모자랄수 있다.\nJava는 내부적으로 Parallel Stream이 CommonPorkJoinPool을 가지고 있고 내부 Thread의 수를 해당 머신의 프로세서의 개수로 처음에 만들어 시작한다.\n\n그래서 Property로 Thread의 수를 지정하거나 ForkJoinPool을 명시적으로 사용해 parallelStream을 처리할 수 있게 할 수 있다.\n\n1) Property 설정\n```java\nSystem.setProperty(\"java.util.concurrent.ForkJoinPool.common.parallelism\",\"6\");\n```\n\n2) 명시적 ForkJoinPool 사용\n```java\nForkJoinPool forkjoinPool = new ForkJoinPool(5);\nforkjoinPool.submit(() -> {\n\tlist.parallelStream().forEach(index -> {\n\t\tSystem.out.printIn(\"Thread : \" + Thread.currentThread().getName()\n             + \", index + \", \" + new Date());\n\t\ttry{\n\t\t\tThread.sleep(500);\n\t\t} catch (InterruptedException e){\n\t\t}\n\t});\n}).get();\n```\n\nForkJoinPool 생성자에 Thread 개수를 지정해서 사용할 수 있다.\n\nForkJoinPool\n![](/images/java/stream/fork_join.jpg)\n\n기본적으로는 ExecutorService의 구현체이지만,  다른 점은 각 thread들이 개별 큐를 가지게 되며, \n다음 그림의 B처럼 아무런 task가 없으면 A의 task를 가져와 처리하게 됨으로써 \nCPU 자원을 효율적으로 사용할 수 있게 된다.\n\n![](/images/java/stream/fork_join_queue.jpg)\n\nForkJoinPool의 특성상 나누어지는 Job은 균등하게 처리가 되어야 한다.\nSpliterator의 trySplit()을 사용해 작업을 분할 하는데 균등하지 않으면 순차적으로 실행하는 것보다 비효율적일 수 있다.\n```java\npublic Spliterator<T> trySplit() {\n    int lo = index, mid = (lo + fence) >>> 1;\n    return (lo >= mid)\n           ? null\n           : new ArraySpliterator<>(array,\n                                    lo, index = mid,\n                                    characteristics);\n}\n```\n\n또한, 병렬로 처리되는 작업이 독립적이지 않다면, 수행 성능에 영향이 있을 수 있다.\nstream의 중간 단계 연산 중 sorted(), distinct()와 같은 작업을 수행하는 경우에는 \n내부적으로 상태에 대한 변수를 각 작업들이 공유(synchronized)하게 되어 있다. \n이럴때 순차적으로 실행하는 경우가 더 효과적일 수 있다.\n\n참고\nhttp://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html ","source":"_posts/java-stream-parallel.md","raw":"---\ntitle: java-stream-parallel\ndate: 2020-02-19 21:12:14\ntags:\n---\nJava 8의 변경 사항중 하나인 lambda를 효과적으로 사용할 수 있도록 collection들은 stream을 제공한다.\nstream interface는 collection을 파이프식으로 처리 가능하도록 고차함수로 그 구조를 추상화 했다.\n\n스트림을 사용하면서, 반복적인 형번환 소스코드를 간편하게 처리 할 수 있게 되었고, 가독성 또한 높아졌다. 만\n또한 병렬연산을 쉽게 지원할 수 있게 도와주니 매력적으로 보인다.\n\n하지만 Thread Pool을 직접 지정하는 이전 소스코드에 비해 Java 내부에 존재하는 공유  CommonPorkJoinPool 을 사용하기 때문에\n여러개의 Thread가 일을 수행하는 Web Project의 경우에는 공유 Thread Pool의 Thread가 모자랄수 있다.\nJava는 내부적으로 Parallel Stream이 CommonPorkJoinPool을 가지고 있고 내부 Thread의 수를 해당 머신의 프로세서의 개수로 처음에 만들어 시작한다.\n\n그래서 Property로 Thread의 수를 지정하거나 ForkJoinPool을 명시적으로 사용해 parallelStream을 처리할 수 있게 할 수 있다.\n\n1) Property 설정\n```java\nSystem.setProperty(\"java.util.concurrent.ForkJoinPool.common.parallelism\",\"6\");\n```\n\n2) 명시적 ForkJoinPool 사용\n```java\nForkJoinPool forkjoinPool = new ForkJoinPool(5);\nforkjoinPool.submit(() -> {\n\tlist.parallelStream().forEach(index -> {\n\t\tSystem.out.printIn(\"Thread : \" + Thread.currentThread().getName()\n             + \", index + \", \" + new Date());\n\t\ttry{\n\t\t\tThread.sleep(500);\n\t\t} catch (InterruptedException e){\n\t\t}\n\t});\n}).get();\n```\n\nForkJoinPool 생성자에 Thread 개수를 지정해서 사용할 수 있다.\n\nForkJoinPool\n![](/images/java/stream/fork_join.jpg)\n\n기본적으로는 ExecutorService의 구현체이지만,  다른 점은 각 thread들이 개별 큐를 가지게 되며, \n다음 그림의 B처럼 아무런 task가 없으면 A의 task를 가져와 처리하게 됨으로써 \nCPU 자원을 효율적으로 사용할 수 있게 된다.\n\n![](/images/java/stream/fork_join_queue.jpg)\n\nForkJoinPool의 특성상 나누어지는 Job은 균등하게 처리가 되어야 한다.\nSpliterator의 trySplit()을 사용해 작업을 분할 하는데 균등하지 않으면 순차적으로 실행하는 것보다 비효율적일 수 있다.\n```java\npublic Spliterator<T> trySplit() {\n    int lo = index, mid = (lo + fence) >>> 1;\n    return (lo >= mid)\n           ? null\n           : new ArraySpliterator<>(array,\n                                    lo, index = mid,\n                                    characteristics);\n}\n```\n\n또한, 병렬로 처리되는 작업이 독립적이지 않다면, 수행 성능에 영향이 있을 수 있다.\nstream의 중간 단계 연산 중 sorted(), distinct()와 같은 작업을 수행하는 경우에는 \n내부적으로 상태에 대한 변수를 각 작업들이 공유(synchronized)하게 되어 있다. \n이럴때 순차적으로 실행하는 경우가 더 효과적일 수 있다.\n\n참고\nhttp://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html ","slug":"java-stream-parallel","published":1,"updated":"2020-07-11T04:51:03.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514y0025qlvo2t51cgpv","content":"<p>Java 8의 변경 사항중 하나인 lambda를 효과적으로 사용할 수 있도록 collection들은 stream을 제공한다.<br />\nstream interface는 collection을 파이프식으로 처리 가능하도록 고차함수로 그 구조를 추상화 했다.</p>\n<p>스트림을 사용하면서, 반복적인 형번환 소스코드를 간편하게 처리 할 수 있게 되었고, 가독성 또한 높아졌다. 만<br />\n또한 병렬연산을 쉽게 지원할 수 있게 도와주니 매력적으로 보인다.</p>\n<p>하지만 Thread Pool을 직접 지정하는 이전 소스코드에 비해 Java 내부에 존재하는 공유  CommonPorkJoinPool 을 사용하기 때문에<br />\n여러개의 Thread가 일을 수행하는 Web Project의 경우에는 공유 Thread Pool의 Thread가 모자랄수 있다.<br />\nJava는 내부적으로 Parallel Stream이 CommonPorkJoinPool을 가지고 있고 내부 Thread의 수를 해당 머신의 프로세서의 개수로 처음에 만들어 시작한다.</p>\n<p>그래서 Property로 Thread의 수를 지정하거나 ForkJoinPool을 명시적으로 사용해 parallelStream을 처리할 수 있게 할 수 있다.</p>\n<ol>\n<li>Property 설정</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.setProperty(<span class=\"string\">\"java.util.concurrent.ForkJoinPool.common.parallelism\"</span>,<span class=\"string\">\"6\"</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>명시적 ForkJoinPool 사용</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ForkJoinPool forkjoinPool = <span class=\"keyword\">new</span> ForkJoinPool(<span class=\"number\">5</span>);</span><br><span class=\"line\">forkjoinPool.submit(() -&gt; &#123;</span><br><span class=\"line\">\tlist.parallelStream().forEach(index -&gt; &#123;</span><br><span class=\"line\">\t\tSystem.out.printIn(<span class=\"string\">\"Thread : \"</span> + Thread.currentThread().getName()</span><br><span class=\"line\">             + <span class=\"string\">\", index + \"</span>, <span class=\"string\">\" + new Date());</span></span><br><span class=\"line\"><span class=\"string\">\t\ttry&#123;</span></span><br><span class=\"line\"><span class=\"string\">\t\t\tThread.sleep(500);</span></span><br><span class=\"line\"><span class=\"string\">\t\t&#125; catch (InterruptedException e)&#123;</span></span><br><span class=\"line\"><span class=\"string\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"string\">\t&#125;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;).get();</span></span><br></pre></td></tr></table></figure>\n<p>ForkJoinPool 생성자에 Thread 개수를 지정해서 사용할 수 있다.</p>\n<p>ForkJoinPool<br />\n<img src=\"/images/java/stream/fork_join.jpg\" alt=\"\" /></p>\n<p>기본적으로는 ExecutorService의 구현체이지만,  다른 점은 각 thread들이 개별 큐를 가지게 되며,<br />\n다음 그림의 B처럼 아무런 task가 없으면 A의 task를 가져와 처리하게 됨으로써<br />\nCPU 자원을 효율적으로 사용할 수 있게 된다.</p>\n<p><img src=\"/images/java/stream/fork_join_queue.jpg\" alt=\"\" /></p>\n<p>ForkJoinPool의 특성상 나누어지는 Job은 균등하게 처리가 되어야 한다.<br />\nSpliterator의 trySplit()을 사용해 작업을 분할 하는데 균등하지 않으면 순차적으로 실행하는 것보다 비효율적일 수 있다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Spliterator&lt;T&gt; <span class=\"title\">trySplit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lo = index, mid = (lo + fence) &gt;&gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (lo &gt;= mid)</span><br><span class=\"line\">           ? <span class=\"keyword\">null</span></span><br><span class=\"line\">           : <span class=\"keyword\">new</span> ArraySpliterator&lt;&gt;(array,</span><br><span class=\"line\">                                    lo, index = mid,</span><br><span class=\"line\">                                    characteristics);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>또한, 병렬로 처리되는 작업이 독립적이지 않다면, 수행 성능에 영향이 있을 수 있다.<br />\nstream의 중간 단계 연산 중 sorted(), distinct()와 같은 작업을 수행하는 경우에는<br />\n내부적으로 상태에 대한 변수를 각 작업들이 공유(synchronized)하게 되어 있다.<br />\n이럴때 순차적으로 실행하는 경우가 더 효과적일 수 있다.</p>\n<p>참고<br />\n<a href=\"http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html\" target=\"_blank\" rel=\"noopener\">http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Java 8의 변경 사항중 하나인 lambda를 효과적으로 사용할 수 있도록 collection들은 stream을 제공한다.<br />\nstream interface는 collection을 파이프식으로 처리 가능하도록 고차함수로 그 구조를 추상화 했다.</p>\n<p>스트림을 사용하면서, 반복적인 형번환 소스코드를 간편하게 처리 할 수 있게 되었고, 가독성 또한 높아졌다. 만<br />\n또한 병렬연산을 쉽게 지원할 수 있게 도와주니 매력적으로 보인다.</p>\n<p>하지만 Thread Pool을 직접 지정하는 이전 소스코드에 비해 Java 내부에 존재하는 공유  CommonPorkJoinPool 을 사용하기 때문에<br />\n여러개의 Thread가 일을 수행하는 Web Project의 경우에는 공유 Thread Pool의 Thread가 모자랄수 있다.<br />\nJava는 내부적으로 Parallel Stream이 CommonPorkJoinPool을 가지고 있고 내부 Thread의 수를 해당 머신의 프로세서의 개수로 처음에 만들어 시작한다.</p>\n<p>그래서 Property로 Thread의 수를 지정하거나 ForkJoinPool을 명시적으로 사용해 parallelStream을 처리할 수 있게 할 수 있다.</p>\n<ol>\n<li>Property 설정</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.setProperty(<span class=\"string\">\"java.util.concurrent.ForkJoinPool.common.parallelism\"</span>,<span class=\"string\">\"6\"</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>명시적 ForkJoinPool 사용</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ForkJoinPool forkjoinPool = <span class=\"keyword\">new</span> ForkJoinPool(<span class=\"number\">5</span>);</span><br><span class=\"line\">forkjoinPool.submit(() -&gt; &#123;</span><br><span class=\"line\">\tlist.parallelStream().forEach(index -&gt; &#123;</span><br><span class=\"line\">\t\tSystem.out.printIn(<span class=\"string\">\"Thread : \"</span> + Thread.currentThread().getName()</span><br><span class=\"line\">             + <span class=\"string\">\", index + \"</span>, <span class=\"string\">\" + new Date());</span></span><br><span class=\"line\"><span class=\"string\">\t\ttry&#123;</span></span><br><span class=\"line\"><span class=\"string\">\t\t\tThread.sleep(500);</span></span><br><span class=\"line\"><span class=\"string\">\t\t&#125; catch (InterruptedException e)&#123;</span></span><br><span class=\"line\"><span class=\"string\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"string\">\t&#125;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;).get();</span></span><br></pre></td></tr></table></figure>\n<p>ForkJoinPool 생성자에 Thread 개수를 지정해서 사용할 수 있다.</p>\n<p>ForkJoinPool<br />\n<img src=\"/images/java/stream/fork_join.jpg\" alt=\"\" /></p>\n<p>기본적으로는 ExecutorService의 구현체이지만,  다른 점은 각 thread들이 개별 큐를 가지게 되며,<br />\n다음 그림의 B처럼 아무런 task가 없으면 A의 task를 가져와 처리하게 됨으로써<br />\nCPU 자원을 효율적으로 사용할 수 있게 된다.</p>\n<p><img src=\"/images/java/stream/fork_join_queue.jpg\" alt=\"\" /></p>\n<p>ForkJoinPool의 특성상 나누어지는 Job은 균등하게 처리가 되어야 한다.<br />\nSpliterator의 trySplit()을 사용해 작업을 분할 하는데 균등하지 않으면 순차적으로 실행하는 것보다 비효율적일 수 있다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Spliterator&lt;T&gt; <span class=\"title\">trySplit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lo = index, mid = (lo + fence) &gt;&gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (lo &gt;= mid)</span><br><span class=\"line\">           ? <span class=\"keyword\">null</span></span><br><span class=\"line\">           : <span class=\"keyword\">new</span> ArraySpliterator&lt;&gt;(array,</span><br><span class=\"line\">                                    lo, index = mid,</span><br><span class=\"line\">                                    characteristics);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>또한, 병렬로 처리되는 작업이 독립적이지 않다면, 수행 성능에 영향이 있을 수 있다.<br />\nstream의 중간 단계 연산 중 sorted(), distinct()와 같은 작업을 수행하는 경우에는<br />\n내부적으로 상태에 대한 변수를 각 작업들이 공유(synchronized)하게 되어 있다.<br />\n이럴때 순차적으로 실행하는 경우가 더 효과적일 수 있다.</p>\n<p>참고<br />\n<a href=\"http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html\" target=\"_blank\" rel=\"noopener\">http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html</a></p>\n"},{"title":"java-performance-gc-start","date":"2020-08-16T05:20:14.000Z","_content":"\n- 참조\nhttps://docs.oracle.com/en/java/javase/14/gctuning/garbage-first-g1-garbage-collector1.html#GUID-ED3AB6D3-FD9B-4447-9EDF-983ED2F7A573\n\n### GC의 기본 동작\n- 미사용 객체 찾기\n- 가용 메모리 생성\n- 힙 압축\n\n### G1 컬렉터 (Garbage First Collector)\n- 미사용 객체를 훑어보는 동안 어플리케이션 스레드를 멈추지 않고도 처리한다. (Concurrent Collector)\n- low pause collector\n- 4GB 이상의 큰 힙을 처리하도록 설계\n- 힙을 여러 개의 영역으로 나누지만 여전히 제네레이션 기반의 컬렉터이다.\n- 이 영역의 일부는 영 제네레이션을 구성하고, 영 제네레이션은 여전히 모든 어플리케이션 스레드를 멈추고 \n  올드 제네레이션이나 서바이버 스페이스로 살아 있는 객체 전부를 이동하면서 수집된다.\n- Background thread 로 올드 제네레이션을 처리하며, 이는 여러 영역으로 나뉘기 때문에 한 영역에서 다른 영역으로 복사해 올드 제네레이션에서\n  객체 삭제가 가능하며, 일반적인 처리를 하는 동안 힙을 부분적으로 압축이 가능하다.\n   \n   \n### GC 설정\n- 힙 크기 정하기\n    - 힙이 너무 작다면 프로그램은 GC의 수행 횟수가 많아져 수행시간이 늘어날 것이고, 힙이 매우 크다면 한번의 GC실행에 많은 시간을 소요할 것이다.\n    - 실제 기동되는 것보다 더 큰 힙을 사용할 경우 OS는 가상 메모리를 사용한다. 이는 memory swapping 혹은 paging이라는 방식으로 이를 관리한다.\n    - OS에서 많은 어플리케이션이 실행 되고 있을 경우에는 효과적(대부분의 어플리케이션은 동시에 활성화 되지 않는다고 가정했을때)이다 \n    - 자바 어플리케이션 1개가 물리적인 메모리 사용 공간을 넘어 힙을 사용할 경우에는 GC시 디스크에서 RAM으로 데이터를 swap하면서 심한 성능상의 불이익을 초래한다.\n    - 명시적으로 최대 크기를 설정하더라도 힙의 크기가 자동으로 조정된다. 힙은 디폴트 초기 크기로 시작하고, JVM은 GC 알고리즘의 성능 목표를 만족시키기 위해 힙을 늘릴 것이다.\n    - 필요로 하는 것보다 더 큰 힙을 명시한다고 해서 반드시 메모리상 불이익을 받는 것은 아니다.\n    - java 7 permgen, java 8 metaspace\n- 병렬성 제어하기\n    - G1의 모든 어플리케이션 스레드 중간단계의 GC동작은 어플리케이션 스레드가 실행되는 걸 막기 떄문에 JVM은 중지시간을 최소화 하기 위해 가능한 CPU 자원을 많이 사용하고자 한다.\n    - 이건 기본적으로 JVM이 한 머신 내의 각 CPU당 스레드 한개씩 8개까지 실행한다는 의미이다. 임계치에 다다르면 JVM은 CPU 한 개의 5/8마다 신규 스레드 한개만 추가한다.\n    - 8개 이상의 CPU를 갖고 있는 머신 한 개에서 스레드의 총 개수는 다음과 같다.\n        - ParallelGCThreads = 8 + ((N - 8) * 5 /8)\n- 적응 크기 조정 ","source":"_posts/java-performance-gc-start.md","raw":"---\ntitle: java-performance-gc-start\ndate: 2020-08-16 14:20:14\ntags:\n---\n\n- 참조\nhttps://docs.oracle.com/en/java/javase/14/gctuning/garbage-first-g1-garbage-collector1.html#GUID-ED3AB6D3-FD9B-4447-9EDF-983ED2F7A573\n\n### GC의 기본 동작\n- 미사용 객체 찾기\n- 가용 메모리 생성\n- 힙 압축\n\n### G1 컬렉터 (Garbage First Collector)\n- 미사용 객체를 훑어보는 동안 어플리케이션 스레드를 멈추지 않고도 처리한다. (Concurrent Collector)\n- low pause collector\n- 4GB 이상의 큰 힙을 처리하도록 설계\n- 힙을 여러 개의 영역으로 나누지만 여전히 제네레이션 기반의 컬렉터이다.\n- 이 영역의 일부는 영 제네레이션을 구성하고, 영 제네레이션은 여전히 모든 어플리케이션 스레드를 멈추고 \n  올드 제네레이션이나 서바이버 스페이스로 살아 있는 객체 전부를 이동하면서 수집된다.\n- Background thread 로 올드 제네레이션을 처리하며, 이는 여러 영역으로 나뉘기 때문에 한 영역에서 다른 영역으로 복사해 올드 제네레이션에서\n  객체 삭제가 가능하며, 일반적인 처리를 하는 동안 힙을 부분적으로 압축이 가능하다.\n   \n   \n### GC 설정\n- 힙 크기 정하기\n    - 힙이 너무 작다면 프로그램은 GC의 수행 횟수가 많아져 수행시간이 늘어날 것이고, 힙이 매우 크다면 한번의 GC실행에 많은 시간을 소요할 것이다.\n    - 실제 기동되는 것보다 더 큰 힙을 사용할 경우 OS는 가상 메모리를 사용한다. 이는 memory swapping 혹은 paging이라는 방식으로 이를 관리한다.\n    - OS에서 많은 어플리케이션이 실행 되고 있을 경우에는 효과적(대부분의 어플리케이션은 동시에 활성화 되지 않는다고 가정했을때)이다 \n    - 자바 어플리케이션 1개가 물리적인 메모리 사용 공간을 넘어 힙을 사용할 경우에는 GC시 디스크에서 RAM으로 데이터를 swap하면서 심한 성능상의 불이익을 초래한다.\n    - 명시적으로 최대 크기를 설정하더라도 힙의 크기가 자동으로 조정된다. 힙은 디폴트 초기 크기로 시작하고, JVM은 GC 알고리즘의 성능 목표를 만족시키기 위해 힙을 늘릴 것이다.\n    - 필요로 하는 것보다 더 큰 힙을 명시한다고 해서 반드시 메모리상 불이익을 받는 것은 아니다.\n    - java 7 permgen, java 8 metaspace\n- 병렬성 제어하기\n    - G1의 모든 어플리케이션 스레드 중간단계의 GC동작은 어플리케이션 스레드가 실행되는 걸 막기 떄문에 JVM은 중지시간을 최소화 하기 위해 가능한 CPU 자원을 많이 사용하고자 한다.\n    - 이건 기본적으로 JVM이 한 머신 내의 각 CPU당 스레드 한개씩 8개까지 실행한다는 의미이다. 임계치에 다다르면 JVM은 CPU 한 개의 5/8마다 신규 스레드 한개만 추가한다.\n    - 8개 이상의 CPU를 갖고 있는 머신 한 개에서 스레드의 총 개수는 다음과 같다.\n        - ParallelGCThreads = 8 + ((N - 8) * 5 /8)\n- 적응 크기 조정 ","slug":"java-performance-gc-start","published":1,"updated":"2020-08-16T05:48:26.838Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo514z0027qlvo4d9leko4","content":"<ul>\n<li>참조<br />\n<a href=\"https://docs.oracle.com/en/java/javase/14/gctuning/garbage-first-g1-garbage-collector1.html#GUID-ED3AB6D3-FD9B-4447-9EDF-983ED2F7A573\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/en/java/javase/14/gctuning/garbage-first-g1-garbage-collector1.html#GUID-ED3AB6D3-FD9B-4447-9EDF-983ED2F7A573</a></li>\n</ul>\n<h3 id=\"gc의-기본-동작\"><a class=\"markdownIt-Anchor\" href=\"#gc의-기본-동작\"></a> GC의 기본 동작</h3>\n<ul>\n<li>미사용 객체 찾기</li>\n<li>가용 메모리 생성</li>\n<li>힙 압축</li>\n</ul>\n<h3 id=\"g1-컬렉터-garbage-first-collector\"><a class=\"markdownIt-Anchor\" href=\"#g1-컬렉터-garbage-first-collector\"></a> G1 컬렉터 (Garbage First Collector)</h3>\n<ul>\n<li>미사용 객체를 훑어보는 동안 어플리케이션 스레드를 멈추지 않고도 처리한다. (Concurrent Collector)</li>\n<li>low pause collector</li>\n<li>4GB 이상의 큰 힙을 처리하도록 설계</li>\n<li>힙을 여러 개의 영역으로 나누지만 여전히 제네레이션 기반의 컬렉터이다.</li>\n<li>이 영역의 일부는 영 제네레이션을 구성하고, 영 제네레이션은 여전히 모든 어플리케이션 스레드를 멈추고<br />\n올드 제네레이션이나 서바이버 스페이스로 살아 있는 객체 전부를 이동하면서 수집된다.</li>\n<li>Background thread 로 올드 제네레이션을 처리하며, 이는 여러 영역으로 나뉘기 때문에 한 영역에서 다른 영역으로 복사해 올드 제네레이션에서<br />\n객체 삭제가 가능하며, 일반적인 처리를 하는 동안 힙을 부분적으로 압축이 가능하다.</li>\n</ul>\n<h3 id=\"gc-설정\"><a class=\"markdownIt-Anchor\" href=\"#gc-설정\"></a> GC 설정</h3>\n<ul>\n<li>힙 크기 정하기\n<ul>\n<li>힙이 너무 작다면 프로그램은 GC의 수행 횟수가 많아져 수행시간이 늘어날 것이고, 힙이 매우 크다면 한번의 GC실행에 많은 시간을 소요할 것이다.</li>\n<li>실제 기동되는 것보다 더 큰 힙을 사용할 경우 OS는 가상 메모리를 사용한다. 이는 memory swapping 혹은 paging이라는 방식으로 이를 관리한다.</li>\n<li>OS에서 많은 어플리케이션이 실행 되고 있을 경우에는 효과적(대부분의 어플리케이션은 동시에 활성화 되지 않는다고 가정했을때)이다</li>\n<li>자바 어플리케이션 1개가 물리적인 메모리 사용 공간을 넘어 힙을 사용할 경우에는 GC시 디스크에서 RAM으로 데이터를 swap하면서 심한 성능상의 불이익을 초래한다.</li>\n<li>명시적으로 최대 크기를 설정하더라도 힙의 크기가 자동으로 조정된다. 힙은 디폴트 초기 크기로 시작하고, JVM은 GC 알고리즘의 성능 목표를 만족시키기 위해 힙을 늘릴 것이다.</li>\n<li>필요로 하는 것보다 더 큰 힙을 명시한다고 해서 반드시 메모리상 불이익을 받는 것은 아니다.</li>\n<li>java 7 permgen, java 8 metaspace</li>\n</ul>\n</li>\n<li>병렬성 제어하기\n<ul>\n<li>G1의 모든 어플리케이션 스레드 중간단계의 GC동작은 어플리케이션 스레드가 실행되는 걸 막기 떄문에 JVM은 중지시간을 최소화 하기 위해 가능한 CPU 자원을 많이 사용하고자 한다.</li>\n<li>이건 기본적으로 JVM이 한 머신 내의 각 CPU당 스레드 한개씩 8개까지 실행한다는 의미이다. 임계치에 다다르면 JVM은 CPU 한 개의 5/8마다 신규 스레드 한개만 추가한다.</li>\n<li>8개 이상의 CPU를 갖고 있는 머신 한 개에서 스레드의 총 개수는 다음과 같다.\n<ul>\n<li>ParallelGCThreads = 8 + ((N - 8) * 5 /8)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>적응 크기 조정</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>참조<br />\n<a href=\"https://docs.oracle.com/en/java/javase/14/gctuning/garbage-first-g1-garbage-collector1.html#GUID-ED3AB6D3-FD9B-4447-9EDF-983ED2F7A573\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/en/java/javase/14/gctuning/garbage-first-g1-garbage-collector1.html#GUID-ED3AB6D3-FD9B-4447-9EDF-983ED2F7A573</a></li>\n</ul>\n<h3 id=\"gc의-기본-동작\"><a class=\"markdownIt-Anchor\" href=\"#gc의-기본-동작\"></a> GC의 기본 동작</h3>\n<ul>\n<li>미사용 객체 찾기</li>\n<li>가용 메모리 생성</li>\n<li>힙 압축</li>\n</ul>\n<h3 id=\"g1-컬렉터-garbage-first-collector\"><a class=\"markdownIt-Anchor\" href=\"#g1-컬렉터-garbage-first-collector\"></a> G1 컬렉터 (Garbage First Collector)</h3>\n<ul>\n<li>미사용 객체를 훑어보는 동안 어플리케이션 스레드를 멈추지 않고도 처리한다. (Concurrent Collector)</li>\n<li>low pause collector</li>\n<li>4GB 이상의 큰 힙을 처리하도록 설계</li>\n<li>힙을 여러 개의 영역으로 나누지만 여전히 제네레이션 기반의 컬렉터이다.</li>\n<li>이 영역의 일부는 영 제네레이션을 구성하고, 영 제네레이션은 여전히 모든 어플리케이션 스레드를 멈추고<br />\n올드 제네레이션이나 서바이버 스페이스로 살아 있는 객체 전부를 이동하면서 수집된다.</li>\n<li>Background thread 로 올드 제네레이션을 처리하며, 이는 여러 영역으로 나뉘기 때문에 한 영역에서 다른 영역으로 복사해 올드 제네레이션에서<br />\n객체 삭제가 가능하며, 일반적인 처리를 하는 동안 힙을 부분적으로 압축이 가능하다.</li>\n</ul>\n<h3 id=\"gc-설정\"><a class=\"markdownIt-Anchor\" href=\"#gc-설정\"></a> GC 설정</h3>\n<ul>\n<li>힙 크기 정하기\n<ul>\n<li>힙이 너무 작다면 프로그램은 GC의 수행 횟수가 많아져 수행시간이 늘어날 것이고, 힙이 매우 크다면 한번의 GC실행에 많은 시간을 소요할 것이다.</li>\n<li>실제 기동되는 것보다 더 큰 힙을 사용할 경우 OS는 가상 메모리를 사용한다. 이는 memory swapping 혹은 paging이라는 방식으로 이를 관리한다.</li>\n<li>OS에서 많은 어플리케이션이 실행 되고 있을 경우에는 효과적(대부분의 어플리케이션은 동시에 활성화 되지 않는다고 가정했을때)이다</li>\n<li>자바 어플리케이션 1개가 물리적인 메모리 사용 공간을 넘어 힙을 사용할 경우에는 GC시 디스크에서 RAM으로 데이터를 swap하면서 심한 성능상의 불이익을 초래한다.</li>\n<li>명시적으로 최대 크기를 설정하더라도 힙의 크기가 자동으로 조정된다. 힙은 디폴트 초기 크기로 시작하고, JVM은 GC 알고리즘의 성능 목표를 만족시키기 위해 힙을 늘릴 것이다.</li>\n<li>필요로 하는 것보다 더 큰 힙을 명시한다고 해서 반드시 메모리상 불이익을 받는 것은 아니다.</li>\n<li>java 7 permgen, java 8 metaspace</li>\n</ul>\n</li>\n<li>병렬성 제어하기\n<ul>\n<li>G1의 모든 어플리케이션 스레드 중간단계의 GC동작은 어플리케이션 스레드가 실행되는 걸 막기 떄문에 JVM은 중지시간을 최소화 하기 위해 가능한 CPU 자원을 많이 사용하고자 한다.</li>\n<li>이건 기본적으로 JVM이 한 머신 내의 각 CPU당 스레드 한개씩 8개까지 실행한다는 의미이다. 임계치에 다다르면 JVM은 CPU 한 개의 5/8마다 신규 스레드 한개만 추가한다.</li>\n<li>8개 이상의 CPU를 갖고 있는 머신 한 개에서 스레드의 총 개수는 다음과 같다.\n<ul>\n<li>ParallelGCThreads = 8 + ((N - 8) * 5 /8)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>적응 크기 조정</li>\n</ul>\n"},{"title":"java-stream","date":"2020-02-19T12:01:08.000Z","_content":"\n스트림의 중개 연산(intermediate operation)\n스트림 API에 의해 생성된 초기 스트림은 중개 연산을 통해 또 다른 스트림으로 변환됩니다.\n이러한 중개 연산은 스트림을 전달받아 스트림을 반환하므로, 중개 연산은 연속으로 연결해서 사용할 수 있습니다.\n또한, 스트림의 중개 연산은 필터-맵(filter-map) 기반의 API를 사용함으로 지연(lazy) 연산을 통해 성능을 최적화할 수 있습니다.\n\n1. 스트림 필터링 : filter(), distinct()\n2. 스트림 변환 : map(), flatMap(), boxed()\n3. 스트림 제한 : limit(), skip()\n4. 스트림 정렬 : sorted()\n5. 스트림 연산 결과 확인 : peek()\n6. 스트림 반복 : forEach()\n7. 스트림 매칭 : allMatch() => 전부 만족, anyMatch() => 최소 한개가 조건 만족, noneMatch() => 모두 불만족\n8. 스트림 집계 : sum(), count(), average(), max(), min() / reduce()\npeek의 경우는 특수하게 동작하는데 중간 처리 단계에서 전체 요소를 루핑하고, 추가적 작업을 위해 사용하며 최종 처리 메소드가 호출 되어야만 동작한다.\n이중 스트림을 반복처리하는 forEach()는 최종 처리 메소드로 파이프 라인 마지막에 루핑하여 요소를 하나씩 처리한다.\n최종 처리 메소드 뒤에는 sum() 같은 최종 처리 메소드가 호출되면 안된다.","source":"_posts/java-stream.md","raw":"---\ntitle: java-stream\ndate: 2020-02-19 21:01:08\ntags:\n---\n\n스트림의 중개 연산(intermediate operation)\n스트림 API에 의해 생성된 초기 스트림은 중개 연산을 통해 또 다른 스트림으로 변환됩니다.\n이러한 중개 연산은 스트림을 전달받아 스트림을 반환하므로, 중개 연산은 연속으로 연결해서 사용할 수 있습니다.\n또한, 스트림의 중개 연산은 필터-맵(filter-map) 기반의 API를 사용함으로 지연(lazy) 연산을 통해 성능을 최적화할 수 있습니다.\n\n1. 스트림 필터링 : filter(), distinct()\n2. 스트림 변환 : map(), flatMap(), boxed()\n3. 스트림 제한 : limit(), skip()\n4. 스트림 정렬 : sorted()\n5. 스트림 연산 결과 확인 : peek()\n6. 스트림 반복 : forEach()\n7. 스트림 매칭 : allMatch() => 전부 만족, anyMatch() => 최소 한개가 조건 만족, noneMatch() => 모두 불만족\n8. 스트림 집계 : sum(), count(), average(), max(), min() / reduce()\npeek의 경우는 특수하게 동작하는데 중간 처리 단계에서 전체 요소를 루핑하고, 추가적 작업을 위해 사용하며 최종 처리 메소드가 호출 되어야만 동작한다.\n이중 스트림을 반복처리하는 forEach()는 최종 처리 메소드로 파이프 라인 마지막에 루핑하여 요소를 하나씩 처리한다.\n최종 처리 메소드 뒤에는 sum() 같은 최종 처리 메소드가 호출되면 안된다.","slug":"java-stream","published":1,"updated":"2020-07-11T04:51:03.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5152002bqlvo107f0lf5","content":"<p>스트림의 중개 연산(intermediate operation)<br />\n스트림 API에 의해 생성된 초기 스트림은 중개 연산을 통해 또 다른 스트림으로 변환됩니다.<br />\n이러한 중개 연산은 스트림을 전달받아 스트림을 반환하므로, 중개 연산은 연속으로 연결해서 사용할 수 있습니다.<br />\n또한, 스트림의 중개 연산은 필터-맵(filter-map) 기반의 API를 사용함으로 지연(lazy) 연산을 통해 성능을 최적화할 수 있습니다.</p>\n<ol>\n<li>스트림 필터링 : filter(), distinct()</li>\n<li>스트림 변환 : map(), flatMap(), boxed()</li>\n<li>스트림 제한 : limit(), skip()</li>\n<li>스트림 정렬 : sorted()</li>\n<li>스트림 연산 결과 확인 : peek()</li>\n<li>스트림 반복 : forEach()</li>\n<li>스트림 매칭 : allMatch() =&gt; 전부 만족, anyMatch() =&gt; 최소 한개가 조건 만족, noneMatch() =&gt; 모두 불만족</li>\n<li>스트림 집계 : sum(), count(), average(), max(), min() / reduce()<br />\npeek의 경우는 특수하게 동작하는데 중간 처리 단계에서 전체 요소를 루핑하고, 추가적 작업을 위해 사용하며 최종 처리 메소드가 호출 되어야만 동작한다.<br />\n이중 스트림을 반복처리하는 forEach()는 최종 처리 메소드로 파이프 라인 마지막에 루핑하여 요소를 하나씩 처리한다.<br />\n최종 처리 메소드 뒤에는 sum() 같은 최종 처리 메소드가 호출되면 안된다.</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>스트림의 중개 연산(intermediate operation)<br />\n스트림 API에 의해 생성된 초기 스트림은 중개 연산을 통해 또 다른 스트림으로 변환됩니다.<br />\n이러한 중개 연산은 스트림을 전달받아 스트림을 반환하므로, 중개 연산은 연속으로 연결해서 사용할 수 있습니다.<br />\n또한, 스트림의 중개 연산은 필터-맵(filter-map) 기반의 API를 사용함으로 지연(lazy) 연산을 통해 성능을 최적화할 수 있습니다.</p>\n<ol>\n<li>스트림 필터링 : filter(), distinct()</li>\n<li>스트림 변환 : map(), flatMap(), boxed()</li>\n<li>스트림 제한 : limit(), skip()</li>\n<li>스트림 정렬 : sorted()</li>\n<li>스트림 연산 결과 확인 : peek()</li>\n<li>스트림 반복 : forEach()</li>\n<li>스트림 매칭 : allMatch() =&gt; 전부 만족, anyMatch() =&gt; 최소 한개가 조건 만족, noneMatch() =&gt; 모두 불만족</li>\n<li>스트림 집계 : sum(), count(), average(), max(), min() / reduce()<br />\npeek의 경우는 특수하게 동작하는데 중간 처리 단계에서 전체 요소를 루핑하고, 추가적 작업을 위해 사용하며 최종 처리 메소드가 호출 되어야만 동작한다.<br />\n이중 스트림을 반복처리하는 forEach()는 최종 처리 메소드로 파이프 라인 마지막에 루핑하여 요소를 하나씩 처리한다.<br />\n최종 처리 메소드 뒤에는 sum() 같은 최종 처리 메소드가 호출되면 안된다.</li>\n</ol>\n"},{"title":"javascript-module-history","date":"2020-04-19T13:53:36.000Z","_content":"https://weblogs.asp.net/dixin/understanding-all-javascript-module-formats-and-tools","source":"_posts/javascript-module-history.md","raw":"---\ntitle: javascript-module-history\ndate: 2020-04-19 22:53:36\ntags:\n---\nhttps://weblogs.asp.net/dixin/understanding-all-javascript-module-formats-and-tools","slug":"javascript-module-history","published":1,"updated":"2020-07-11T04:51:03.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5153002dqlvo4ohy80he","content":"<p><a href=\"https://weblogs.asp.net/dixin/understanding-all-javascript-module-formats-and-tools\" target=\"_blank\" rel=\"noopener\">https://weblogs.asp.net/dixin/understanding-all-javascript-module-formats-and-tools</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://weblogs.asp.net/dixin/understanding-all-javascript-module-formats-and-tools\" target=\"_blank\" rel=\"noopener\">https://weblogs.asp.net/dixin/understanding-all-javascript-module-formats-and-tools</a></p>\n"},{"title":"linux-run-level","date":"2020-06-25T01:23:39.000Z","_content":"#### Linux Run Level\n|런레벨|상태|\n|--|--|\n|0|시스템 중지|\n|1|단일 사용자 모드(복구 모드)|\n|2|NFS 없는 다중 사용자 모드|\n|3|완전한 다중 사용자 모드|\n|4|미사용|\n|5|그래픽 인터페이스 모드|\n|6|시스템 재시작|\n\n- Debian, Ubuntu : Run Level 2\n- RedHat, fedora, CentOS, gentoo : Run Level 3\n","source":"_posts/linux-run-level.md","raw":"---\ntitle: linux-run-level\ndate: 2020-06-25 10:23:39\ntags:\n---\n#### Linux Run Level\n|런레벨|상태|\n|--|--|\n|0|시스템 중지|\n|1|단일 사용자 모드(복구 모드)|\n|2|NFS 없는 다중 사용자 모드|\n|3|완전한 다중 사용자 모드|\n|4|미사용|\n|5|그래픽 인터페이스 모드|\n|6|시스템 재시작|\n\n- Debian, Ubuntu : Run Level 2\n- RedHat, fedora, CentOS, gentoo : Run Level 3\n","slug":"linux-run-level","published":1,"updated":"2020-07-11T04:51:03.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5156002hqlvo0ejqbwxj","content":"<h4 id=\"linux-run-level\"><a class=\"markdownIt-Anchor\" href=\"#linux-run-level\"></a> Linux Run Level</h4>\n<table>\n<thead>\n<tr>\n<th>런레벨</th>\n<th>상태</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>시스템 중지</td>\n</tr>\n<tr>\n<td>1</td>\n<td>단일 사용자 모드(복구 모드)</td>\n</tr>\n<tr>\n<td>2</td>\n<td>NFS 없는 다중 사용자 모드</td>\n</tr>\n<tr>\n<td>3</td>\n<td>완전한 다중 사용자 모드</td>\n</tr>\n<tr>\n<td>4</td>\n<td>미사용</td>\n</tr>\n<tr>\n<td>5</td>\n<td>그래픽 인터페이스 모드</td>\n</tr>\n<tr>\n<td>6</td>\n<td>시스템 재시작</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Debian, Ubuntu : Run Level 2</li>\n<li>RedHat, fedora, CentOS, gentoo : Run Level 3</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"linux-run-level\"><a class=\"markdownIt-Anchor\" href=\"#linux-run-level\"></a> Linux Run Level</h4>\n<table>\n<thead>\n<tr>\n<th>런레벨</th>\n<th>상태</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>시스템 중지</td>\n</tr>\n<tr>\n<td>1</td>\n<td>단일 사용자 모드(복구 모드)</td>\n</tr>\n<tr>\n<td>2</td>\n<td>NFS 없는 다중 사용자 모드</td>\n</tr>\n<tr>\n<td>3</td>\n<td>완전한 다중 사용자 모드</td>\n</tr>\n<tr>\n<td>4</td>\n<td>미사용</td>\n</tr>\n<tr>\n<td>5</td>\n<td>그래픽 인터페이스 모드</td>\n</tr>\n<tr>\n<td>6</td>\n<td>시스템 재시작</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Debian, Ubuntu : Run Level 2</li>\n<li>RedHat, fedora, CentOS, gentoo : Run Level 3</li>\n</ul>\n"},{"title":"linux-command-ls","date":"2020-06-21T23:53:45.000Z","_content":"\n### ls 명령어\n      For each directory that is listed, preface the files with a line\n      'total BLOCKS', where BLOCKS is the total disk allocation for all\n      files in that directory.  The block size currently defaults to 1024\n      bytes, but this can be overridden (*note Block size::).  The BLOCKS\n      computed counts each hard link separately; this is arguably a\n      deficiency.\n \n      The file type is one of the following characters:\n \n      '-'\n           regular file\n      'b'\n           block special file\n      'c'\n           character special file\n      'C'\n           high performance (\"contiguous data\") file\n      'd'\n           directory\n      'D'\n           door (Solaris 2.5 and up)\n      'l'\n           symbolic link\n      'M'\n           off-line (\"migrated\") file (Cray DMF)\n      'n'\n           network special file (HP-UX)\n      'p'\n           FIFO (named pipe)\n      'P'\n           port (Solaris 10 and up)\n      's'\n           socket\n      '?'\n           some other file type\n \n      The file mode bits listed are similar to symbolic mode\n      specifications (*note Symbolic Modes::).  But 'ls' combines\n      multiple bits into the third character of each set of permissions\n      as follows:\n \n      's'\n           If the set-user-ID or set-group-ID bit and the corresponding\n           executable bit are both set.\n \n      'S'\n           If the set-user-ID or set-group-ID bit is set but the\n           corresponding executable bit is not set.\n \n      't'\n           If the restricted deletion flag or sticky bit, and the\n           other-executable bit, are both set.  The restricted deletion\n           flag is another name for the sticky bit.  *Note Mode\n           Structure::.\n \n      'T'\n           If the restricted deletion flag or sticky bit is set but the\n           other-executable bit is not set.\n \n      'x'\n           If the executable bit is set and none of the above apply.\n \n      '-'\n           Otherwise.\n           \n### File Type\n- Regular File \n    - The most common file, which contains data of some form.\n    \n- Directory File\n    - A file contains the names of other files and pointers to information on these files.\n    - Any process that has read permission for a directory file can read contents of the directory, but only the kernel can write directly to a directory file.\n\n- Block Special file\n    - 요청이 장치 드라이버에 의해 처리되며 이러한 유형을 디바이스 파일이라고 한다. \n    - 디바이스 파일은 어떤 드라이버에 의해서 사용되는지 구분하기 위한 연관번호를 가지고 있다.\n    - 블록 특수 파일은 일반 파일과 유사하고 문자 특수 파일은 파이프처럼 행동합니다.\n    \n- Character special file\n    - A type of file providing unbuffered I/O access in variable-sized units to devices.\n    - 이 장치파일은 데이터를 쓰거나 읽는게 즉시 일어나는 파이프나 시리얼 포트처럼 행동한다.\n    \n- FIFO\n    - Process Inter communication \n\n- Socket\n    - 네트워크의 입출력을 담당하는 API\n    \n- Symbolic link\n    - A Type of file that points to another file \n    - 다른 파일을 가리키는 타입의 파일\n    \n![](/images/linux/count_of_filetype.png)\n    ","source":"_posts/linux-command-ls.md","raw":"---\ntitle: linux-command-ls\ndate: 2020-06-22 08:53:45\ntags:\n---\n\n### ls 명령어\n      For each directory that is listed, preface the files with a line\n      'total BLOCKS', where BLOCKS is the total disk allocation for all\n      files in that directory.  The block size currently defaults to 1024\n      bytes, but this can be overridden (*note Block size::).  The BLOCKS\n      computed counts each hard link separately; this is arguably a\n      deficiency.\n \n      The file type is one of the following characters:\n \n      '-'\n           regular file\n      'b'\n           block special file\n      'c'\n           character special file\n      'C'\n           high performance (\"contiguous data\") file\n      'd'\n           directory\n      'D'\n           door (Solaris 2.5 and up)\n      'l'\n           symbolic link\n      'M'\n           off-line (\"migrated\") file (Cray DMF)\n      'n'\n           network special file (HP-UX)\n      'p'\n           FIFO (named pipe)\n      'P'\n           port (Solaris 10 and up)\n      's'\n           socket\n      '?'\n           some other file type\n \n      The file mode bits listed are similar to symbolic mode\n      specifications (*note Symbolic Modes::).  But 'ls' combines\n      multiple bits into the third character of each set of permissions\n      as follows:\n \n      's'\n           If the set-user-ID or set-group-ID bit and the corresponding\n           executable bit are both set.\n \n      'S'\n           If the set-user-ID or set-group-ID bit is set but the\n           corresponding executable bit is not set.\n \n      't'\n           If the restricted deletion flag or sticky bit, and the\n           other-executable bit, are both set.  The restricted deletion\n           flag is another name for the sticky bit.  *Note Mode\n           Structure::.\n \n      'T'\n           If the restricted deletion flag or sticky bit is set but the\n           other-executable bit is not set.\n \n      'x'\n           If the executable bit is set and none of the above apply.\n \n      '-'\n           Otherwise.\n           \n### File Type\n- Regular File \n    - The most common file, which contains data of some form.\n    \n- Directory File\n    - A file contains the names of other files and pointers to information on these files.\n    - Any process that has read permission for a directory file can read contents of the directory, but only the kernel can write directly to a directory file.\n\n- Block Special file\n    - 요청이 장치 드라이버에 의해 처리되며 이러한 유형을 디바이스 파일이라고 한다. \n    - 디바이스 파일은 어떤 드라이버에 의해서 사용되는지 구분하기 위한 연관번호를 가지고 있다.\n    - 블록 특수 파일은 일반 파일과 유사하고 문자 특수 파일은 파이프처럼 행동합니다.\n    \n- Character special file\n    - A type of file providing unbuffered I/O access in variable-sized units to devices.\n    - 이 장치파일은 데이터를 쓰거나 읽는게 즉시 일어나는 파이프나 시리얼 포트처럼 행동한다.\n    \n- FIFO\n    - Process Inter communication \n\n- Socket\n    - 네트워크의 입출력을 담당하는 API\n    \n- Symbolic link\n    - A Type of file that points to another file \n    - 다른 파일을 가리키는 타입의 파일\n    \n![](/images/linux/count_of_filetype.png)\n    ","slug":"linux-command-ls","published":1,"updated":"2020-07-11T04:51:03.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5157002jqlvo4gllcmxm","content":"<h3 id=\"ls-명령어\"><a class=\"markdownIt-Anchor\" href=\"#ls-명령어\"></a> ls 명령어</h3>\n<pre><code>  For each directory that is listed, preface the files with a line\n  'total BLOCKS', where BLOCKS is the total disk allocation for all\n  files in that directory.  The block size currently defaults to 1024\n  bytes, but this can be overridden (*note Block size::).  The BLOCKS\n  computed counts each hard link separately; this is arguably a\n  deficiency.\n\n  The file type is one of the following characters:\n\n  '-'\n       regular file\n  'b'\n       block special file\n  'c'\n       character special file\n  'C'\n       high performance (&quot;contiguous data&quot;) file\n  'd'\n       directory\n  'D'\n       door (Solaris 2.5 and up)\n  'l'\n       symbolic link\n  'M'\n       off-line (&quot;migrated&quot;) file (Cray DMF)\n  'n'\n       network special file (HP-UX)\n  'p'\n       FIFO (named pipe)\n  'P'\n       port (Solaris 10 and up)\n  's'\n       socket\n  '?'\n       some other file type\n\n  The file mode bits listed are similar to symbolic mode\n  specifications (*note Symbolic Modes::).  But 'ls' combines\n  multiple bits into the third character of each set of permissions\n  as follows:\n\n  's'\n       If the set-user-ID or set-group-ID bit and the corresponding\n       executable bit are both set.\n\n  'S'\n       If the set-user-ID or set-group-ID bit is set but the\n       corresponding executable bit is not set.\n\n  't'\n       If the restricted deletion flag or sticky bit, and the\n       other-executable bit, are both set.  The restricted deletion\n       flag is another name for the sticky bit.  *Note Mode\n       Structure::.\n\n  'T'\n       If the restricted deletion flag or sticky bit is set but the\n       other-executable bit is not set.\n\n  'x'\n       If the executable bit is set and none of the above apply.\n\n  '-'\n       Otherwise.\n</code></pre>\n<h3 id=\"file-type\"><a class=\"markdownIt-Anchor\" href=\"#file-type\"></a> File Type</h3>\n<ul>\n<li>\n<p>Regular File</p>\n<ul>\n<li>The most common file, which contains data of some form.</li>\n</ul>\n</li>\n<li>\n<p>Directory File</p>\n<ul>\n<li>A file contains the names of other files and pointers to information on these files.</li>\n<li>Any process that has read permission for a directory file can read contents of the directory, but only the kernel can write directly to a directory file.</li>\n</ul>\n</li>\n<li>\n<p>Block Special file</p>\n<ul>\n<li>요청이 장치 드라이버에 의해 처리되며 이러한 유형을 디바이스 파일이라고 한다.</li>\n<li>디바이스 파일은 어떤 드라이버에 의해서 사용되는지 구분하기 위한 연관번호를 가지고 있다.</li>\n<li>블록 특수 파일은 일반 파일과 유사하고 문자 특수 파일은 파이프처럼 행동합니다.</li>\n</ul>\n</li>\n<li>\n<p>Character special file</p>\n<ul>\n<li>A type of file providing unbuffered I/O access in variable-sized units to devices.</li>\n<li>이 장치파일은 데이터를 쓰거나 읽는게 즉시 일어나는 파이프나 시리얼 포트처럼 행동한다.</li>\n</ul>\n</li>\n<li>\n<p>FIFO</p>\n<ul>\n<li>Process Inter communication</li>\n</ul>\n</li>\n<li>\n<p>Socket</p>\n<ul>\n<li>네트워크의 입출력을 담당하는 API</li>\n</ul>\n</li>\n<li>\n<p>Symbolic link</p>\n<ul>\n<li>A Type of file that points to another file</li>\n<li>다른 파일을 가리키는 타입의 파일</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/linux/count_of_filetype.png\" alt=\"\" /></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"ls-명령어\"><a class=\"markdownIt-Anchor\" href=\"#ls-명령어\"></a> ls 명령어</h3>\n<pre><code>  For each directory that is listed, preface the files with a line\n  'total BLOCKS', where BLOCKS is the total disk allocation for all\n  files in that directory.  The block size currently defaults to 1024\n  bytes, but this can be overridden (*note Block size::).  The BLOCKS\n  computed counts each hard link separately; this is arguably a\n  deficiency.\n\n  The file type is one of the following characters:\n\n  '-'\n       regular file\n  'b'\n       block special file\n  'c'\n       character special file\n  'C'\n       high performance (&quot;contiguous data&quot;) file\n  'd'\n       directory\n  'D'\n       door (Solaris 2.5 and up)\n  'l'\n       symbolic link\n  'M'\n       off-line (&quot;migrated&quot;) file (Cray DMF)\n  'n'\n       network special file (HP-UX)\n  'p'\n       FIFO (named pipe)\n  'P'\n       port (Solaris 10 and up)\n  's'\n       socket\n  '?'\n       some other file type\n\n  The file mode bits listed are similar to symbolic mode\n  specifications (*note Symbolic Modes::).  But 'ls' combines\n  multiple bits into the third character of each set of permissions\n  as follows:\n\n  's'\n       If the set-user-ID or set-group-ID bit and the corresponding\n       executable bit are both set.\n\n  'S'\n       If the set-user-ID or set-group-ID bit is set but the\n       corresponding executable bit is not set.\n\n  't'\n       If the restricted deletion flag or sticky bit, and the\n       other-executable bit, are both set.  The restricted deletion\n       flag is another name for the sticky bit.  *Note Mode\n       Structure::.\n\n  'T'\n       If the restricted deletion flag or sticky bit is set but the\n       other-executable bit is not set.\n\n  'x'\n       If the executable bit is set and none of the above apply.\n\n  '-'\n       Otherwise.\n</code></pre>\n<h3 id=\"file-type\"><a class=\"markdownIt-Anchor\" href=\"#file-type\"></a> File Type</h3>\n<ul>\n<li>\n<p>Regular File</p>\n<ul>\n<li>The most common file, which contains data of some form.</li>\n</ul>\n</li>\n<li>\n<p>Directory File</p>\n<ul>\n<li>A file contains the names of other files and pointers to information on these files.</li>\n<li>Any process that has read permission for a directory file can read contents of the directory, but only the kernel can write directly to a directory file.</li>\n</ul>\n</li>\n<li>\n<p>Block Special file</p>\n<ul>\n<li>요청이 장치 드라이버에 의해 처리되며 이러한 유형을 디바이스 파일이라고 한다.</li>\n<li>디바이스 파일은 어떤 드라이버에 의해서 사용되는지 구분하기 위한 연관번호를 가지고 있다.</li>\n<li>블록 특수 파일은 일반 파일과 유사하고 문자 특수 파일은 파이프처럼 행동합니다.</li>\n</ul>\n</li>\n<li>\n<p>Character special file</p>\n<ul>\n<li>A type of file providing unbuffered I/O access in variable-sized units to devices.</li>\n<li>이 장치파일은 데이터를 쓰거나 읽는게 즉시 일어나는 파이프나 시리얼 포트처럼 행동한다.</li>\n</ul>\n</li>\n<li>\n<p>FIFO</p>\n<ul>\n<li>Process Inter communication</li>\n</ul>\n</li>\n<li>\n<p>Socket</p>\n<ul>\n<li>네트워크의 입출력을 담당하는 API</li>\n</ul>\n</li>\n<li>\n<p>Symbolic link</p>\n<ul>\n<li>A Type of file that points to another file</li>\n<li>다른 파일을 가리키는 타입의 파일</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/linux/count_of_filetype.png\" alt=\"\" /></p>\n"},{"title":"network-tcp-basic","date":"2020-04-06T23:49:59.000Z","_content":"\n## TCP Overview\n### 점대점(Point-to-Point) : 단일 송/수신자간의 통신   ex) 일대일 통신, Unicast 전송\n\n- Unicast : 고유 주소로 식별된 하나의 네트워크 목적지에 메시지를 전송하는 방식\n- Broadcast : 송신 가능한 모든 목적지에 동일한 데이터를 전송\n- Multicast : 특별한 주소 지정 방식을 통해 정해진 여러 목적지로 데이터를 전송\n  호스트가 무수히 많은 경우, Unicast로 데이터를 전송하면, 각각의 네트워크 연결마다 호스트의 컴퓨팅 리소스(자원)을 소비할 뿐 아니라 각각 다른 네트워크 대역폭을 필요로 하기 때문에 전송 비용이 많이 든다는 단점이 있다.\n\n### 파이프라인(Pipeline) : TCP의 혼잡 제어 및 흐름 제어가 윈도우 크기(Window size)를 결정한다.\n\n- Window size : ACK받지 않은 데이터 중 최대 송신가능한 바이트 수, 수신자가 한 번에 버퍼링할 수 있는 최대 데이터 크기\n- Sliding Window : 두 개의 네트워크 호스트 간의 패킷의 흐름을 제어하기 위한 방법으로, TCP 프로토콜은 데이터의 전달을 보증해야 하므로 패킷 하나 하나가 정상적으로 전달되었음을 알리는 확인 신호(Acknowledgement, ACK)를 수신자가 송신자에게 보내야 한다.\n    패킷에 오류가 생겼을 경우, 송신측에서 해당 패킷을 재전송해야 하는데 이 때 Sliding Window가 Window Size(메모리 버퍼의 일정 영역)에 포함되는 모든 패킷을 전송하고, 패킷의 전달이 확인되는 대로 이 Window를 옆으로 옮김(Sliding)으로써 그 다음 패킷들을 전송할 준비를 한다.\n- 전이중성 데이터(Full-duplex Data) : 같은 연결 상에서 양방향 데이터 흐름\n\n \n\n### 최대 세그먼트 크기 (Maximum Segment Size, MSS)\n\n- 헤더를 제외하고 TCP가 실을 수 있는 최대 데이터 크기\n    기본값은 IPv4 -> 536 Byte, IPv6 -> 1220 Byte이다. \n    최대 전송 단위(MTU)에 의해 값이 결정되며, MSS값은 헤더의 MSS 옵션 필드에 저장된다.\n    연결에 참여하는 두 장비가 서로 다른 MSS값을 갖을 수도 있다.\n \n\n- 최대 전송 단위(Maximum Transmission Unit, MTU)\n    데이터 링크(2계층) 또는 네트워크(3계층)에서 하나의 프레임 또는 패킷에 담아 운반할 수 있는 헤더를 포함한 최대 데이터 크기\n    최소 권고값은 2계층 기준 1500Byte이며, 3계층 기준 IPv4는 MSS 크기에서 40byte(IP헤더+TCP헤더)를 추가한 576Byte이고, IPv6는 1280Byte이다.\n    실제로는 최대 65,646바이트 범위까지 생성가능하다.\n\n- MTU가 IP 기반의 정보인 반면, Maximum Segment Size는 TCP 기반의 정보이다.\n- TCP는 연결지향형으로 제어 메시지들의 교환(Handshaking)이 이루어진다. 핸드쉐이킹을 통해 데이터 교환 전에 송신자 및 수신자의 상태를 초기화한다.\n\n### TCP Segment\n![](/images/network/tcp/tcp_segment.png)\n\n- Source port number : 출발지 포트 번호\n- Destination port number : 도착지 포트 번호\n- Sequence number : 순서번호(Seq#)로, 세그먼트에서 첫 번째 바이트의 바이트 스트림 번호값이 저장된다.\n- Response number : 확인응답(누적된 ACK)번호로, 상대방으로부터 받아야할 다음 바이트의 순서번호값이 저장된다.\n- Header length : 헤더의 길이로, Option이 없으면 헤더값에 5개의 비트값이 들어간다. 그러나 일반적으로 32비트이다.\n- Reservation : 나중에 다시 설명\n- Control flag \n- Window : 수신측의 윈도우 크기(Window size)로, 받을 수 있는 최대 데이터 크기값이 저장되어 있다.\n- TCP Checksum :체크섬값이란 세그먼트의 합에 1의 보수를 취한 값을 말하며, 수신측에서 체크섬과 세그먼트의 실제 데이터를 더한 결과를 통해 오류를 검출한다.\n- Emergency Data point : 생략\n- Option : 변수의 길이로 설명은 생략.\n- Data : 헤더를 제외한 실제 세그먼트에 들어있는 데이터의 크기로 MSS에 의해 제한되어진다.\n\n#### FLAG 순서\n\n- 구체적으로 flag순서는 URG, PSH, RST, SYN, FIN이고 각각 1비트로 표현되는 값이 저장된다. \n- 각각 1비트로 TCP 세그먼트 필드 안에 cONTROL BIT 또는 FLAG BIT 로 정의 되어 있다.\n    +-------+-------+------+-------+-------+------+\n    | URG | ACK | PSH | RST | SYN | FIN |\n    +-------+-------+------+-------+-------+------+\n\n- SYN(Synchronization:동기화) - S : 연결 요청 플래그\n    TCP 에서 세션을 성립할 때  가장먼저 보내는 패킷, 시퀀스 번호를 임의적으로 설정하여 세션을 연결하는 데에 사용되며 초기에 시퀀스 번호를 보내게 된다.\n- ACK(Acknowledgement) - Ack : 응답\n    상대방으로부터 패킷을 받았다는 걸 알려주는 패킷, 다른 플래그와 같이 출력되는 경우도 있습니다.\n    받는 사람이 보낸 사람 시퀀스 번호에 TCP 계층에서 길이 또는 데이터 양을 더한 것과 같은 ACK를 보냅니다.(일반적으로 +1 하여 보냄) \n    ACK 응답을 통해 보낸 패킷에 대한 성공, 실패를 판단하여 재전송 하거나 다음 패킷을 전송한다.\n- RST(Reset) - R : 제 연결 종료\n    재설정(Reset)을 하는 과정이며 양방향에서 동시에 일어나는 중단 작업이다. 비 정상적인 세션 연결 끊기에 해당한다. \n    이 패킷을 보내는 곳이 현재 접속하고 있는 곳과 즉시 연결을 끊고자 할 때 사용한다.\n- PSH(Push) - P : 밀어넣기\n    TELNET 과 같은 상호작용이 중요한 프로토콜의 경우 빠른 응답이 중요한데, 이 때 받은 데이터를 즉시 목적지인 OSI 7 Layer 의 Application 계층으로 전송하도록 하는 FLAG. \n    대화형 트랙픽에 사용되는 것으로 버퍼가 채워지기를 기다리지 않고 데이터를 전달한다. 데이터는 버퍼링 없이 바로 위 계층이 아닌 7 계층의 응용프로그램으로 바로 전달한다.\n- URG(Urgent) - U : 긴급 데이터\n    Urgent pointer 유효한 것인지를 나타낸다. Urgent pointer란 전송하는 데이터 중에서 긴급히 전당해야 할 내용이 있을 경우에 사용한다. \n    긴급한 데이터는 다른 데이터에 비해 우선순위가 높아야 한다. \n    EX) ping 명령어 실행 도중 Ctrl+c 입력\n- FIN(Finish) - F : 연결 종료 요청\n    세션 연결을 종료시킬 때 사용되며 더이상 전송할 데이터가 없음을 나타낸다.\n- Placeholder             \n    패킷의 플래그에 SYN, FINISH, RESET, PUSH등의 플래그가 설정 되어 있지 않은 경우 이 플래그가 세팅된다. 이 플래그는 ACK플래그와 함께 사용되는 경우도 있다.\n\n\n### TCP Round Trip Time, Timeout\n- TCP는 신뢰적인 데이터 전송(RDT)처럼 세그먼트의 손실을 발견하기 위해 타임아웃/재전송 메커니즘을 사용한다. 이 때, 송신측에서 데이터를 전송한 후, \n  ACK받기까지 걸린 시간을 RTT(Rount Trip Time)이라 표현한다.\n- 타임아웃(timeout) 주기는 RTT보다 길어야 한다. 너무 짧으면 타임아웃이 자주 발생하여 세그먼트의 불필요한 재전송이 발생하므로 링크를 비효율적으로 사용하게 된다. \n  반대로 너무 길게 되면, 세그먼트의 손실에 대한 느린 대응으로 회복이 비효율적이게 된다.\n- SampleRTT : 세그먼트가 송신된 시간부터 ACK 받기까지 측정된 시간으로, 재전송한 세그먼트는 무시한다. 값은 네트워크 부하에 따라 가변적이다.\n- 현재 SampleRTT 값이 아닌 최근의 값들의 평균값으로 추정한다.\n- 추정RTT : EstimatedRTT = (1-a) * EstimatedRTT + a * SampleRTT\n    일반적으로 a=0.125이고, 지수적 가중 이동 평균(EWMA)방식으로 과거 샘플들의 영향이 지수적으로 감소한다. a가 높을수록 SampleRTT에 더 영향을 준다.\n- DevRTT : RTT 변화율로, SampleRTT와 EstimatedRTT의 편차값이다. 즉, 현재 RTT값이 추정 RTT값으로부터 얼마나 벗어났는가에 대한 정보이다.\n- 재전송 타임아웃 주기 (Timeout Interval) = EstimatedRTT + 4 * DevRTT\n- 타임아웃나서 세그먼트를 재전송하게 되면, 재전송한 세그먼트에 대한 타이머가 시작된다.\n\n### TCP의 RDT\n- TCP는 비신뢰적인 인터넷 네트워크 계층(IP서비스)의 상위 계층에서 신뢰적인 데이터 전달(Reliable Data Transfer, RDT) 서비스를 제공한다.\n- 파이프라인되는 세그먼트 (ACK의 응답이 없어도 다수의 세그먼트를 전송가능)\n- 누적된 ACKs\n- 단 하나의 재전송 타이머\n- 재전송은 타임아웃이 되거나, 중복 ACKs를 수신했을 경우 발생한다.\n- “간소화된 TCP 송신자”는 중복 ACKs를 무시하고 흐름제어 및 혼잡제어를 무시한다.\n\n### TCP 송신자의 3가지 상황(Sender Events)\n- 상위 계층으로부터 수신된 데이터 : 데이터를 받았으므로 상위 계층으로부터 데이터 전송 요청이 오게 된다.\n    순서번호(Seq#)를 가진 세그먼트 생성 (Seq# : 세그먼트의 첫 번째 바이트의 바이트 스트림 번호)\n    타이머가 실행되지 않고 있으면 타이머를 시작한다.\n    타이머의 만료주기는 Timout Interval 로 계산한다.\n\n- 타임아웃 : 타임아웃에 의해 세그먼트가 재전송되고, 전송했으나 ACK 받지 않은 가장 오래된 세그먼트에 대해 타이머가 다시 시작한다.\n- ACK를 수신한 경우 : 이전에 ACK받지 않은 세그먼트의 ACK 이면, 해당 세그먼트를 ACK 응답된 세그먼트로 표시한다. \n    즉, 윈도우 크기를 조정한다. 아직 ACK받지 못한 세그먼트들이 존재한다면 타이머를 시작한다.","source":"_posts/network-tcp-basic.md","raw":"---\ntitle: network-tcp-basic\ndate: 2020-04-07 08:49:59\ntags: \n- TCP\n\ncategories:\n- Network\n- TCP\n---\n\n## TCP Overview\n### 점대점(Point-to-Point) : 단일 송/수신자간의 통신   ex) 일대일 통신, Unicast 전송\n\n- Unicast : 고유 주소로 식별된 하나의 네트워크 목적지에 메시지를 전송하는 방식\n- Broadcast : 송신 가능한 모든 목적지에 동일한 데이터를 전송\n- Multicast : 특별한 주소 지정 방식을 통해 정해진 여러 목적지로 데이터를 전송\n  호스트가 무수히 많은 경우, Unicast로 데이터를 전송하면, 각각의 네트워크 연결마다 호스트의 컴퓨팅 리소스(자원)을 소비할 뿐 아니라 각각 다른 네트워크 대역폭을 필요로 하기 때문에 전송 비용이 많이 든다는 단점이 있다.\n\n### 파이프라인(Pipeline) : TCP의 혼잡 제어 및 흐름 제어가 윈도우 크기(Window size)를 결정한다.\n\n- Window size : ACK받지 않은 데이터 중 최대 송신가능한 바이트 수, 수신자가 한 번에 버퍼링할 수 있는 최대 데이터 크기\n- Sliding Window : 두 개의 네트워크 호스트 간의 패킷의 흐름을 제어하기 위한 방법으로, TCP 프로토콜은 데이터의 전달을 보증해야 하므로 패킷 하나 하나가 정상적으로 전달되었음을 알리는 확인 신호(Acknowledgement, ACK)를 수신자가 송신자에게 보내야 한다.\n    패킷에 오류가 생겼을 경우, 송신측에서 해당 패킷을 재전송해야 하는데 이 때 Sliding Window가 Window Size(메모리 버퍼의 일정 영역)에 포함되는 모든 패킷을 전송하고, 패킷의 전달이 확인되는 대로 이 Window를 옆으로 옮김(Sliding)으로써 그 다음 패킷들을 전송할 준비를 한다.\n- 전이중성 데이터(Full-duplex Data) : 같은 연결 상에서 양방향 데이터 흐름\n\n \n\n### 최대 세그먼트 크기 (Maximum Segment Size, MSS)\n\n- 헤더를 제외하고 TCP가 실을 수 있는 최대 데이터 크기\n    기본값은 IPv4 -> 536 Byte, IPv6 -> 1220 Byte이다. \n    최대 전송 단위(MTU)에 의해 값이 결정되며, MSS값은 헤더의 MSS 옵션 필드에 저장된다.\n    연결에 참여하는 두 장비가 서로 다른 MSS값을 갖을 수도 있다.\n \n\n- 최대 전송 단위(Maximum Transmission Unit, MTU)\n    데이터 링크(2계층) 또는 네트워크(3계층)에서 하나의 프레임 또는 패킷에 담아 운반할 수 있는 헤더를 포함한 최대 데이터 크기\n    최소 권고값은 2계층 기준 1500Byte이며, 3계층 기준 IPv4는 MSS 크기에서 40byte(IP헤더+TCP헤더)를 추가한 576Byte이고, IPv6는 1280Byte이다.\n    실제로는 최대 65,646바이트 범위까지 생성가능하다.\n\n- MTU가 IP 기반의 정보인 반면, Maximum Segment Size는 TCP 기반의 정보이다.\n- TCP는 연결지향형으로 제어 메시지들의 교환(Handshaking)이 이루어진다. 핸드쉐이킹을 통해 데이터 교환 전에 송신자 및 수신자의 상태를 초기화한다.\n\n### TCP Segment\n![](/images/network/tcp/tcp_segment.png)\n\n- Source port number : 출발지 포트 번호\n- Destination port number : 도착지 포트 번호\n- Sequence number : 순서번호(Seq#)로, 세그먼트에서 첫 번째 바이트의 바이트 스트림 번호값이 저장된다.\n- Response number : 확인응답(누적된 ACK)번호로, 상대방으로부터 받아야할 다음 바이트의 순서번호값이 저장된다.\n- Header length : 헤더의 길이로, Option이 없으면 헤더값에 5개의 비트값이 들어간다. 그러나 일반적으로 32비트이다.\n- Reservation : 나중에 다시 설명\n- Control flag \n- Window : 수신측의 윈도우 크기(Window size)로, 받을 수 있는 최대 데이터 크기값이 저장되어 있다.\n- TCP Checksum :체크섬값이란 세그먼트의 합에 1의 보수를 취한 값을 말하며, 수신측에서 체크섬과 세그먼트의 실제 데이터를 더한 결과를 통해 오류를 검출한다.\n- Emergency Data point : 생략\n- Option : 변수의 길이로 설명은 생략.\n- Data : 헤더를 제외한 실제 세그먼트에 들어있는 데이터의 크기로 MSS에 의해 제한되어진다.\n\n#### FLAG 순서\n\n- 구체적으로 flag순서는 URG, PSH, RST, SYN, FIN이고 각각 1비트로 표현되는 값이 저장된다. \n- 각각 1비트로 TCP 세그먼트 필드 안에 cONTROL BIT 또는 FLAG BIT 로 정의 되어 있다.\n    +-------+-------+------+-------+-------+------+\n    | URG | ACK | PSH | RST | SYN | FIN |\n    +-------+-------+------+-------+-------+------+\n\n- SYN(Synchronization:동기화) - S : 연결 요청 플래그\n    TCP 에서 세션을 성립할 때  가장먼저 보내는 패킷, 시퀀스 번호를 임의적으로 설정하여 세션을 연결하는 데에 사용되며 초기에 시퀀스 번호를 보내게 된다.\n- ACK(Acknowledgement) - Ack : 응답\n    상대방으로부터 패킷을 받았다는 걸 알려주는 패킷, 다른 플래그와 같이 출력되는 경우도 있습니다.\n    받는 사람이 보낸 사람 시퀀스 번호에 TCP 계층에서 길이 또는 데이터 양을 더한 것과 같은 ACK를 보냅니다.(일반적으로 +1 하여 보냄) \n    ACK 응답을 통해 보낸 패킷에 대한 성공, 실패를 판단하여 재전송 하거나 다음 패킷을 전송한다.\n- RST(Reset) - R : 제 연결 종료\n    재설정(Reset)을 하는 과정이며 양방향에서 동시에 일어나는 중단 작업이다. 비 정상적인 세션 연결 끊기에 해당한다. \n    이 패킷을 보내는 곳이 현재 접속하고 있는 곳과 즉시 연결을 끊고자 할 때 사용한다.\n- PSH(Push) - P : 밀어넣기\n    TELNET 과 같은 상호작용이 중요한 프로토콜의 경우 빠른 응답이 중요한데, 이 때 받은 데이터를 즉시 목적지인 OSI 7 Layer 의 Application 계층으로 전송하도록 하는 FLAG. \n    대화형 트랙픽에 사용되는 것으로 버퍼가 채워지기를 기다리지 않고 데이터를 전달한다. 데이터는 버퍼링 없이 바로 위 계층이 아닌 7 계층의 응용프로그램으로 바로 전달한다.\n- URG(Urgent) - U : 긴급 데이터\n    Urgent pointer 유효한 것인지를 나타낸다. Urgent pointer란 전송하는 데이터 중에서 긴급히 전당해야 할 내용이 있을 경우에 사용한다. \n    긴급한 데이터는 다른 데이터에 비해 우선순위가 높아야 한다. \n    EX) ping 명령어 실행 도중 Ctrl+c 입력\n- FIN(Finish) - F : 연결 종료 요청\n    세션 연결을 종료시킬 때 사용되며 더이상 전송할 데이터가 없음을 나타낸다.\n- Placeholder             \n    패킷의 플래그에 SYN, FINISH, RESET, PUSH등의 플래그가 설정 되어 있지 않은 경우 이 플래그가 세팅된다. 이 플래그는 ACK플래그와 함께 사용되는 경우도 있다.\n\n\n### TCP Round Trip Time, Timeout\n- TCP는 신뢰적인 데이터 전송(RDT)처럼 세그먼트의 손실을 발견하기 위해 타임아웃/재전송 메커니즘을 사용한다. 이 때, 송신측에서 데이터를 전송한 후, \n  ACK받기까지 걸린 시간을 RTT(Rount Trip Time)이라 표현한다.\n- 타임아웃(timeout) 주기는 RTT보다 길어야 한다. 너무 짧으면 타임아웃이 자주 발생하여 세그먼트의 불필요한 재전송이 발생하므로 링크를 비효율적으로 사용하게 된다. \n  반대로 너무 길게 되면, 세그먼트의 손실에 대한 느린 대응으로 회복이 비효율적이게 된다.\n- SampleRTT : 세그먼트가 송신된 시간부터 ACK 받기까지 측정된 시간으로, 재전송한 세그먼트는 무시한다. 값은 네트워크 부하에 따라 가변적이다.\n- 현재 SampleRTT 값이 아닌 최근의 값들의 평균값으로 추정한다.\n- 추정RTT : EstimatedRTT = (1-a) * EstimatedRTT + a * SampleRTT\n    일반적으로 a=0.125이고, 지수적 가중 이동 평균(EWMA)방식으로 과거 샘플들의 영향이 지수적으로 감소한다. a가 높을수록 SampleRTT에 더 영향을 준다.\n- DevRTT : RTT 변화율로, SampleRTT와 EstimatedRTT의 편차값이다. 즉, 현재 RTT값이 추정 RTT값으로부터 얼마나 벗어났는가에 대한 정보이다.\n- 재전송 타임아웃 주기 (Timeout Interval) = EstimatedRTT + 4 * DevRTT\n- 타임아웃나서 세그먼트를 재전송하게 되면, 재전송한 세그먼트에 대한 타이머가 시작된다.\n\n### TCP의 RDT\n- TCP는 비신뢰적인 인터넷 네트워크 계층(IP서비스)의 상위 계층에서 신뢰적인 데이터 전달(Reliable Data Transfer, RDT) 서비스를 제공한다.\n- 파이프라인되는 세그먼트 (ACK의 응답이 없어도 다수의 세그먼트를 전송가능)\n- 누적된 ACKs\n- 단 하나의 재전송 타이머\n- 재전송은 타임아웃이 되거나, 중복 ACKs를 수신했을 경우 발생한다.\n- “간소화된 TCP 송신자”는 중복 ACKs를 무시하고 흐름제어 및 혼잡제어를 무시한다.\n\n### TCP 송신자의 3가지 상황(Sender Events)\n- 상위 계층으로부터 수신된 데이터 : 데이터를 받았으므로 상위 계층으로부터 데이터 전송 요청이 오게 된다.\n    순서번호(Seq#)를 가진 세그먼트 생성 (Seq# : 세그먼트의 첫 번째 바이트의 바이트 스트림 번호)\n    타이머가 실행되지 않고 있으면 타이머를 시작한다.\n    타이머의 만료주기는 Timout Interval 로 계산한다.\n\n- 타임아웃 : 타임아웃에 의해 세그먼트가 재전송되고, 전송했으나 ACK 받지 않은 가장 오래된 세그먼트에 대해 타이머가 다시 시작한다.\n- ACK를 수신한 경우 : 이전에 ACK받지 않은 세그먼트의 ACK 이면, 해당 세그먼트를 ACK 응답된 세그먼트로 표시한다. \n    즉, 윈도우 크기를 조정한다. 아직 ACK받지 못한 세그먼트들이 존재한다면 타이머를 시작한다.","slug":"network-tcp-basic","published":1,"updated":"2020-07-11T04:51:03.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5159002nqlvo2v8q0a9x","content":"<h2 id=\"tcp-overview\"><a class=\"markdownIt-Anchor\" href=\"#tcp-overview\"></a> TCP Overview</h2>\n<h3 id=\"점대점point-to-point-단일-송수신자간의-통신-ex-일대일-통신-unicast-전송\"><a class=\"markdownIt-Anchor\" href=\"#점대점point-to-point-단일-송수신자간의-통신-ex-일대일-통신-unicast-전송\"></a> 점대점(Point-to-Point) : 단일 송/수신자간의 통신   ex) 일대일 통신, Unicast 전송</h3>\n<ul>\n<li>Unicast : 고유 주소로 식별된 하나의 네트워크 목적지에 메시지를 전송하는 방식</li>\n<li>Broadcast : 송신 가능한 모든 목적지에 동일한 데이터를 전송</li>\n<li>Multicast : 특별한 주소 지정 방식을 통해 정해진 여러 목적지로 데이터를 전송<br />\n호스트가 무수히 많은 경우, Unicast로 데이터를 전송하면, 각각의 네트워크 연결마다 호스트의 컴퓨팅 리소스(자원)을 소비할 뿐 아니라 각각 다른 네트워크 대역폭을 필요로 하기 때문에 전송 비용이 많이 든다는 단점이 있다.</li>\n</ul>\n<h3 id=\"파이프라인pipeline-tcp의-혼잡-제어-및-흐름-제어가-윈도우-크기window-size를-결정한다\"><a class=\"markdownIt-Anchor\" href=\"#파이프라인pipeline-tcp의-혼잡-제어-및-흐름-제어가-윈도우-크기window-size를-결정한다\"></a> 파이프라인(Pipeline) : TCP의 혼잡 제어 및 흐름 제어가 윈도우 크기(Window size)를 결정한다.</h3>\n<ul>\n<li>Window size : ACK받지 않은 데이터 중 최대 송신가능한 바이트 수, 수신자가 한 번에 버퍼링할 수 있는 최대 데이터 크기</li>\n<li>Sliding Window : 두 개의 네트워크 호스트 간의 패킷의 흐름을 제어하기 위한 방법으로, TCP 프로토콜은 데이터의 전달을 보증해야 하므로 패킷 하나 하나가 정상적으로 전달되었음을 알리는 확인 신호(Acknowledgement, ACK)를 수신자가 송신자에게 보내야 한다.<br />\n패킷에 오류가 생겼을 경우, 송신측에서 해당 패킷을 재전송해야 하는데 이 때 Sliding Window가 Window Size(메모리 버퍼의 일정 영역)에 포함되는 모든 패킷을 전송하고, 패킷의 전달이 확인되는 대로 이 Window를 옆으로 옮김(Sliding)으로써 그 다음 패킷들을 전송할 준비를 한다.</li>\n<li>전이중성 데이터(Full-duplex Data) : 같은 연결 상에서 양방향 데이터 흐름</li>\n</ul>\n<h3 id=\"최대-세그먼트-크기-maximum-segment-size-mss\"><a class=\"markdownIt-Anchor\" href=\"#최대-세그먼트-크기-maximum-segment-size-mss\"></a> 최대 세그먼트 크기 (Maximum Segment Size, MSS)</h3>\n<ul>\n<li>\n<p>헤더를 제외하고 TCP가 실을 수 있는 최대 데이터 크기<br />\n기본값은 IPv4 -&gt; 536 Byte, IPv6 -&gt; 1220 Byte이다.<br />\n최대 전송 단위(MTU)에 의해 값이 결정되며, MSS값은 헤더의 MSS 옵션 필드에 저장된다.<br />\n연결에 참여하는 두 장비가 서로 다른 MSS값을 갖을 수도 있다.</p>\n</li>\n<li>\n<p>최대 전송 단위(Maximum Transmission Unit, MTU)<br />\n데이터 링크(2계층) 또는 네트워크(3계층)에서 하나의 프레임 또는 패킷에 담아 운반할 수 있는 헤더를 포함한 최대 데이터 크기<br />\n최소 권고값은 2계층 기준 1500Byte이며, 3계층 기준 IPv4는 MSS 크기에서 40byte(IP헤더+TCP헤더)를 추가한 576Byte이고, IPv6는 1280Byte이다.<br />\n실제로는 최대 65,646바이트 범위까지 생성가능하다.</p>\n</li>\n<li>\n<p>MTU가 IP 기반의 정보인 반면, Maximum Segment Size는 TCP 기반의 정보이다.</p>\n</li>\n<li>\n<p>TCP는 연결지향형으로 제어 메시지들의 교환(Handshaking)이 이루어진다. 핸드쉐이킹을 통해 데이터 교환 전에 송신자 및 수신자의 상태를 초기화한다.</p>\n</li>\n</ul>\n<h3 id=\"tcp-segment\"><a class=\"markdownIt-Anchor\" href=\"#tcp-segment\"></a> TCP Segment</h3>\n<p><img src=\"/images/network/tcp/tcp_segment.png\" alt=\"\" /></p>\n<ul>\n<li>Source port number : 출발지 포트 번호</li>\n<li>Destination port number : 도착지 포트 번호</li>\n<li>Sequence number : 순서번호(Seq#)로, 세그먼트에서 첫 번째 바이트의 바이트 스트림 번호값이 저장된다.</li>\n<li>Response number : 확인응답(누적된 ACK)번호로, 상대방으로부터 받아야할 다음 바이트의 순서번호값이 저장된다.</li>\n<li>Header length : 헤더의 길이로, Option이 없으면 헤더값에 5개의 비트값이 들어간다. 그러나 일반적으로 32비트이다.</li>\n<li>Reservation : 나중에 다시 설명</li>\n<li>Control flag</li>\n<li>Window : 수신측의 윈도우 크기(Window size)로, 받을 수 있는 최대 데이터 크기값이 저장되어 있다.</li>\n<li>TCP Checksum :체크섬값이란 세그먼트의 합에 1의 보수를 취한 값을 말하며, 수신측에서 체크섬과 세그먼트의 실제 데이터를 더한 결과를 통해 오류를 검출한다.</li>\n<li>Emergency Data point : 생략</li>\n<li>Option : 변수의 길이로 설명은 생략.</li>\n<li>Data : 헤더를 제외한 실제 세그먼트에 들어있는 데이터의 크기로 MSS에 의해 제한되어진다.</li>\n</ul>\n<h4 id=\"flag-순서\"><a class=\"markdownIt-Anchor\" href=\"#flag-순서\"></a> FLAG 순서</h4>\n<ul>\n<li>\n<p>구체적으로 flag순서는 URG, PSH, RST, SYN, FIN이고 각각 1비트로 표현되는 값이 저장된다.</p>\n</li>\n<li>\n<p>각각 1비트로 TCP 세그먼트 필드 안에 cONTROL BIT 또는 FLAG BIT 로 정의 되어 있다.<br />\n±------±------±-----±------±------±-----+<br />\n| URG | ACK | PSH | RST | SYN | FIN |<br />\n±------±------±-----±------±------±-----+</p>\n</li>\n<li>\n<p>SYN(Synchronization:동기화) - S : 연결 요청 플래그<br />\nTCP 에서 세션을 성립할 때  가장먼저 보내는 패킷, 시퀀스 번호를 임의적으로 설정하여 세션을 연결하는 데에 사용되며 초기에 시퀀스 번호를 보내게 된다.</p>\n</li>\n<li>\n<p>ACK(Acknowledgement) - Ack : 응답<br />\n상대방으로부터 패킷을 받았다는 걸 알려주는 패킷, 다른 플래그와 같이 출력되는 경우도 있습니다.<br />\n받는 사람이 보낸 사람 시퀀스 번호에 TCP 계층에서 길이 또는 데이터 양을 더한 것과 같은 ACK를 보냅니다.(일반적으로 +1 하여 보냄)<br />\nACK 응답을 통해 보낸 패킷에 대한 성공, 실패를 판단하여 재전송 하거나 다음 패킷을 전송한다.</p>\n</li>\n<li>\n<p>RST(Reset) - R : 제 연결 종료<br />\n재설정(Reset)을 하는 과정이며 양방향에서 동시에 일어나는 중단 작업이다. 비 정상적인 세션 연결 끊기에 해당한다.<br />\n이 패킷을 보내는 곳이 현재 접속하고 있는 곳과 즉시 연결을 끊고자 할 때 사용한다.</p>\n</li>\n<li>\n<p>PSH(Push) - P : 밀어넣기<br />\nTELNET 과 같은 상호작용이 중요한 프로토콜의 경우 빠른 응답이 중요한데, 이 때 받은 데이터를 즉시 목적지인 OSI 7 Layer 의 Application 계층으로 전송하도록 하는 FLAG.<br />\n대화형 트랙픽에 사용되는 것으로 버퍼가 채워지기를 기다리지 않고 데이터를 전달한다. 데이터는 버퍼링 없이 바로 위 계층이 아닌 7 계층의 응용프로그램으로 바로 전달한다.</p>\n</li>\n<li>\n<p>URG(Urgent) - U : 긴급 데이터<br />\nUrgent pointer 유효한 것인지를 나타낸다. Urgent pointer란 전송하는 데이터 중에서 긴급히 전당해야 할 내용이 있을 경우에 사용한다.<br />\n긴급한 데이터는 다른 데이터에 비해 우선순위가 높아야 한다.<br />\nEX) ping 명령어 실행 도중 Ctrl+c 입력</p>\n</li>\n<li>\n<p>FIN(Finish) - F : 연결 종료 요청<br />\n세션 연결을 종료시킬 때 사용되며 더이상 전송할 데이터가 없음을 나타낸다.</p>\n</li>\n<li>\n<p>Placeholder<br />\n패킷의 플래그에 SYN, FINISH, RESET, PUSH등의 플래그가 설정 되어 있지 않은 경우 이 플래그가 세팅된다. 이 플래그는 ACK플래그와 함께 사용되는 경우도 있다.</p>\n</li>\n</ul>\n<h3 id=\"tcp-round-trip-time-timeout\"><a class=\"markdownIt-Anchor\" href=\"#tcp-round-trip-time-timeout\"></a> TCP Round Trip Time, Timeout</h3>\n<ul>\n<li>TCP는 신뢰적인 데이터 전송(RDT)처럼 세그먼트의 손실을 발견하기 위해 타임아웃/재전송 메커니즘을 사용한다. 이 때, 송신측에서 데이터를 전송한 후,<br />\nACK받기까지 걸린 시간을 RTT(Rount Trip Time)이라 표현한다.</li>\n<li>타임아웃(timeout) 주기는 RTT보다 길어야 한다. 너무 짧으면 타임아웃이 자주 발생하여 세그먼트의 불필요한 재전송이 발생하므로 링크를 비효율적으로 사용하게 된다.<br />\n반대로 너무 길게 되면, 세그먼트의 손실에 대한 느린 대응으로 회복이 비효율적이게 된다.</li>\n<li>SampleRTT : 세그먼트가 송신된 시간부터 ACK 받기까지 측정된 시간으로, 재전송한 세그먼트는 무시한다. 값은 네트워크 부하에 따라 가변적이다.</li>\n<li>현재 SampleRTT 값이 아닌 최근의 값들의 평균값으로 추정한다.</li>\n<li>추정RTT : EstimatedRTT = (1-a) * EstimatedRTT + a * SampleRTT<br />\n일반적으로 a=0.125이고, 지수적 가중 이동 평균(EWMA)방식으로 과거 샘플들의 영향이 지수적으로 감소한다. a가 높을수록 SampleRTT에 더 영향을 준다.</li>\n<li>DevRTT : RTT 변화율로, SampleRTT와 EstimatedRTT의 편차값이다. 즉, 현재 RTT값이 추정 RTT값으로부터 얼마나 벗어났는가에 대한 정보이다.</li>\n<li>재전송 타임아웃 주기 (Timeout Interval) = EstimatedRTT + 4 * DevRTT</li>\n<li>타임아웃나서 세그먼트를 재전송하게 되면, 재전송한 세그먼트에 대한 타이머가 시작된다.</li>\n</ul>\n<h3 id=\"tcp의-rdt\"><a class=\"markdownIt-Anchor\" href=\"#tcp의-rdt\"></a> TCP의 RDT</h3>\n<ul>\n<li>TCP는 비신뢰적인 인터넷 네트워크 계층(IP서비스)의 상위 계층에서 신뢰적인 데이터 전달(Reliable Data Transfer, RDT) 서비스를 제공한다.</li>\n<li>파이프라인되는 세그먼트 (ACK의 응답이 없어도 다수의 세그먼트를 전송가능)</li>\n<li>누적된 ACKs</li>\n<li>단 하나의 재전송 타이머</li>\n<li>재전송은 타임아웃이 되거나, 중복 ACKs를 수신했을 경우 발생한다.</li>\n<li>“간소화된 TCP 송신자”는 중복 ACKs를 무시하고 흐름제어 및 혼잡제어를 무시한다.</li>\n</ul>\n<h3 id=\"tcp-송신자의-3가지-상황sender-events\"><a class=\"markdownIt-Anchor\" href=\"#tcp-송신자의-3가지-상황sender-events\"></a> TCP 송신자의 3가지 상황(Sender Events)</h3>\n<ul>\n<li>\n<p>상위 계층으로부터 수신된 데이터 : 데이터를 받았으므로 상위 계층으로부터 데이터 전송 요청이 오게 된다.<br />\n순서번호(Seq#)를 가진 세그먼트 생성 (Seq# : 세그먼트의 첫 번째 바이트의 바이트 스트림 번호)<br />\n타이머가 실행되지 않고 있으면 타이머를 시작한다.<br />\n타이머의 만료주기는 Timout Interval 로 계산한다.</p>\n</li>\n<li>\n<p>타임아웃 : 타임아웃에 의해 세그먼트가 재전송되고, 전송했으나 ACK 받지 않은 가장 오래된 세그먼트에 대해 타이머가 다시 시작한다.</p>\n</li>\n<li>\n<p>ACK를 수신한 경우 : 이전에 ACK받지 않은 세그먼트의 ACK 이면, 해당 세그먼트를 ACK 응답된 세그먼트로 표시한다.<br />\n즉, 윈도우 크기를 조정한다. 아직 ACK받지 못한 세그먼트들이 존재한다면 타이머를 시작한다.</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"tcp-overview\"><a class=\"markdownIt-Anchor\" href=\"#tcp-overview\"></a> TCP Overview</h2>\n<h3 id=\"점대점point-to-point-단일-송수신자간의-통신-ex-일대일-통신-unicast-전송\"><a class=\"markdownIt-Anchor\" href=\"#점대점point-to-point-단일-송수신자간의-통신-ex-일대일-통신-unicast-전송\"></a> 점대점(Point-to-Point) : 단일 송/수신자간의 통신   ex) 일대일 통신, Unicast 전송</h3>\n<ul>\n<li>Unicast : 고유 주소로 식별된 하나의 네트워크 목적지에 메시지를 전송하는 방식</li>\n<li>Broadcast : 송신 가능한 모든 목적지에 동일한 데이터를 전송</li>\n<li>Multicast : 특별한 주소 지정 방식을 통해 정해진 여러 목적지로 데이터를 전송<br />\n호스트가 무수히 많은 경우, Unicast로 데이터를 전송하면, 각각의 네트워크 연결마다 호스트의 컴퓨팅 리소스(자원)을 소비할 뿐 아니라 각각 다른 네트워크 대역폭을 필요로 하기 때문에 전송 비용이 많이 든다는 단점이 있다.</li>\n</ul>\n<h3 id=\"파이프라인pipeline-tcp의-혼잡-제어-및-흐름-제어가-윈도우-크기window-size를-결정한다\"><a class=\"markdownIt-Anchor\" href=\"#파이프라인pipeline-tcp의-혼잡-제어-및-흐름-제어가-윈도우-크기window-size를-결정한다\"></a> 파이프라인(Pipeline) : TCP의 혼잡 제어 및 흐름 제어가 윈도우 크기(Window size)를 결정한다.</h3>\n<ul>\n<li>Window size : ACK받지 않은 데이터 중 최대 송신가능한 바이트 수, 수신자가 한 번에 버퍼링할 수 있는 최대 데이터 크기</li>\n<li>Sliding Window : 두 개의 네트워크 호스트 간의 패킷의 흐름을 제어하기 위한 방법으로, TCP 프로토콜은 데이터의 전달을 보증해야 하므로 패킷 하나 하나가 정상적으로 전달되었음을 알리는 확인 신호(Acknowledgement, ACK)를 수신자가 송신자에게 보내야 한다.<br />\n패킷에 오류가 생겼을 경우, 송신측에서 해당 패킷을 재전송해야 하는데 이 때 Sliding Window가 Window Size(메모리 버퍼의 일정 영역)에 포함되는 모든 패킷을 전송하고, 패킷의 전달이 확인되는 대로 이 Window를 옆으로 옮김(Sliding)으로써 그 다음 패킷들을 전송할 준비를 한다.</li>\n<li>전이중성 데이터(Full-duplex Data) : 같은 연결 상에서 양방향 데이터 흐름</li>\n</ul>\n<h3 id=\"최대-세그먼트-크기-maximum-segment-size-mss\"><a class=\"markdownIt-Anchor\" href=\"#최대-세그먼트-크기-maximum-segment-size-mss\"></a> 최대 세그먼트 크기 (Maximum Segment Size, MSS)</h3>\n<ul>\n<li>\n<p>헤더를 제외하고 TCP가 실을 수 있는 최대 데이터 크기<br />\n기본값은 IPv4 -&gt; 536 Byte, IPv6 -&gt; 1220 Byte이다.<br />\n최대 전송 단위(MTU)에 의해 값이 결정되며, MSS값은 헤더의 MSS 옵션 필드에 저장된다.<br />\n연결에 참여하는 두 장비가 서로 다른 MSS값을 갖을 수도 있다.</p>\n</li>\n<li>\n<p>최대 전송 단위(Maximum Transmission Unit, MTU)<br />\n데이터 링크(2계층) 또는 네트워크(3계층)에서 하나의 프레임 또는 패킷에 담아 운반할 수 있는 헤더를 포함한 최대 데이터 크기<br />\n최소 권고값은 2계층 기준 1500Byte이며, 3계층 기준 IPv4는 MSS 크기에서 40byte(IP헤더+TCP헤더)를 추가한 576Byte이고, IPv6는 1280Byte이다.<br />\n실제로는 최대 65,646바이트 범위까지 생성가능하다.</p>\n</li>\n<li>\n<p>MTU가 IP 기반의 정보인 반면, Maximum Segment Size는 TCP 기반의 정보이다.</p>\n</li>\n<li>\n<p>TCP는 연결지향형으로 제어 메시지들의 교환(Handshaking)이 이루어진다. 핸드쉐이킹을 통해 데이터 교환 전에 송신자 및 수신자의 상태를 초기화한다.</p>\n</li>\n</ul>\n<h3 id=\"tcp-segment\"><a class=\"markdownIt-Anchor\" href=\"#tcp-segment\"></a> TCP Segment</h3>\n<p><img src=\"/images/network/tcp/tcp_segment.png\" alt=\"\" /></p>\n<ul>\n<li>Source port number : 출발지 포트 번호</li>\n<li>Destination port number : 도착지 포트 번호</li>\n<li>Sequence number : 순서번호(Seq#)로, 세그먼트에서 첫 번째 바이트의 바이트 스트림 번호값이 저장된다.</li>\n<li>Response number : 확인응답(누적된 ACK)번호로, 상대방으로부터 받아야할 다음 바이트의 순서번호값이 저장된다.</li>\n<li>Header length : 헤더의 길이로, Option이 없으면 헤더값에 5개의 비트값이 들어간다. 그러나 일반적으로 32비트이다.</li>\n<li>Reservation : 나중에 다시 설명</li>\n<li>Control flag</li>\n<li>Window : 수신측의 윈도우 크기(Window size)로, 받을 수 있는 최대 데이터 크기값이 저장되어 있다.</li>\n<li>TCP Checksum :체크섬값이란 세그먼트의 합에 1의 보수를 취한 값을 말하며, 수신측에서 체크섬과 세그먼트의 실제 데이터를 더한 결과를 통해 오류를 검출한다.</li>\n<li>Emergency Data point : 생략</li>\n<li>Option : 변수의 길이로 설명은 생략.</li>\n<li>Data : 헤더를 제외한 실제 세그먼트에 들어있는 데이터의 크기로 MSS에 의해 제한되어진다.</li>\n</ul>\n<h4 id=\"flag-순서\"><a class=\"markdownIt-Anchor\" href=\"#flag-순서\"></a> FLAG 순서</h4>\n<ul>\n<li>\n<p>구체적으로 flag순서는 URG, PSH, RST, SYN, FIN이고 각각 1비트로 표현되는 값이 저장된다.</p>\n</li>\n<li>\n<p>각각 1비트로 TCP 세그먼트 필드 안에 cONTROL BIT 또는 FLAG BIT 로 정의 되어 있다.<br />\n±------±------±-----±------±------±-----+<br />\n| URG | ACK | PSH | RST | SYN | FIN |<br />\n±------±------±-----±------±------±-----+</p>\n</li>\n<li>\n<p>SYN(Synchronization:동기화) - S : 연결 요청 플래그<br />\nTCP 에서 세션을 성립할 때  가장먼저 보내는 패킷, 시퀀스 번호를 임의적으로 설정하여 세션을 연결하는 데에 사용되며 초기에 시퀀스 번호를 보내게 된다.</p>\n</li>\n<li>\n<p>ACK(Acknowledgement) - Ack : 응답<br />\n상대방으로부터 패킷을 받았다는 걸 알려주는 패킷, 다른 플래그와 같이 출력되는 경우도 있습니다.<br />\n받는 사람이 보낸 사람 시퀀스 번호에 TCP 계층에서 길이 또는 데이터 양을 더한 것과 같은 ACK를 보냅니다.(일반적으로 +1 하여 보냄)<br />\nACK 응답을 통해 보낸 패킷에 대한 성공, 실패를 판단하여 재전송 하거나 다음 패킷을 전송한다.</p>\n</li>\n<li>\n<p>RST(Reset) - R : 제 연결 종료<br />\n재설정(Reset)을 하는 과정이며 양방향에서 동시에 일어나는 중단 작업이다. 비 정상적인 세션 연결 끊기에 해당한다.<br />\n이 패킷을 보내는 곳이 현재 접속하고 있는 곳과 즉시 연결을 끊고자 할 때 사용한다.</p>\n</li>\n<li>\n<p>PSH(Push) - P : 밀어넣기<br />\nTELNET 과 같은 상호작용이 중요한 프로토콜의 경우 빠른 응답이 중요한데, 이 때 받은 데이터를 즉시 목적지인 OSI 7 Layer 의 Application 계층으로 전송하도록 하는 FLAG.<br />\n대화형 트랙픽에 사용되는 것으로 버퍼가 채워지기를 기다리지 않고 데이터를 전달한다. 데이터는 버퍼링 없이 바로 위 계층이 아닌 7 계층의 응용프로그램으로 바로 전달한다.</p>\n</li>\n<li>\n<p>URG(Urgent) - U : 긴급 데이터<br />\nUrgent pointer 유효한 것인지를 나타낸다. Urgent pointer란 전송하는 데이터 중에서 긴급히 전당해야 할 내용이 있을 경우에 사용한다.<br />\n긴급한 데이터는 다른 데이터에 비해 우선순위가 높아야 한다.<br />\nEX) ping 명령어 실행 도중 Ctrl+c 입력</p>\n</li>\n<li>\n<p>FIN(Finish) - F : 연결 종료 요청<br />\n세션 연결을 종료시킬 때 사용되며 더이상 전송할 데이터가 없음을 나타낸다.</p>\n</li>\n<li>\n<p>Placeholder<br />\n패킷의 플래그에 SYN, FINISH, RESET, PUSH등의 플래그가 설정 되어 있지 않은 경우 이 플래그가 세팅된다. 이 플래그는 ACK플래그와 함께 사용되는 경우도 있다.</p>\n</li>\n</ul>\n<h3 id=\"tcp-round-trip-time-timeout\"><a class=\"markdownIt-Anchor\" href=\"#tcp-round-trip-time-timeout\"></a> TCP Round Trip Time, Timeout</h3>\n<ul>\n<li>TCP는 신뢰적인 데이터 전송(RDT)처럼 세그먼트의 손실을 발견하기 위해 타임아웃/재전송 메커니즘을 사용한다. 이 때, 송신측에서 데이터를 전송한 후,<br />\nACK받기까지 걸린 시간을 RTT(Rount Trip Time)이라 표현한다.</li>\n<li>타임아웃(timeout) 주기는 RTT보다 길어야 한다. 너무 짧으면 타임아웃이 자주 발생하여 세그먼트의 불필요한 재전송이 발생하므로 링크를 비효율적으로 사용하게 된다.<br />\n반대로 너무 길게 되면, 세그먼트의 손실에 대한 느린 대응으로 회복이 비효율적이게 된다.</li>\n<li>SampleRTT : 세그먼트가 송신된 시간부터 ACK 받기까지 측정된 시간으로, 재전송한 세그먼트는 무시한다. 값은 네트워크 부하에 따라 가변적이다.</li>\n<li>현재 SampleRTT 값이 아닌 최근의 값들의 평균값으로 추정한다.</li>\n<li>추정RTT : EstimatedRTT = (1-a) * EstimatedRTT + a * SampleRTT<br />\n일반적으로 a=0.125이고, 지수적 가중 이동 평균(EWMA)방식으로 과거 샘플들의 영향이 지수적으로 감소한다. a가 높을수록 SampleRTT에 더 영향을 준다.</li>\n<li>DevRTT : RTT 변화율로, SampleRTT와 EstimatedRTT의 편차값이다. 즉, 현재 RTT값이 추정 RTT값으로부터 얼마나 벗어났는가에 대한 정보이다.</li>\n<li>재전송 타임아웃 주기 (Timeout Interval) = EstimatedRTT + 4 * DevRTT</li>\n<li>타임아웃나서 세그먼트를 재전송하게 되면, 재전송한 세그먼트에 대한 타이머가 시작된다.</li>\n</ul>\n<h3 id=\"tcp의-rdt\"><a class=\"markdownIt-Anchor\" href=\"#tcp의-rdt\"></a> TCP의 RDT</h3>\n<ul>\n<li>TCP는 비신뢰적인 인터넷 네트워크 계층(IP서비스)의 상위 계층에서 신뢰적인 데이터 전달(Reliable Data Transfer, RDT) 서비스를 제공한다.</li>\n<li>파이프라인되는 세그먼트 (ACK의 응답이 없어도 다수의 세그먼트를 전송가능)</li>\n<li>누적된 ACKs</li>\n<li>단 하나의 재전송 타이머</li>\n<li>재전송은 타임아웃이 되거나, 중복 ACKs를 수신했을 경우 발생한다.</li>\n<li>“간소화된 TCP 송신자”는 중복 ACKs를 무시하고 흐름제어 및 혼잡제어를 무시한다.</li>\n</ul>\n<h3 id=\"tcp-송신자의-3가지-상황sender-events\"><a class=\"markdownIt-Anchor\" href=\"#tcp-송신자의-3가지-상황sender-events\"></a> TCP 송신자의 3가지 상황(Sender Events)</h3>\n<ul>\n<li>\n<p>상위 계층으로부터 수신된 데이터 : 데이터를 받았으므로 상위 계층으로부터 데이터 전송 요청이 오게 된다.<br />\n순서번호(Seq#)를 가진 세그먼트 생성 (Seq# : 세그먼트의 첫 번째 바이트의 바이트 스트림 번호)<br />\n타이머가 실행되지 않고 있으면 타이머를 시작한다.<br />\n타이머의 만료주기는 Timout Interval 로 계산한다.</p>\n</li>\n<li>\n<p>타임아웃 : 타임아웃에 의해 세그먼트가 재전송되고, 전송했으나 ACK 받지 않은 가장 오래된 세그먼트에 대해 타이머가 다시 시작한다.</p>\n</li>\n<li>\n<p>ACK를 수신한 경우 : 이전에 ACK받지 않은 세그먼트의 ACK 이면, 해당 세그먼트를 ACK 응답된 세그먼트로 표시한다.<br />\n즉, 윈도우 크기를 조정한다. 아직 ACK받지 못한 세그먼트들이 존재한다면 타이머를 시작한다.</p>\n</li>\n</ul>\n"},{"title":"msa-keyword","date":"2020-04-16T09:53:50.000Z","_content":"### Bus Factor\n- 팀원들 사이에 공유디ㅗ지 않은 지식의 위험에 대한 척도.\n- '만약 버스에 치이면'이라면 표현에서 비롯된 것으로 Truck Factor로도 알려져 있다. 버스 팩터가 낮을수록 더 나쁘다.\n\n### 운영 준비 상태\n- 신뢰성 \n    - 서비스가 가용하고 에러에 대응 할 수 있는가? \n    - 배포 프로세스가 새로운 기능을 배포할 때 불안정성과 결함을 유발하지 않을 것을 신뢰할 수 있는가?\n- 확장성\n    - 서비스가 필요로 하는 리소스와 용량을 이해하는가?\n    - 부하 상황에서 어떻게 서비스의 응답성을 유지할 것인가?\n- 투명성\n    - 로그와 메트릭을 통해 서비스의 운영을 관찰할 수 있는가?\n    - 뭔가 잘못되면 누군가 알림을 받는가?\n- 장애 내성\n    - 단일 장애 지점을 어떻게 극복할 것인가?\n    - 의존하는 다른 서비스의 장애를 어떻게 대응할 것인가?\n\n### MSA 초기 단계 기본 원칙\n- 품질 관리 : 코드 변경을 리뷰하고, 적절한 테스트를 작성하고 소스 코드의 버전 제어를 관리한다.\n- 자동 배포 : 코드 변경을 운영으로 전달하는 것을 완전하게 검증하고 엔지니어의 개입을 최소화 해야한다.\n- 회복성 : 서비스가 어떻게 실패할 수 있고 능동적으로 어떻게 사전에 대책을 강구할 수 있는지를 고려해야 한다.\n- 투명성 : 서비스의 상태와 행동은 관측 가능해야 한다.\n\n### 콘웨이의 법칙(Conway's law)\n- 소프트웨어 구조는 해당 소프트웨어를 개발한 조직의 커뮤니케이션 구조를 닮게 된다.\nhttps://johngrib.github.io/wiki/Conway-s-law/\n\n### 아키텍처 원칙\n- 개발 실무는 외부 표준을 준수해야 한다. (ISO 27001)\n- 모든 데이터는 이동 가능해야 하고 보관 기간을 제한하는 것을 염두에 둬야 한다.\n- 개인 정보는 어플리케이션을 통해 명확하게 추적할 수 있어야 한다.\n\n### Bounded Context\n- 컨텍스트 내의 모델은 응집도가 높고 실 세계와 동일한 뷰를 가진다\n- 명확한 범위와 경계를 가지는 응집된 단위\n\n### OpenAPI Specification \n- https://github.com/OAI/OpenAPI-Specification\n- Community-driven open specification within the OpenAPI Initiative (https://www.openapis.org/)\n\n### YANGI\n- You Aren't Gonna Need It.\n\n### DRY\n- don`t repeat yourself. 중복된 반복 작업\n\n### CAP \n- Consistency (일관성)\n- Availability (가용성)\n- Partition Tolerance (파티션 내성)\n- CAP Twelve Years Later : How the 'Rules' have changed / Http://mng.bz/HGA3 \n- http://ksat.me/a-plain-english-introduction-to-cap-theorem\n\n### CQRS\n\n### choreographed\n- 자율적으로 구성된\n\n### SAGA pattern\n- Life Beyond Distributed Transactions http://queue.acm.org/detail/cfm?id=3025012\n\n\n#### Choreography SAGA Pattern\n#### Orchestration SAGA Pattern (조율된 사가 패턴)\n- netflix conductor\n#### Inten SAGA Pattern (중첩된 사가 패턴)\n- 회로 차단하기 (short-circuiting)\n- 잠그기 (Locking)\n- 인터럽트 (Interruption)\n\n### 일관성 패턴\n1. 보상 동작 : 이전 동작을 없던 일로 하는 동작을 수행한다.\n2. 재시도 : 성공 또는 시간 만료될 때가지 재시도한다.\n3. 무시 : 에러 이벤트가 발생해도 아무것도 하지 않는다.\n4. 재시작 : 원래 상태로 초기화하고 다시 시작한다.\n5. 잠정적 동작 : 잠정적 동작을 수행하고 나중에 확정 또는 취소한다.\n\n### 이벤트 소싱 패턴\n- Nick Chamberlain : awesome-ddd (https://github.com/heynickc/awesome-ddd)\n\n### Cache Problem\n- https://markheath.net/post/troublehooting-caching-problems\n \n### Idempotent\n- 멱등성 : 연산을 여러번 적용 하더라도 결과가 달라지지 않는 성질\n\n### 신뢰할 수 있는 커뮤니케이션 설계하기\n- 재시도 : 기하급수적 백-오프(exponential back-off)\n    - 항상 최대 재시도 횟수를 제한한다.\n    - 기하급수적 백-오프와 지터(무작위 요소; jitter)를 포함해서 재시도 요청을 부드럽게 분산시키고 부하가 몰리는 것을 회피한다.\n    - 어떤 에러 조건에서 재시도를 해야 할지, 그래서 어떤 재시도가 실패할 것 같은지를 고려한다.\n- 폴백\n    - 우아한 서비스의 저하(graceful degradation)\n    - 캐싱 (Caching)\n    - 기능 중복 (Functional redundancy)\n    - 대체 데이터 (Stubbed data)\n- 타임 아웃\n- 회로 차단기 (서킷 브레이커)\n    - half open    \n\n","source":"_posts/msa-keyword.md","raw":"---\ntitle: msa-keyword\ndate: 2020-04-16 18:53:50\ntags:\n- keyword\ncategories:\n- MicroServiceArchitecture\n---\n### Bus Factor\n- 팀원들 사이에 공유디ㅗ지 않은 지식의 위험에 대한 척도.\n- '만약 버스에 치이면'이라면 표현에서 비롯된 것으로 Truck Factor로도 알려져 있다. 버스 팩터가 낮을수록 더 나쁘다.\n\n### 운영 준비 상태\n- 신뢰성 \n    - 서비스가 가용하고 에러에 대응 할 수 있는가? \n    - 배포 프로세스가 새로운 기능을 배포할 때 불안정성과 결함을 유발하지 않을 것을 신뢰할 수 있는가?\n- 확장성\n    - 서비스가 필요로 하는 리소스와 용량을 이해하는가?\n    - 부하 상황에서 어떻게 서비스의 응답성을 유지할 것인가?\n- 투명성\n    - 로그와 메트릭을 통해 서비스의 운영을 관찰할 수 있는가?\n    - 뭔가 잘못되면 누군가 알림을 받는가?\n- 장애 내성\n    - 단일 장애 지점을 어떻게 극복할 것인가?\n    - 의존하는 다른 서비스의 장애를 어떻게 대응할 것인가?\n\n### MSA 초기 단계 기본 원칙\n- 품질 관리 : 코드 변경을 리뷰하고, 적절한 테스트를 작성하고 소스 코드의 버전 제어를 관리한다.\n- 자동 배포 : 코드 변경을 운영으로 전달하는 것을 완전하게 검증하고 엔지니어의 개입을 최소화 해야한다.\n- 회복성 : 서비스가 어떻게 실패할 수 있고 능동적으로 어떻게 사전에 대책을 강구할 수 있는지를 고려해야 한다.\n- 투명성 : 서비스의 상태와 행동은 관측 가능해야 한다.\n\n### 콘웨이의 법칙(Conway's law)\n- 소프트웨어 구조는 해당 소프트웨어를 개발한 조직의 커뮤니케이션 구조를 닮게 된다.\nhttps://johngrib.github.io/wiki/Conway-s-law/\n\n### 아키텍처 원칙\n- 개발 실무는 외부 표준을 준수해야 한다. (ISO 27001)\n- 모든 데이터는 이동 가능해야 하고 보관 기간을 제한하는 것을 염두에 둬야 한다.\n- 개인 정보는 어플리케이션을 통해 명확하게 추적할 수 있어야 한다.\n\n### Bounded Context\n- 컨텍스트 내의 모델은 응집도가 높고 실 세계와 동일한 뷰를 가진다\n- 명확한 범위와 경계를 가지는 응집된 단위\n\n### OpenAPI Specification \n- https://github.com/OAI/OpenAPI-Specification\n- Community-driven open specification within the OpenAPI Initiative (https://www.openapis.org/)\n\n### YANGI\n- You Aren't Gonna Need It.\n\n### DRY\n- don`t repeat yourself. 중복된 반복 작업\n\n### CAP \n- Consistency (일관성)\n- Availability (가용성)\n- Partition Tolerance (파티션 내성)\n- CAP Twelve Years Later : How the 'Rules' have changed / Http://mng.bz/HGA3 \n- http://ksat.me/a-plain-english-introduction-to-cap-theorem\n\n### CQRS\n\n### choreographed\n- 자율적으로 구성된\n\n### SAGA pattern\n- Life Beyond Distributed Transactions http://queue.acm.org/detail/cfm?id=3025012\n\n\n#### Choreography SAGA Pattern\n#### Orchestration SAGA Pattern (조율된 사가 패턴)\n- netflix conductor\n#### Inten SAGA Pattern (중첩된 사가 패턴)\n- 회로 차단하기 (short-circuiting)\n- 잠그기 (Locking)\n- 인터럽트 (Interruption)\n\n### 일관성 패턴\n1. 보상 동작 : 이전 동작을 없던 일로 하는 동작을 수행한다.\n2. 재시도 : 성공 또는 시간 만료될 때가지 재시도한다.\n3. 무시 : 에러 이벤트가 발생해도 아무것도 하지 않는다.\n4. 재시작 : 원래 상태로 초기화하고 다시 시작한다.\n5. 잠정적 동작 : 잠정적 동작을 수행하고 나중에 확정 또는 취소한다.\n\n### 이벤트 소싱 패턴\n- Nick Chamberlain : awesome-ddd (https://github.com/heynickc/awesome-ddd)\n\n### Cache Problem\n- https://markheath.net/post/troublehooting-caching-problems\n \n### Idempotent\n- 멱등성 : 연산을 여러번 적용 하더라도 결과가 달라지지 않는 성질\n\n### 신뢰할 수 있는 커뮤니케이션 설계하기\n- 재시도 : 기하급수적 백-오프(exponential back-off)\n    - 항상 최대 재시도 횟수를 제한한다.\n    - 기하급수적 백-오프와 지터(무작위 요소; jitter)를 포함해서 재시도 요청을 부드럽게 분산시키고 부하가 몰리는 것을 회피한다.\n    - 어떤 에러 조건에서 재시도를 해야 할지, 그래서 어떤 재시도가 실패할 것 같은지를 고려한다.\n- 폴백\n    - 우아한 서비스의 저하(graceful degradation)\n    - 캐싱 (Caching)\n    - 기능 중복 (Functional redundancy)\n    - 대체 데이터 (Stubbed data)\n- 타임 아웃\n- 회로 차단기 (서킷 브레이커)\n    - half open    \n\n","slug":"msa-keyword","published":1,"updated":"2020-07-11T04:51:03.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515b002pqlvo84irefhy","content":"<h3 id=\"bus-factor\"><a class=\"markdownIt-Anchor\" href=\"#bus-factor\"></a> Bus Factor</h3>\n<ul>\n<li>팀원들 사이에 공유디ㅗ지 않은 지식의 위험에 대한 척도.</li>\n<li>'만약 버스에 치이면’이라면 표현에서 비롯된 것으로 Truck Factor로도 알려져 있다. 버스 팩터가 낮을수록 더 나쁘다.</li>\n</ul>\n<h3 id=\"운영-준비-상태\"><a class=\"markdownIt-Anchor\" href=\"#운영-준비-상태\"></a> 운영 준비 상태</h3>\n<ul>\n<li>신뢰성\n<ul>\n<li>서비스가 가용하고 에러에 대응 할 수 있는가?</li>\n<li>배포 프로세스가 새로운 기능을 배포할 때 불안정성과 결함을 유발하지 않을 것을 신뢰할 수 있는가?</li>\n</ul>\n</li>\n<li>확장성\n<ul>\n<li>서비스가 필요로 하는 리소스와 용량을 이해하는가?</li>\n<li>부하 상황에서 어떻게 서비스의 응답성을 유지할 것인가?</li>\n</ul>\n</li>\n<li>투명성\n<ul>\n<li>로그와 메트릭을 통해 서비스의 운영을 관찰할 수 있는가?</li>\n<li>뭔가 잘못되면 누군가 알림을 받는가?</li>\n</ul>\n</li>\n<li>장애 내성\n<ul>\n<li>단일 장애 지점을 어떻게 극복할 것인가?</li>\n<li>의존하는 다른 서비스의 장애를 어떻게 대응할 것인가?</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"msa-초기-단계-기본-원칙\"><a class=\"markdownIt-Anchor\" href=\"#msa-초기-단계-기본-원칙\"></a> MSA 초기 단계 기본 원칙</h3>\n<ul>\n<li>품질 관리 : 코드 변경을 리뷰하고, 적절한 테스트를 작성하고 소스 코드의 버전 제어를 관리한다.</li>\n<li>자동 배포 : 코드 변경을 운영으로 전달하는 것을 완전하게 검증하고 엔지니어의 개입을 최소화 해야한다.</li>\n<li>회복성 : 서비스가 어떻게 실패할 수 있고 능동적으로 어떻게 사전에 대책을 강구할 수 있는지를 고려해야 한다.</li>\n<li>투명성 : 서비스의 상태와 행동은 관측 가능해야 한다.</li>\n</ul>\n<h3 id=\"콘웨이의-법칙conways-law\"><a class=\"markdownIt-Anchor\" href=\"#콘웨이의-법칙conways-law\"></a> 콘웨이의 법칙(Conway’s law)</h3>\n<ul>\n<li>소프트웨어 구조는 해당 소프트웨어를 개발한 조직의 커뮤니케이션 구조를 닮게 된다.<br />\n<a href=\"https://johngrib.github.io/wiki/Conway-s-law/\" target=\"_blank\" rel=\"noopener\">https://johngrib.github.io/wiki/Conway-s-law/</a></li>\n</ul>\n<h3 id=\"아키텍처-원칙\"><a class=\"markdownIt-Anchor\" href=\"#아키텍처-원칙\"></a> 아키텍처 원칙</h3>\n<ul>\n<li>개발 실무는 외부 표준을 준수해야 한다. (ISO 27001)</li>\n<li>모든 데이터는 이동 가능해야 하고 보관 기간을 제한하는 것을 염두에 둬야 한다.</li>\n<li>개인 정보는 어플리케이션을 통해 명확하게 추적할 수 있어야 한다.</li>\n</ul>\n<h3 id=\"bounded-context\"><a class=\"markdownIt-Anchor\" href=\"#bounded-context\"></a> Bounded Context</h3>\n<ul>\n<li>컨텍스트 내의 모델은 응집도가 높고 실 세계와 동일한 뷰를 가진다</li>\n<li>명확한 범위와 경계를 가지는 응집된 단위</li>\n</ul>\n<h3 id=\"openapi-specification\"><a class=\"markdownIt-Anchor\" href=\"#openapi-specification\"></a> OpenAPI Specification</h3>\n<ul>\n<li><a href=\"https://github.com/OAI/OpenAPI-Specification\" target=\"_blank\" rel=\"noopener\">https://github.com/OAI/OpenAPI-Specification</a></li>\n<li>Community-driven open specification within the OpenAPI Initiative (<a href=\"https://www.openapis.org/\" target=\"_blank\" rel=\"noopener\">https://www.openapis.org/</a>)</li>\n</ul>\n<h3 id=\"yangi\"><a class=\"markdownIt-Anchor\" href=\"#yangi\"></a> YANGI</h3>\n<ul>\n<li>You Aren’t Gonna Need It.</li>\n</ul>\n<h3 id=\"dry\"><a class=\"markdownIt-Anchor\" href=\"#dry\"></a> DRY</h3>\n<ul>\n<li>don`t repeat yourself. 중복된 반복 작업</li>\n</ul>\n<h3 id=\"cap\"><a class=\"markdownIt-Anchor\" href=\"#cap\"></a> CAP</h3>\n<ul>\n<li>Consistency (일관성)</li>\n<li>Availability (가용성)</li>\n<li>Partition Tolerance (파티션 내성)</li>\n<li>CAP Twelve Years Later : How the ‘Rules’ have changed / <a href=\"Http://mng.bz/HGA3\" target=\"_blank\" rel=\"noopener\">Http://mng.bz/HGA3</a></li>\n<li><a href=\"http://ksat.me/a-plain-english-introduction-to-cap-theorem\" target=\"_blank\" rel=\"noopener\">http://ksat.me/a-plain-english-introduction-to-cap-theorem</a></li>\n</ul>\n<h3 id=\"cqrs\"><a class=\"markdownIt-Anchor\" href=\"#cqrs\"></a> CQRS</h3>\n<h3 id=\"choreographed\"><a class=\"markdownIt-Anchor\" href=\"#choreographed\"></a> choreographed</h3>\n<ul>\n<li>자율적으로 구성된</li>\n</ul>\n<h3 id=\"saga-pattern\"><a class=\"markdownIt-Anchor\" href=\"#saga-pattern\"></a> SAGA pattern</h3>\n<ul>\n<li>Life Beyond Distributed Transactions <a href=\"http://queue.acm.org/detail/cfm?id=3025012\" target=\"_blank\" rel=\"noopener\">http://queue.acm.org/detail/cfm?id=3025012</a></li>\n</ul>\n<h4 id=\"choreography-saga-pattern\"><a class=\"markdownIt-Anchor\" href=\"#choreography-saga-pattern\"></a> Choreography SAGA Pattern</h4>\n<h4 id=\"orchestration-saga-pattern-조율된-사가-패턴\"><a class=\"markdownIt-Anchor\" href=\"#orchestration-saga-pattern-조율된-사가-패턴\"></a> Orchestration SAGA Pattern (조율된 사가 패턴)</h4>\n<ul>\n<li>netflix conductor</li>\n</ul>\n<h4 id=\"inten-saga-pattern-중첩된-사가-패턴\"><a class=\"markdownIt-Anchor\" href=\"#inten-saga-pattern-중첩된-사가-패턴\"></a> Inten SAGA Pattern (중첩된 사가 패턴)</h4>\n<ul>\n<li>회로 차단하기 (short-circuiting)</li>\n<li>잠그기 (Locking)</li>\n<li>인터럽트 (Interruption)</li>\n</ul>\n<h3 id=\"일관성-패턴\"><a class=\"markdownIt-Anchor\" href=\"#일관성-패턴\"></a> 일관성 패턴</h3>\n<ol>\n<li>보상 동작 : 이전 동작을 없던 일로 하는 동작을 수행한다.</li>\n<li>재시도 : 성공 또는 시간 만료될 때가지 재시도한다.</li>\n<li>무시 : 에러 이벤트가 발생해도 아무것도 하지 않는다.</li>\n<li>재시작 : 원래 상태로 초기화하고 다시 시작한다.</li>\n<li>잠정적 동작 : 잠정적 동작을 수행하고 나중에 확정 또는 취소한다.</li>\n</ol>\n<h3 id=\"이벤트-소싱-패턴\"><a class=\"markdownIt-Anchor\" href=\"#이벤트-소싱-패턴\"></a> 이벤트 소싱 패턴</h3>\n<ul>\n<li>Nick Chamberlain : awesome-ddd (<a href=\"https://github.com/heynickc/awesome-ddd\" target=\"_blank\" rel=\"noopener\">https://github.com/heynickc/awesome-ddd</a>)</li>\n</ul>\n<h3 id=\"cache-problem\"><a class=\"markdownIt-Anchor\" href=\"#cache-problem\"></a> Cache Problem</h3>\n<ul>\n<li><a href=\"https://markheath.net/post/troublehooting-caching-problems\" target=\"_blank\" rel=\"noopener\">https://markheath.net/post/troublehooting-caching-problems</a></li>\n</ul>\n<h3 id=\"idempotent\"><a class=\"markdownIt-Anchor\" href=\"#idempotent\"></a> Idempotent</h3>\n<ul>\n<li>멱등성 : 연산을 여러번 적용 하더라도 결과가 달라지지 않는 성질</li>\n</ul>\n<h3 id=\"신뢰할-수-있는-커뮤니케이션-설계하기\"><a class=\"markdownIt-Anchor\" href=\"#신뢰할-수-있는-커뮤니케이션-설계하기\"></a> 신뢰할 수 있는 커뮤니케이션 설계하기</h3>\n<ul>\n<li>재시도 : 기하급수적 백-오프(exponential back-off)\n<ul>\n<li>항상 최대 재시도 횟수를 제한한다.</li>\n<li>기하급수적 백-오프와 지터(무작위 요소; jitter)를 포함해서 재시도 요청을 부드럽게 분산시키고 부하가 몰리는 것을 회피한다.</li>\n<li>어떤 에러 조건에서 재시도를 해야 할지, 그래서 어떤 재시도가 실패할 것 같은지를 고려한다.</li>\n</ul>\n</li>\n<li>폴백\n<ul>\n<li>우아한 서비스의 저하(graceful degradation)</li>\n<li>캐싱 (Caching)</li>\n<li>기능 중복 (Functional redundancy)</li>\n<li>대체 데이터 (Stubbed data)</li>\n</ul>\n</li>\n<li>타임 아웃</li>\n<li>회로 차단기 (서킷 브레이커)\n<ul>\n<li>half open</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"bus-factor\"><a class=\"markdownIt-Anchor\" href=\"#bus-factor\"></a> Bus Factor</h3>\n<ul>\n<li>팀원들 사이에 공유디ㅗ지 않은 지식의 위험에 대한 척도.</li>\n<li>'만약 버스에 치이면’이라면 표현에서 비롯된 것으로 Truck Factor로도 알려져 있다. 버스 팩터가 낮을수록 더 나쁘다.</li>\n</ul>\n<h3 id=\"운영-준비-상태\"><a class=\"markdownIt-Anchor\" href=\"#운영-준비-상태\"></a> 운영 준비 상태</h3>\n<ul>\n<li>신뢰성\n<ul>\n<li>서비스가 가용하고 에러에 대응 할 수 있는가?</li>\n<li>배포 프로세스가 새로운 기능을 배포할 때 불안정성과 결함을 유발하지 않을 것을 신뢰할 수 있는가?</li>\n</ul>\n</li>\n<li>확장성\n<ul>\n<li>서비스가 필요로 하는 리소스와 용량을 이해하는가?</li>\n<li>부하 상황에서 어떻게 서비스의 응답성을 유지할 것인가?</li>\n</ul>\n</li>\n<li>투명성\n<ul>\n<li>로그와 메트릭을 통해 서비스의 운영을 관찰할 수 있는가?</li>\n<li>뭔가 잘못되면 누군가 알림을 받는가?</li>\n</ul>\n</li>\n<li>장애 내성\n<ul>\n<li>단일 장애 지점을 어떻게 극복할 것인가?</li>\n<li>의존하는 다른 서비스의 장애를 어떻게 대응할 것인가?</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"msa-초기-단계-기본-원칙\"><a class=\"markdownIt-Anchor\" href=\"#msa-초기-단계-기본-원칙\"></a> MSA 초기 단계 기본 원칙</h3>\n<ul>\n<li>품질 관리 : 코드 변경을 리뷰하고, 적절한 테스트를 작성하고 소스 코드의 버전 제어를 관리한다.</li>\n<li>자동 배포 : 코드 변경을 운영으로 전달하는 것을 완전하게 검증하고 엔지니어의 개입을 최소화 해야한다.</li>\n<li>회복성 : 서비스가 어떻게 실패할 수 있고 능동적으로 어떻게 사전에 대책을 강구할 수 있는지를 고려해야 한다.</li>\n<li>투명성 : 서비스의 상태와 행동은 관측 가능해야 한다.</li>\n</ul>\n<h3 id=\"콘웨이의-법칙conways-law\"><a class=\"markdownIt-Anchor\" href=\"#콘웨이의-법칙conways-law\"></a> 콘웨이의 법칙(Conway’s law)</h3>\n<ul>\n<li>소프트웨어 구조는 해당 소프트웨어를 개발한 조직의 커뮤니케이션 구조를 닮게 된다.<br />\n<a href=\"https://johngrib.github.io/wiki/Conway-s-law/\" target=\"_blank\" rel=\"noopener\">https://johngrib.github.io/wiki/Conway-s-law/</a></li>\n</ul>\n<h3 id=\"아키텍처-원칙\"><a class=\"markdownIt-Anchor\" href=\"#아키텍처-원칙\"></a> 아키텍처 원칙</h3>\n<ul>\n<li>개발 실무는 외부 표준을 준수해야 한다. (ISO 27001)</li>\n<li>모든 데이터는 이동 가능해야 하고 보관 기간을 제한하는 것을 염두에 둬야 한다.</li>\n<li>개인 정보는 어플리케이션을 통해 명확하게 추적할 수 있어야 한다.</li>\n</ul>\n<h3 id=\"bounded-context\"><a class=\"markdownIt-Anchor\" href=\"#bounded-context\"></a> Bounded Context</h3>\n<ul>\n<li>컨텍스트 내의 모델은 응집도가 높고 실 세계와 동일한 뷰를 가진다</li>\n<li>명확한 범위와 경계를 가지는 응집된 단위</li>\n</ul>\n<h3 id=\"openapi-specification\"><a class=\"markdownIt-Anchor\" href=\"#openapi-specification\"></a> OpenAPI Specification</h3>\n<ul>\n<li><a href=\"https://github.com/OAI/OpenAPI-Specification\" target=\"_blank\" rel=\"noopener\">https://github.com/OAI/OpenAPI-Specification</a></li>\n<li>Community-driven open specification within the OpenAPI Initiative (<a href=\"https://www.openapis.org/\" target=\"_blank\" rel=\"noopener\">https://www.openapis.org/</a>)</li>\n</ul>\n<h3 id=\"yangi\"><a class=\"markdownIt-Anchor\" href=\"#yangi\"></a> YANGI</h3>\n<ul>\n<li>You Aren’t Gonna Need It.</li>\n</ul>\n<h3 id=\"dry\"><a class=\"markdownIt-Anchor\" href=\"#dry\"></a> DRY</h3>\n<ul>\n<li>don`t repeat yourself. 중복된 반복 작업</li>\n</ul>\n<h3 id=\"cap\"><a class=\"markdownIt-Anchor\" href=\"#cap\"></a> CAP</h3>\n<ul>\n<li>Consistency (일관성)</li>\n<li>Availability (가용성)</li>\n<li>Partition Tolerance (파티션 내성)</li>\n<li>CAP Twelve Years Later : How the ‘Rules’ have changed / <a href=\"Http://mng.bz/HGA3\" target=\"_blank\" rel=\"noopener\">Http://mng.bz/HGA3</a></li>\n<li><a href=\"http://ksat.me/a-plain-english-introduction-to-cap-theorem\" target=\"_blank\" rel=\"noopener\">http://ksat.me/a-plain-english-introduction-to-cap-theorem</a></li>\n</ul>\n<h3 id=\"cqrs\"><a class=\"markdownIt-Anchor\" href=\"#cqrs\"></a> CQRS</h3>\n<h3 id=\"choreographed\"><a class=\"markdownIt-Anchor\" href=\"#choreographed\"></a> choreographed</h3>\n<ul>\n<li>자율적으로 구성된</li>\n</ul>\n<h3 id=\"saga-pattern\"><a class=\"markdownIt-Anchor\" href=\"#saga-pattern\"></a> SAGA pattern</h3>\n<ul>\n<li>Life Beyond Distributed Transactions <a href=\"http://queue.acm.org/detail/cfm?id=3025012\" target=\"_blank\" rel=\"noopener\">http://queue.acm.org/detail/cfm?id=3025012</a></li>\n</ul>\n<h4 id=\"choreography-saga-pattern\"><a class=\"markdownIt-Anchor\" href=\"#choreography-saga-pattern\"></a> Choreography SAGA Pattern</h4>\n<h4 id=\"orchestration-saga-pattern-조율된-사가-패턴\"><a class=\"markdownIt-Anchor\" href=\"#orchestration-saga-pattern-조율된-사가-패턴\"></a> Orchestration SAGA Pattern (조율된 사가 패턴)</h4>\n<ul>\n<li>netflix conductor</li>\n</ul>\n<h4 id=\"inten-saga-pattern-중첩된-사가-패턴\"><a class=\"markdownIt-Anchor\" href=\"#inten-saga-pattern-중첩된-사가-패턴\"></a> Inten SAGA Pattern (중첩된 사가 패턴)</h4>\n<ul>\n<li>회로 차단하기 (short-circuiting)</li>\n<li>잠그기 (Locking)</li>\n<li>인터럽트 (Interruption)</li>\n</ul>\n<h3 id=\"일관성-패턴\"><a class=\"markdownIt-Anchor\" href=\"#일관성-패턴\"></a> 일관성 패턴</h3>\n<ol>\n<li>보상 동작 : 이전 동작을 없던 일로 하는 동작을 수행한다.</li>\n<li>재시도 : 성공 또는 시간 만료될 때가지 재시도한다.</li>\n<li>무시 : 에러 이벤트가 발생해도 아무것도 하지 않는다.</li>\n<li>재시작 : 원래 상태로 초기화하고 다시 시작한다.</li>\n<li>잠정적 동작 : 잠정적 동작을 수행하고 나중에 확정 또는 취소한다.</li>\n</ol>\n<h3 id=\"이벤트-소싱-패턴\"><a class=\"markdownIt-Anchor\" href=\"#이벤트-소싱-패턴\"></a> 이벤트 소싱 패턴</h3>\n<ul>\n<li>Nick Chamberlain : awesome-ddd (<a href=\"https://github.com/heynickc/awesome-ddd\" target=\"_blank\" rel=\"noopener\">https://github.com/heynickc/awesome-ddd</a>)</li>\n</ul>\n<h3 id=\"cache-problem\"><a class=\"markdownIt-Anchor\" href=\"#cache-problem\"></a> Cache Problem</h3>\n<ul>\n<li><a href=\"https://markheath.net/post/troublehooting-caching-problems\" target=\"_blank\" rel=\"noopener\">https://markheath.net/post/troublehooting-caching-problems</a></li>\n</ul>\n<h3 id=\"idempotent\"><a class=\"markdownIt-Anchor\" href=\"#idempotent\"></a> Idempotent</h3>\n<ul>\n<li>멱등성 : 연산을 여러번 적용 하더라도 결과가 달라지지 않는 성질</li>\n</ul>\n<h3 id=\"신뢰할-수-있는-커뮤니케이션-설계하기\"><a class=\"markdownIt-Anchor\" href=\"#신뢰할-수-있는-커뮤니케이션-설계하기\"></a> 신뢰할 수 있는 커뮤니케이션 설계하기</h3>\n<ul>\n<li>재시도 : 기하급수적 백-오프(exponential back-off)\n<ul>\n<li>항상 최대 재시도 횟수를 제한한다.</li>\n<li>기하급수적 백-오프와 지터(무작위 요소; jitter)를 포함해서 재시도 요청을 부드럽게 분산시키고 부하가 몰리는 것을 회피한다.</li>\n<li>어떤 에러 조건에서 재시도를 해야 할지, 그래서 어떤 재시도가 실패할 것 같은지를 고려한다.</li>\n</ul>\n</li>\n<li>폴백\n<ul>\n<li>우아한 서비스의 저하(graceful degradation)</li>\n<li>캐싱 (Caching)</li>\n<li>기능 중복 (Functional redundancy)</li>\n<li>대체 데이터 (Stubbed data)</li>\n</ul>\n</li>\n<li>타임 아웃</li>\n<li>회로 차단기 (서킷 브레이커)\n<ul>\n<li>half open</li>\n</ul>\n</li>\n</ul>\n"},{"title":"probability-statistics-basic","date":"2020-05-18T06:33:03.000Z","_content":"\n## 확률\n- 확률\n    확률 = 어떤 사건이 발생할 수 있는 경우의 가짓수 / 모든 경우의 가짓 수\n    \n- 여사건\n    - 사건 A가 발생하지 않을 사건\n    - $P(\\overline{A}) = 1 - P$\n\n- 합사건\n    - 사건 A와 사건 B중에서 어느 한쪽이 발생할 사건\n    - $P(A \\cup B) = P(A) + P(B) - P(A \\cap B)$\n    \n- 곱사건\n    - 사건 A와 B가 동시에 일어나는 사건\n    - $P(A \\cap B) = P(A)P(B)$\n    \n## 확률 변수와 확률 분포\n- 확률 변수\n    - 어떤 변수 X를 P(X)의 확률로 나오게 할 수 있다면, 이 X는 확률 변수라고 말할 수 있다.\n    - 이산 확률 변수\n        - 어떤 사건의 이산확률 변수가 X일 때, 그에 대한 확률 P는 이산확률분포 f(x)를 따른다\n        - P(X) = f(x)\n        - histogram\n    - 연속 확률 변수\n        - 어떤 사건의 연속확률 변수가 X일 때, 그에 대한 확률 P는 연속확률분포 f(x)를 지정한 X의 구간 안에서 적분한 값과 같다.\n        - $P\\big(a \\leq X \\leq b \\big) = \\int_a^b f(x)\\,dx$\n        \n## 결합 확률과 조건부 확률\n- 결합 확률\n    - 사건 A와 사건 B가 서로 독립된 사건일 때, 두 사건의 결합확률은 다음과 같다.\n    - $P(A \\cup B) = P(A) + P(B)$\n- 조건부 확률\n    - 사건 B가 일어났을 때, 사건 A가 일어날 조건부 확률은 다음과 같다.\n    - $P(A | B) = \\dfrac {P(A\\cap B)} {P(B)}$\n\n## 기댓값\n- 기댓값 : X가 확률 변수이고 확률 P(X)인 사건이 존재할 때, 예상할수 있는 결과값이 기댓값이다.\n- $E(X) = \\sum P(X) \\cdotp X$\n- X와 Y가 서로 *독립된* 확률변수이고 k는 상수라고 할 때 다음 식이 성립한다.\n    - $E(k) = k$ (상수의 기대값은 상수가 된다)\n    - $E(kX) = kE(X)$ (확률변수를 상수 배 하면 기댓값도 상수 배가 된다)\n    - $E(X+Y) = E(X) + E(Y)$ (확률 변수들 합의 기대값은 각 기대값의 합과 같다)\n    - X와 Y가 서로 독립일 때 $E(XY) = E(X) \\cdotp E(Y)$ (독립적인 확률변수의 곱에 대한 기댓값은 각 기댓값의 곱과 같다)\n\n## 평균과 분산 그리고 공분산\n- 평균\n    - n개의 확률변수가 각각 $x_1, x_2, \\cdotp\\cdotp\\cdotp, x_n$ 이라는 값을 가질 때 평균값 $\\overline x$는 다음과 같다.\n    $$\\overline x =\\sum_{k=1}^{n}{\\frac 1 n}\\cdotp x_k = {\\frac 1 n}\\sum_{k=1}^{n}x_k $$\n- 분산\n    - n개의 확률변수가 각각 $x_1, x_2, \\cdotp\\cdotp\\cdotp, x_n$ 이라는 값을 가지고 평균값이 $\\overline x$일때 분산 $\\sigma^2$는 다음과 같다.\n    $$\\sigma^2 = {\\frac 1 n}\\sum_{k=1}^{n}{(x_k - \\overline x)}^2$$\n    $$\\sigma = \\sqrt{\\sigma^2} = \\sqrt{ {\\frac 1 n}\\sum_{k=1}^{n}{(x_k - \\overline x)}^2 }$$\n- 공분산\n    - 두 가지 데이터에 대한 n조의 확률변수 (X,Y) = $\\{(x_1,y_1),(x_2,y_2),...,(x_n, y_n\\}$ 이 있다고 가정한다.\n    - x의 평균이 $\\mu_x$이고 Y의 평균이 $\\mu_y$라고 할 때 공분산 Cov(X,Y)는 다음과 같다.\n    $$COV(X,Y) = {\\frac 1 n} \\sum_{k=1}^{n}{(x_k - \\mu_x)(y_k - \\mu_y)}$$\n    - 다른 두 데이터 간의 관계를 표현하는 지표이기 때문에 공분산을 계산할 때는 단위에 대해 신경쓸 필요가 없다.\n    - 공분산이 양의 값을 가질 때, 두가지 데이터는 양의 관계가 있다고 하고, 공분산이 음의 값을 가질 때 두가지 데이터는 음의 관계가 있다고 한다.\n    \n## 상관계수\n- 상관계수\n    - 확률 변수 X와 Y가 분산이 양수이고 각각의 표준편차가 $\\sigma_x$, $\\sigma_y$, 공분산이 $\\sigma_xy$라고 할 때의 상관게수 $(-1 \\le \\rho \\le 1)$ 는 다음과 같다.\n    - $$\\rho = \\frac {\\sigma_xy} {\\sigma_x \\sigma_y}$$\n    - 상관계수 $\\rho$는 +1에 가까울 수록 양의 관계가 강하고, -1에 가까울수록 음의 관계가 강합니다. 상관관계가 0에 가까울수록 상관관계가 약하다고 보는데,\n    일반적으로 상관계수의 절대값이 0.7보다 클 때 상관계수가 강하다고 말한다.\n    \n## 최대 가능도 추정\n- 최대 가능도 추정이란 '가장 그럴듯 하게 추정' 한다는 의미로, 영어로는 가능도를 'likelihood'라고 표현합니다.\n- 최대 가능도를 추정한 다는 말은 곧, 파라미터 $\\theta$에 대한 가능도함수 $L(\\theta)$를 최대화 할 수 있는 $\\theta$값을 구하는 것을 의미한다.\n- 1차 미분을 했을 때 ${\\frac {dL(\\theta)} {d\\theta}} =0$ 이 되는 지점을 의미한다.\n- 극값은 그래프에서 값이 변곡되는 곳에서 발생하기 때문에 0이 되는 지점은 최소값 혹은 최대값이 될 수 있다.\n\n## 로그 가능도 함수\n- 가능도 함수에 자연로그를 붙여 로그 가능도 함수 ${\\frac {d} {d\\theta}}\\log_eL(\\theta) = 0$를 만들면 된다.\n- 일반적인 이산확률분포의 식은 확률의 곱으로 표현되는 일이 많다 보니 미분 자체가 어려운 경우가 많다.\n- 로그를 사용하면 곱셈을 덧셈으로 만들고 수식의 차원을 낮춰 계산을 용이하게 하는 장점이 있다.\n- 가능도 함수 $L(\\theta_1,\\theta_2,...,\\theta_m)$을 최대로 하는 $\\theta_1,\\theta_2,...,\\theta_m$는 다음 방정식을 만족한다.  \n  $${\\frac {\\partial}{\\partial\\theta_1}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0$$\n  $${\\frac {\\partial}{\\partial\\theta_2}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0$$\n  $${\\frac {\\partial}{\\partial\\theta_m}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0$$\n  \n## 선형 회귀 모델\n- 회귀 모델이란 하나의 목적변수(종속변수)를 하나 이상의 설명변수(독립변수)로 기술한 관계식이다.\n- $\\omega_0, \\omega_1,... \\omega_l$을 계수(가중치)라고 하고, $x_1,x_2,...,x_l$을 설명 변수라고 할 때 목적변수 y의 선형회귀 모델은 다음과 같이 기술 할 수 있다.\n    $$y = \\omega_0 + \\sum_{k=1}^{l}{\\omega_kx_k}$$\n    $$y = \\omega_0 + \\omega_1x_1 + \\omega_2x_2 + \\omega_3x_3 + \\cdots + \\omega_lx_l$$\n    $$\\begin {bmatrix}\n       y1 \\\\ y2 \\\\ {\\vdots} \\\\ y_n \n       \\end{bmatrix} = \n       \\begin {bmatrix}\n       1 & x_11 & x_12 & {\\cdots} & x_1l \\\\\n       1 & x_21 & x_22 & {\\cdots} & x_1l \\\\ \n       {\\vdots} & {\\vdots} & {\\vdots} & {\\vdots} & {\\vdots} \\\\ \n       1 & x_n1 & x_n2 & {\\cdotp\\cdotp\\cdotp} & x_nl \\\\\n       \\end{bmatrix} \n       \\begin {bmatrix}\n       \\omega_0 \\\\\n       \\omega_1 \\\\\n       {\\vdots} \\\\\n       \\omega_l \\\\\n       \\end{bmatrix}\n     $$\n     \n## 최소 제곱법\n- 모델식에 가장 잘 들어맞는 가중치를 찾는 것이 중요한데, 이때 사용할 수 있는 근사법으로 *최소제곱법*이라는 것이 있다.\n- 최소제곱법에서는 데이터 세트와 같은 수치 데이터들을 1차 함수와 같은 특정 함수를 사용하여 근사적으로 표현할 수 있다고 가정한다.\n- 목적변수를 Y, 설명변수를 $X_1, X_2, X_3,... ,X_l$ 그리고 모델식을 $f(X_1, X_2,... ,X_l)$이라고 할때, \n  최소 제곱법을 적용 하는 과정은 오차의 제곱합 D를 최소화 하는 $f(X_1, X_2,... ,X_l)$를 구하는 것이다.\n- $D = \\sum_{k=1}^{n}({y_k - f(x_k1, x_k2, \\cdots, x_kl}))^2$\n- $f(x_k1, x_k2, \\cdots, x_kl) = \\sum_{m=1}^{l}w_mx_km + \\omega_0$\n- 각 변수의 편미분을 진행하면\n  ${\\frac {\\partial D}{\\partial\\omega_0}} = 0$,  ${\\frac {\\partial D}{\\partial\\omega_1}} = 0$ , $\\cdots$, $  ${\\frac {\\partial D}{\\partial\\omega_l}} = 0$\n- 구하고자 하는 변수와 연립방정식이 l+1개가 있으므로 $\\omega_0, \\omega_1, \\cdots, \\omega_l$의 값을 구하는 것은 어렵지 않다.\n- 선형 회귀 모델에서는 최소제곱법을 사용해서 가중치의 값을 결정한다.\n\n\n\n","source":"_posts/probability-statistics-basic.md","raw":"---\ntitle: probability-statistics-basic\ndate: 2020-05-18 15:33:03\ntags:\n---\n\n## 확률\n- 확률\n    확률 = 어떤 사건이 발생할 수 있는 경우의 가짓수 / 모든 경우의 가짓 수\n    \n- 여사건\n    - 사건 A가 발생하지 않을 사건\n    - $P(\\overline{A}) = 1 - P$\n\n- 합사건\n    - 사건 A와 사건 B중에서 어느 한쪽이 발생할 사건\n    - $P(A \\cup B) = P(A) + P(B) - P(A \\cap B)$\n    \n- 곱사건\n    - 사건 A와 B가 동시에 일어나는 사건\n    - $P(A \\cap B) = P(A)P(B)$\n    \n## 확률 변수와 확률 분포\n- 확률 변수\n    - 어떤 변수 X를 P(X)의 확률로 나오게 할 수 있다면, 이 X는 확률 변수라고 말할 수 있다.\n    - 이산 확률 변수\n        - 어떤 사건의 이산확률 변수가 X일 때, 그에 대한 확률 P는 이산확률분포 f(x)를 따른다\n        - P(X) = f(x)\n        - histogram\n    - 연속 확률 변수\n        - 어떤 사건의 연속확률 변수가 X일 때, 그에 대한 확률 P는 연속확률분포 f(x)를 지정한 X의 구간 안에서 적분한 값과 같다.\n        - $P\\big(a \\leq X \\leq b \\big) = \\int_a^b f(x)\\,dx$\n        \n## 결합 확률과 조건부 확률\n- 결합 확률\n    - 사건 A와 사건 B가 서로 독립된 사건일 때, 두 사건의 결합확률은 다음과 같다.\n    - $P(A \\cup B) = P(A) + P(B)$\n- 조건부 확률\n    - 사건 B가 일어났을 때, 사건 A가 일어날 조건부 확률은 다음과 같다.\n    - $P(A | B) = \\dfrac {P(A\\cap B)} {P(B)}$\n\n## 기댓값\n- 기댓값 : X가 확률 변수이고 확률 P(X)인 사건이 존재할 때, 예상할수 있는 결과값이 기댓값이다.\n- $E(X) = \\sum P(X) \\cdotp X$\n- X와 Y가 서로 *독립된* 확률변수이고 k는 상수라고 할 때 다음 식이 성립한다.\n    - $E(k) = k$ (상수의 기대값은 상수가 된다)\n    - $E(kX) = kE(X)$ (확률변수를 상수 배 하면 기댓값도 상수 배가 된다)\n    - $E(X+Y) = E(X) + E(Y)$ (확률 변수들 합의 기대값은 각 기대값의 합과 같다)\n    - X와 Y가 서로 독립일 때 $E(XY) = E(X) \\cdotp E(Y)$ (독립적인 확률변수의 곱에 대한 기댓값은 각 기댓값의 곱과 같다)\n\n## 평균과 분산 그리고 공분산\n- 평균\n    - n개의 확률변수가 각각 $x_1, x_2, \\cdotp\\cdotp\\cdotp, x_n$ 이라는 값을 가질 때 평균값 $\\overline x$는 다음과 같다.\n    $$\\overline x =\\sum_{k=1}^{n}{\\frac 1 n}\\cdotp x_k = {\\frac 1 n}\\sum_{k=1}^{n}x_k $$\n- 분산\n    - n개의 확률변수가 각각 $x_1, x_2, \\cdotp\\cdotp\\cdotp, x_n$ 이라는 값을 가지고 평균값이 $\\overline x$일때 분산 $\\sigma^2$는 다음과 같다.\n    $$\\sigma^2 = {\\frac 1 n}\\sum_{k=1}^{n}{(x_k - \\overline x)}^2$$\n    $$\\sigma = \\sqrt{\\sigma^2} = \\sqrt{ {\\frac 1 n}\\sum_{k=1}^{n}{(x_k - \\overline x)}^2 }$$\n- 공분산\n    - 두 가지 데이터에 대한 n조의 확률변수 (X,Y) = $\\{(x_1,y_1),(x_2,y_2),...,(x_n, y_n\\}$ 이 있다고 가정한다.\n    - x의 평균이 $\\mu_x$이고 Y의 평균이 $\\mu_y$라고 할 때 공분산 Cov(X,Y)는 다음과 같다.\n    $$COV(X,Y) = {\\frac 1 n} \\sum_{k=1}^{n}{(x_k - \\mu_x)(y_k - \\mu_y)}$$\n    - 다른 두 데이터 간의 관계를 표현하는 지표이기 때문에 공분산을 계산할 때는 단위에 대해 신경쓸 필요가 없다.\n    - 공분산이 양의 값을 가질 때, 두가지 데이터는 양의 관계가 있다고 하고, 공분산이 음의 값을 가질 때 두가지 데이터는 음의 관계가 있다고 한다.\n    \n## 상관계수\n- 상관계수\n    - 확률 변수 X와 Y가 분산이 양수이고 각각의 표준편차가 $\\sigma_x$, $\\sigma_y$, 공분산이 $\\sigma_xy$라고 할 때의 상관게수 $(-1 \\le \\rho \\le 1)$ 는 다음과 같다.\n    - $$\\rho = \\frac {\\sigma_xy} {\\sigma_x \\sigma_y}$$\n    - 상관계수 $\\rho$는 +1에 가까울 수록 양의 관계가 강하고, -1에 가까울수록 음의 관계가 강합니다. 상관관계가 0에 가까울수록 상관관계가 약하다고 보는데,\n    일반적으로 상관계수의 절대값이 0.7보다 클 때 상관계수가 강하다고 말한다.\n    \n## 최대 가능도 추정\n- 최대 가능도 추정이란 '가장 그럴듯 하게 추정' 한다는 의미로, 영어로는 가능도를 'likelihood'라고 표현합니다.\n- 최대 가능도를 추정한 다는 말은 곧, 파라미터 $\\theta$에 대한 가능도함수 $L(\\theta)$를 최대화 할 수 있는 $\\theta$값을 구하는 것을 의미한다.\n- 1차 미분을 했을 때 ${\\frac {dL(\\theta)} {d\\theta}} =0$ 이 되는 지점을 의미한다.\n- 극값은 그래프에서 값이 변곡되는 곳에서 발생하기 때문에 0이 되는 지점은 최소값 혹은 최대값이 될 수 있다.\n\n## 로그 가능도 함수\n- 가능도 함수에 자연로그를 붙여 로그 가능도 함수 ${\\frac {d} {d\\theta}}\\log_eL(\\theta) = 0$를 만들면 된다.\n- 일반적인 이산확률분포의 식은 확률의 곱으로 표현되는 일이 많다 보니 미분 자체가 어려운 경우가 많다.\n- 로그를 사용하면 곱셈을 덧셈으로 만들고 수식의 차원을 낮춰 계산을 용이하게 하는 장점이 있다.\n- 가능도 함수 $L(\\theta_1,\\theta_2,...,\\theta_m)$을 최대로 하는 $\\theta_1,\\theta_2,...,\\theta_m$는 다음 방정식을 만족한다.  \n  $${\\frac {\\partial}{\\partial\\theta_1}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0$$\n  $${\\frac {\\partial}{\\partial\\theta_2}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0$$\n  $${\\frac {\\partial}{\\partial\\theta_m}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0$$\n  \n## 선형 회귀 모델\n- 회귀 모델이란 하나의 목적변수(종속변수)를 하나 이상의 설명변수(독립변수)로 기술한 관계식이다.\n- $\\omega_0, \\omega_1,... \\omega_l$을 계수(가중치)라고 하고, $x_1,x_2,...,x_l$을 설명 변수라고 할 때 목적변수 y의 선형회귀 모델은 다음과 같이 기술 할 수 있다.\n    $$y = \\omega_0 + \\sum_{k=1}^{l}{\\omega_kx_k}$$\n    $$y = \\omega_0 + \\omega_1x_1 + \\omega_2x_2 + \\omega_3x_3 + \\cdots + \\omega_lx_l$$\n    $$\\begin {bmatrix}\n       y1 \\\\ y2 \\\\ {\\vdots} \\\\ y_n \n       \\end{bmatrix} = \n       \\begin {bmatrix}\n       1 & x_11 & x_12 & {\\cdots} & x_1l \\\\\n       1 & x_21 & x_22 & {\\cdots} & x_1l \\\\ \n       {\\vdots} & {\\vdots} & {\\vdots} & {\\vdots} & {\\vdots} \\\\ \n       1 & x_n1 & x_n2 & {\\cdotp\\cdotp\\cdotp} & x_nl \\\\\n       \\end{bmatrix} \n       \\begin {bmatrix}\n       \\omega_0 \\\\\n       \\omega_1 \\\\\n       {\\vdots} \\\\\n       \\omega_l \\\\\n       \\end{bmatrix}\n     $$\n     \n## 최소 제곱법\n- 모델식에 가장 잘 들어맞는 가중치를 찾는 것이 중요한데, 이때 사용할 수 있는 근사법으로 *최소제곱법*이라는 것이 있다.\n- 최소제곱법에서는 데이터 세트와 같은 수치 데이터들을 1차 함수와 같은 특정 함수를 사용하여 근사적으로 표현할 수 있다고 가정한다.\n- 목적변수를 Y, 설명변수를 $X_1, X_2, X_3,... ,X_l$ 그리고 모델식을 $f(X_1, X_2,... ,X_l)$이라고 할때, \n  최소 제곱법을 적용 하는 과정은 오차의 제곱합 D를 최소화 하는 $f(X_1, X_2,... ,X_l)$를 구하는 것이다.\n- $D = \\sum_{k=1}^{n}({y_k - f(x_k1, x_k2, \\cdots, x_kl}))^2$\n- $f(x_k1, x_k2, \\cdots, x_kl) = \\sum_{m=1}^{l}w_mx_km + \\omega_0$\n- 각 변수의 편미분을 진행하면\n  ${\\frac {\\partial D}{\\partial\\omega_0}} = 0$,  ${\\frac {\\partial D}{\\partial\\omega_1}} = 0$ , $\\cdots$, $  ${\\frac {\\partial D}{\\partial\\omega_l}} = 0$\n- 구하고자 하는 변수와 연립방정식이 l+1개가 있으므로 $\\omega_0, \\omega_1, \\cdots, \\omega_l$의 값을 구하는 것은 어렵지 않다.\n- 선형 회귀 모델에서는 최소제곱법을 사용해서 가중치의 값을 결정한다.\n\n\n\n","slug":"probability-statistics-basic","published":1,"updated":"2020-07-11T04:51:03.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515c002tqlvo45cs39xr","content":"<h2 id=\"확률\"><a class=\"markdownIt-Anchor\" href=\"#확률\"></a> 확률</h2>\n<ul>\n<li>\n<p>확률<br />\n확률 = 어떤 사건이 발생할 수 있는 경우의 가짓수 / 모든 경우의 가짓 수</p>\n</li>\n<li>\n<p>여사건</p>\n<ul>\n<li>사건 A가 발생하지 않을 사건</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>A</mi><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P(\\overline{A}) = 1 - P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.13333em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833300000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span></span></span><span style=\"top:-3.80333em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>합사건</p>\n<ul>\n<li>사건 A와 사건 B중에서 어느 한쪽이 발생할 사건</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(A \\cup B) = P(A) + P(B) - P(A \\cap B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>곱사건</p>\n<ul>\n<li>사건 A와 B가 동시에 일어나는 사건</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(A \\cap B) = P(A)P(B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"확률-변수와-확률-분포\"><a class=\"markdownIt-Anchor\" href=\"#확률-변수와-확률-분포\"></a> 확률 변수와 확률 분포</h2>\n<ul>\n<li>확률 변수\n<ul>\n<li>어떤 변수 X를 P(X)의 확률로 나오게 할 수 있다면, 이 X는 확률 변수라고 말할 수 있다.</li>\n<li>이산 확률 변수\n<ul>\n<li>어떤 사건의 이산확률 변수가 X일 때, 그에 대한 확률 P는 이산확률분포 f(x)를 따른다</li>\n<li>P(X) = f(x)</li>\n<li>histogram</li>\n</ul>\n</li>\n<li>연속 확률 변수\n<ul>\n<li>어떤 사건의 연속확률 변수가 X일 때, 그에 대한 확률 P는 연속확률분포 f(x)를 지정한 X의 구간 안에서 적분한 값과 같다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo fence=\"false\">(</mo><mi>a</mi><mo>≤</mo><mi>X</mi><mo>≤</mo><mi>b</mi><mo fence=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mi>a</mi><mi>b</mi></msubsup><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>d</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">P\\big(a \\leq X \\leq b \\big) = \\int_a^b f(x)\\,dx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\"><span class=\"delimsizing size1\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.399828em;vertical-align:-0.35582em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.044008em;\"><span style=\"top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span><span style=\"top:-3.2579000000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35582em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">x</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결합-확률과-조건부-확률\"><a class=\"markdownIt-Anchor\" href=\"#결합-확률과-조건부-확률\"></a> 결합 확률과 조건부 확률</h2>\n<ul>\n<li>결합 확률\n<ul>\n<li>사건 A와 사건 B가 서로 독립된 사건일 때, 두 사건의 결합확률은 다음과 같다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(A \\cup B) = P(A) + P(B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>조건부 확률\n<ul>\n<li>사건 B가 일어났을 때, 사건 A가 일어날 조건부 확률은 다음과 같다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle></mrow><annotation encoding=\"application/x-tex\">P(A | B) = \\dfrac {P(A\\cap B)} {P(B)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"기댓값\"><a class=\"markdownIt-Anchor\" href=\"#기댓값\"></a> 기댓값</h2>\n<ul>\n<li>기댓값 : X가 확률 변수이고 확률 P(X)인 사건이 존재할 때, 예상할수 있는 결과값이 기댓값이다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∑</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">⋅</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">E(X) = \\sum P(X) \\cdotp X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span></li>\n<li>X와 Y가 서로 <em>독립된</em> 확률변수이고 k는 상수라고 할 때 다음 식이 성립한다.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">E(k) = k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span></span></span></span> (상수의 기대값은 상수가 된다)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>k</mi><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(kX) = kE(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> (확률변수를 상수 배 하면 기댓값도 상수 배가 된다)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(X+Y) = E(X) + E(Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> (확률 변수들 합의 기대값은 각 기대값의 합과 같다)</li>\n<li>X와 Y가 서로 독립일 때 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">⋅</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(XY) = E(X) \\cdotp E(Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> (독립적인 확률변수의 곱에 대한 기댓값은 각 기댓값의 곱과 같다)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"평균과-분산-그리고-공분산\"><a class=\"markdownIt-Anchor\" href=\"#평균과-분산-그리고-공분산\"></a> 평균과 분산 그리고 공분산</h2>\n<ul>\n<li>평균\n<ul>\n<li>n개의 확률변수가 각각 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1, x_2, \\cdotp\\cdotp\\cdotp, x_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63889em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 이라는 값을 가질 때 평균값 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63056em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>는 다음과 같다.</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mn>1</mn><mi>n</mi></mfrac><mo separator=\"true\">⋅</mo><msub><mi>x</mi><mi>k</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>x</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\overline x =\\sum_{k=1}^{n}{\\frac 1 n}\\cdotp x_k = {\\frac 1 n}\\sum_{k=1}^{n}x_k \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63056em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>분산\n<ul>\n<li>n개의 확률변수가 각각 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1, x_2, \\cdotp\\cdotp\\cdotp, x_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63889em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 이라는 값을 가지고 평균값이 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63056em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>일때 분산 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>는 다음과 같다.</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mo>−</mo><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^2 = {\\frac 1 n}\\sum_{k=1}^{n}{(x_k - \\overline x)}^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954008em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>σ</mi><mo>=</mo><msqrt><msup><mi>σ</mi><mn>2</mn></msup></msqrt><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mo>−</mo><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sigma = \\sqrt{\\sigma^2} = \\sqrt{ {\\frac 1 n}\\sum_{k=1}^{n}{(x_k - \\overline x)}^2 }\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.036070999999999964em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.003929em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9639290000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\ns-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.036070999999999964em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1812600000000004em;vertical-align:-1.302113em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8791470000000003em;\"><span class=\"svg-align\" style=\"top:-5.141260000000001em;\"><span class=\"pstrut\" style=\"height:5.141260000000001em;\"></span><span class=\"mord\" style=\"padding-left:1.056em;\"><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954008em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.8391470000000005em;\"><span class=\"pstrut\" style=\"height:5.141260000000001em;\"></span><span class=\"hide-tail\" style=\"min-width:0.742em;height:3.2212600000000005em;\"><svg width='400em' height='3.2212600000000005em' viewBox='0 0 400000 3221' preserveAspectRatio='xMinYMin slice'><path d='M702 80H400000v40H742v3087l-4 4-4 4c-.667.7\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>공분산\n<ul>\n<li>두 가지 데이터에 대한 n조의 확률변수 (X,Y) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{(x_1,y_1),(x_2,y_2),...,(x_n, y_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> 이 있다고 가정한다.</li>\n<li>x의 평균이 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>μ</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>이고 Y의 평균이 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>μ</mi><mi>y</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>라고 할 때 공분산 Cov(X,Y)는 다음과 같다.</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>C</mi><mi>O</mi><mi>V</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>x</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>k</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>y</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">COV(X,Y) = {\\frac 1 n} \\sum_{k=1}^{n}{(x_k - \\mu_x)(y_k - \\mu_y)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></p>\n<ul>\n<li>다른 두 데이터 간의 관계를 표현하는 지표이기 때문에 공분산을 계산할 때는 단위에 대해 신경쓸 필요가 없다.</li>\n<li>공분산이 양의 값을 가질 때, 두가지 데이터는 양의 관계가 있다고 하고, 공분산이 음의 값을 가질 때 두가지 데이터는 음의 관계가 있다고 한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"상관계수\"><a class=\"markdownIt-Anchor\" href=\"#상관계수\"></a> 상관계수</h2>\n<ul>\n<li>상관계수\n<ul>\n<li>확률 변수 X와 Y가 분산이 양수이고 각각의 표준편차가 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>σ</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sigma_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>σ</mi><mi>y</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sigma_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>, 공분산이 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>σ</mi><mi>x</mi></msub><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma_xy</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span>라고 할 때의 상관게수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo>≤</mo><mi>ρ</mi><mo>≤</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(-1 \\le \\rho \\le 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 는 다음과 같다.</li>\n<li>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ρ</mi><mo>=</mo><mfrac><mrow><msub><mi>σ</mi><mi>x</mi></msub><mi>y</mi></mrow><mrow><msub><mi>σ</mi><mi>x</mi></msub><msub><mi>σ</mi><mi>y</mi></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\rho = \\frac {\\sigma_xy} {\\sigma_x \\sigma_y}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.079668em;vertical-align:-0.972108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1075599999999999em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.972108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n</li>\n<li>상관계수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ρ</mi></mrow><annotation encoding=\"application/x-tex\">\\rho</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ρ</span></span></span></span>는 +1에 가까울 수록 양의 관계가 강하고, -1에 가까울수록 음의 관계가 강합니다. 상관관계가 0에 가까울수록 상관관계가 약하다고 보는데,<br />\n일반적으로 상관계수의 절대값이 0.7보다 클 때 상관계수가 강하다고 말한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"최대-가능도-추정\"><a class=\"markdownIt-Anchor\" href=\"#최대-가능도-추정\"></a> 최대 가능도 추정</h2>\n<ul>\n<li>최대 가능도 추정이란 ‘가장 그럴듯 하게 추정’ 한다는 의미로, 영어로는 가능도를 'likelihood’라고 표현합니다.</li>\n<li>최대 가능도를 추정한 다는 말은 곧, 파라미터 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>에 대한 가능도함수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L(\\theta)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span></span></span></span>를 최대화 할 수 있는 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>값을 구하는 것을 의미한다.</li>\n<li>1차 미분을 했을 때 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mi>d</mi><mi>L</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>d</mi><mi>θ</mi></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {dL(\\theta)} {d\\theta}} =0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"mord mathdefault mtight\">L</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 이 되는 지점을 의미한다.</li>\n<li>극값은 그래프에서 값이 변곡되는 곳에서 발생하기 때문에 0이 되는 지점은 최소값 혹은 최대값이 될 수 있다.</li>\n</ul>\n<h2 id=\"로그-가능도-함수\"><a class=\"markdownIt-Anchor\" href=\"#로그-가능도-함수\"></a> 로그 가능도 함수</h2>\n<ul>\n<li>가능도 함수에 자연로그를 붙여 로그 가능도 함수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>θ</mi></mrow></mfrac><msub><mo><mi>log</mi><mo>⁡</mo></mo><mi>e</mi></msub><mi>L</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {d} {d\\theta}}\\log_eL(\\theta) = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.057252em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>를 만들면 된다.</li>\n<li>일반적인 이산확률분포의 식은 확률의 곱으로 표현되는 일이 많다 보니 미분 자체가 어려운 경우가 많다.</li>\n<li>로그를 사용하면 곱셈을 덧셈으로 만들고 수식의 차원을 낮춰 계산을 용이하게 하는 장점이 있다.</li>\n<li>가능도 함수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mo stretchy=\"false\">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L(\\theta_1,\\theta_2,...,\\theta_m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>을 최대로 하는 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\theta_1,\\theta_2,...,\\theta_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>는 다음 방정식을 만족한다.<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi mathvariant=\"normal\">∂</mi><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mfrac><mi>L</mi><mo stretchy=\"false\">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial}{\\partial\\theta_1}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.20744em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi mathvariant=\"normal\">∂</mi><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>θ</mi><mn>2</mn></msub></mrow></mfrac><mi>L</mi><mo stretchy=\"false\">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial}{\\partial\\theta_2}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.20744em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi mathvariant=\"normal\">∂</mi><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>θ</mi><mi>m</mi></msub></mrow></mfrac><mi>L</mi><mo stretchy=\"false\">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial}{\\partial\\theta_m}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.20744em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n</li>\n</ul>\n<h2 id=\"선형-회귀-모델\"><a class=\"markdownIt-Anchor\" href=\"#선형-회귀-모델\"></a> 선형 회귀 모델</h2>\n<ul>\n<li>회귀 모델이란 하나의 목적변수(종속변수)를 하나 이상의 설명변수(독립변수)로 기술한 관계식이다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ω</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>ω</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>ω</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_0, \\omega_1,... \\omega_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>을 계수(가중치)라고 하고, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1,x_2,...,x_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>을 설명 변수라고 할 때 목적변수 y의 선형회귀 모델은 다음과 같이 기술 할 수 있다.<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>ω</mi><mn>0</mn></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></munderover><mrow><msub><mi>ω</mi><mi>k</mi></msub><msub><mi>x</mi><mi>k</mi></msub></mrow></mrow><annotation encoding=\"application/x-tex\">y = \\omega_0 + \\sum_{k=1}^{l}{\\omega_kx_k}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1382260000000004em;vertical-align:-1.302113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.836113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>ω</mi><mn>0</mn></msub><mo>+</mo><msub><mi>ω</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>ω</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>ω</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>ω</mi><mi>l</mi></msub><msub><mi>x</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">y = \\omega_0 + \\omega_1x_1 + \\omega_2x_2 + \\omega_3x_3 + \\cdots + \\omega_lx_l\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>y</mi><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>y</mi><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>y</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>1</mn></msub><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>1</mn></msub><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>1</mn></msub><mi>l</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>2</mn></msub><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>2</mn></msub><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>1</mn></msub><mi>l</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mi>n</mi></msub><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mi>n</mi></msub><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mi>n</mi></msub><mi>l</mi></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>ω</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>ω</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>ω</mi><mi>l</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin {bmatrix}\n   y1 \\\\ y2 \\\\ {\\vdots} \\\\ y_n \n   \\end{bmatrix} = \n   \\begin {bmatrix}\n   1 &amp; x_11 &amp; x_12 &amp; {\\cdots} &amp; x_1l \\\\\n   1 &amp; x_21 &amp; x_22 &amp; {\\cdots} &amp; x_1l \\\\ \n   {\\vdots} &amp; {\\vdots} &amp; {\\vdots} &amp; {\\vdots} &amp; {\\vdots} \\\\ \n   1 &amp; x_n1 &amp; x_n2 &amp; {\\cdotp\\cdotp\\cdotp} &amp; x_nl \\\\\n   \\end{bmatrix} \n   \\begin {bmatrix}\n   \\omega_0 \\\\\n   \\omega_1 \\\\\n   {\\vdots} \\\\\n   \\omega_l \\\\\n   \\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.459999999999999em;vertical-align:-2.4799999999999995em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">1</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">2</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:5.459999999999999em;vertical-align:-2.4799999999999995em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"minner\">⋯</span></span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"minner\">⋯</span></span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<h2 id=\"최소-제곱법\"><a class=\"markdownIt-Anchor\" href=\"#최소-제곱법\"></a> 최소 제곱법</h2>\n<ul>\n<li>모델식에 가장 잘 들어맞는 가중치를 찾는 것이 중요한데, 이때 사용할 수 있는 근사법으로 <em>최소제곱법</em>이라는 것이 있다.</li>\n<li>최소제곱법에서는 데이터 세트와 같은 수치 데이터들을 1차 함수와 같은 특정 함수를 사용하여 근사적으로 표현할 수 있다고 가정한다.</li>\n<li>목적변수를 Y, 설명변수를 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>3</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_1, X_2, X_3,... ,X_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 그리고 모델식을 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>l</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(X_1, X_2,... ,X_l)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>이라고 할때,<br />\n최소 제곱법을 적용 하는 과정은 오차의 제곱합 D를 최소화 하는 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>l</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(X_1, X_2,... ,X_l)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>를 구하는 것이다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy=\"false\">(</mo><mrow><msub><mi>y</mi><mi>k</mi></msub><mo>−</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>k</mi></msub><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>k</mi></msub><mi>l</mi></mrow><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">D = \\sum_{k=1}^{n}({y_k - f(x_k1, x_k2, \\cdots, x_kl}))^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.113818em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span></span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>k</mi></msub><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>k</mi></msub><mi>l</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></msubsup><msub><mi>w</mi><mi>m</mi></msub><msub><mi>x</mi><mi>k</mi></msub><mi>m</mi><mo>+</mo><msub><mi>ω</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">f(x_k1, x_k2, \\cdots, x_kl) = \\sum_{m=1}^{l}w_mx_km + \\omega_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2887179999999998em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9890079999999999em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>각 변수의 편미분을 진행하면<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>D</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>ω</mi><mn>0</mn></msub></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial D}{\\partial\\omega_0}} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.325208em;vertical-align:-0.44509999999999994em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44509999999999994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>,  <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>D</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>ω</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial D}{\\partial\\omega_1}} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.325208em;vertical-align:-0.44509999999999994em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44509999999999994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> , <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding=\"application/x-tex\">\\cdots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.31em;vertical-align:0em;\"></span><span class=\"minner\">⋯</span></span></span></span>, $  <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>D</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>ω</mi><mi>l</mi></msub></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial D}{\\partial\\omega_l}} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.330968em;vertical-align:-0.4508599999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4508599999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></li>\n<li>구하고자 하는 변수와 연립방정식이 l+1개가 있으므로 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ω</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>ω</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>ω</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_0, \\omega_1, \\cdots, \\omega_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>의 값을 구하는 것은 어렵지 않다.</li>\n<li>선형 회귀 모델에서는 최소제곱법을 사용해서 가중치의 값을 결정한다.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"확률\"><a class=\"markdownIt-Anchor\" href=\"#확률\"></a> 확률</h2>\n<ul>\n<li>\n<p>확률<br />\n확률 = 어떤 사건이 발생할 수 있는 경우의 가짓수 / 모든 경우의 가짓 수</p>\n</li>\n<li>\n<p>여사건</p>\n<ul>\n<li>사건 A가 발생하지 않을 사건</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>A</mi><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P(\\overline{A}) = 1 - P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.13333em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833300000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span></span></span><span style=\"top:-3.80333em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>합사건</p>\n<ul>\n<li>사건 A와 사건 B중에서 어느 한쪽이 발생할 사건</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(A \\cup B) = P(A) + P(B) - P(A \\cap B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>곱사건</p>\n<ul>\n<li>사건 A와 B가 동시에 일어나는 사건</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(A \\cap B) = P(A)P(B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"확률-변수와-확률-분포\"><a class=\"markdownIt-Anchor\" href=\"#확률-변수와-확률-분포\"></a> 확률 변수와 확률 분포</h2>\n<ul>\n<li>확률 변수\n<ul>\n<li>어떤 변수 X를 P(X)의 확률로 나오게 할 수 있다면, 이 X는 확률 변수라고 말할 수 있다.</li>\n<li>이산 확률 변수\n<ul>\n<li>어떤 사건의 이산확률 변수가 X일 때, 그에 대한 확률 P는 이산확률분포 f(x)를 따른다</li>\n<li>P(X) = f(x)</li>\n<li>histogram</li>\n</ul>\n</li>\n<li>연속 확률 변수\n<ul>\n<li>어떤 사건의 연속확률 변수가 X일 때, 그에 대한 확률 P는 연속확률분포 f(x)를 지정한 X의 구간 안에서 적분한 값과 같다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo fence=\"false\">(</mo><mi>a</mi><mo>≤</mo><mi>X</mi><mo>≤</mo><mi>b</mi><mo fence=\"false\">)</mo><mo>=</mo><msubsup><mo>∫</mo><mi>a</mi><mi>b</mi></msubsup><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>d</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">P\\big(a \\leq X \\leq b \\big) = \\int_a^b f(x)\\,dx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\"><span class=\"delimsizing size1\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.399828em;vertical-align:-0.35582em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.044008em;\"><span style=\"top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span><span style=\"top:-3.2579000000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35582em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">x</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결합-확률과-조건부-확률\"><a class=\"markdownIt-Anchor\" href=\"#결합-확률과-조건부-확률\"></a> 결합 확률과 조건부 확률</h2>\n<ul>\n<li>결합 확률\n<ul>\n<li>사건 A와 사건 B가 서로 독립된 사건일 때, 두 사건의 결합확률은 다음과 같다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(A \\cup B) = P(A) + P(B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>조건부 확률\n<ul>\n<li>사건 B가 일어났을 때, 사건 A가 일어날 조건부 확률은 다음과 같다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle></mrow><annotation encoding=\"application/x-tex\">P(A | B) = \\dfrac {P(A\\cap B)} {P(B)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"기댓값\"><a class=\"markdownIt-Anchor\" href=\"#기댓값\"></a> 기댓값</h2>\n<ul>\n<li>기댓값 : X가 확률 변수이고 확률 P(X)인 사건이 존재할 때, 예상할수 있는 결과값이 기댓값이다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∑</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">⋅</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">E(X) = \\sum P(X) \\cdotp X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span></li>\n<li>X와 Y가 서로 <em>독립된</em> 확률변수이고 k는 상수라고 할 때 다음 식이 성립한다.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">E(k) = k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span></span></span></span> (상수의 기대값은 상수가 된다)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>k</mi><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(kX) = kE(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> (확률변수를 상수 배 하면 기댓값도 상수 배가 된다)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(X+Y) = E(X) + E(Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> (확률 변수들 합의 기대값은 각 기대값의 합과 같다)</li>\n<li>X와 Y가 서로 독립일 때 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">⋅</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E(XY) = E(X) \\cdotp E(Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> (독립적인 확률변수의 곱에 대한 기댓값은 각 기댓값의 곱과 같다)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"평균과-분산-그리고-공분산\"><a class=\"markdownIt-Anchor\" href=\"#평균과-분산-그리고-공분산\"></a> 평균과 분산 그리고 공분산</h2>\n<ul>\n<li>평균\n<ul>\n<li>n개의 확률변수가 각각 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1, x_2, \\cdotp\\cdotp\\cdotp, x_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63889em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 이라는 값을 가질 때 평균값 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63056em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>는 다음과 같다.</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mn>1</mn><mi>n</mi></mfrac><mo separator=\"true\">⋅</mo><msub><mi>x</mi><mi>k</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>x</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\overline x =\\sum_{k=1}^{n}{\\frac 1 n}\\cdotp x_k = {\\frac 1 n}\\sum_{k=1}^{n}x_k \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63056em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>분산\n<ul>\n<li>n개의 확률변수가 각각 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1, x_2, \\cdotp\\cdotp\\cdotp, x_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63889em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 이라는 값을 가지고 평균값이 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63056em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>일때 분산 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>는 다음과 같다.</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mo>−</mo><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^2 = {\\frac 1 n}\\sum_{k=1}^{n}{(x_k - \\overline x)}^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954008em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>σ</mi><mo>=</mo><msqrt><msup><mi>σ</mi><mn>2</mn></msup></msqrt><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mo>−</mo><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sigma = \\sqrt{\\sigma^2} = \\sqrt{ {\\frac 1 n}\\sum_{k=1}^{n}{(x_k - \\overline x)}^2 }\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.036070999999999964em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.003929em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9639290000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\ns-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.036070999999999964em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1812600000000004em;vertical-align:-1.302113em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8791470000000003em;\"><span class=\"svg-align\" style=\"top:-5.141260000000001em;\"><span class=\"pstrut\" style=\"height:5.141260000000001em;\"></span><span class=\"mord\" style=\"padding-left:1.056em;\"><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">x</span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954008em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.8391470000000005em;\"><span class=\"pstrut\" style=\"height:5.141260000000001em;\"></span><span class=\"hide-tail\" style=\"min-width:0.742em;height:3.2212600000000005em;\"><svg width='400em' height='3.2212600000000005em' viewBox='0 0 400000 3221' preserveAspectRatio='xMinYMin slice'><path d='M702 80H400000v40H742v3087l-4 4-4 4c-.667.7\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>공분산\n<ul>\n<li>두 가지 데이터에 대한 n조의 확률변수 (X,Y) = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{(x_1,y_1),(x_2,y_2),...,(x_n, y_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> 이 있다고 가정한다.</li>\n<li>x의 평균이 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>μ</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>이고 Y의 평균이 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>μ</mi><mi>y</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>라고 할 때 공분산 Cov(X,Y)는 다음과 같다.</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>C</mi><mi>O</mi><mi>V</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>x</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>k</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>y</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">COV(X,Y) = {\\frac 1 n} \\sum_{k=1}^{n}{(x_k - \\mu_x)(y_k - \\mu_y)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></p>\n<ul>\n<li>다른 두 데이터 간의 관계를 표현하는 지표이기 때문에 공분산을 계산할 때는 단위에 대해 신경쓸 필요가 없다.</li>\n<li>공분산이 양의 값을 가질 때, 두가지 데이터는 양의 관계가 있다고 하고, 공분산이 음의 값을 가질 때 두가지 데이터는 음의 관계가 있다고 한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"상관계수\"><a class=\"markdownIt-Anchor\" href=\"#상관계수\"></a> 상관계수</h2>\n<ul>\n<li>상관계수\n<ul>\n<li>확률 변수 X와 Y가 분산이 양수이고 각각의 표준편차가 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>σ</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sigma_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>σ</mi><mi>y</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sigma_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>, 공분산이 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>σ</mi><mi>x</mi></msub><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma_xy</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span>라고 할 때의 상관게수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo>≤</mo><mi>ρ</mi><mo>≤</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(-1 \\le \\rho \\le 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 는 다음과 같다.</li>\n<li>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ρ</mi><mo>=</mo><mfrac><mrow><msub><mi>σ</mi><mi>x</mi></msub><mi>y</mi></mrow><mrow><msub><mi>σ</mi><mi>x</mi></msub><msub><mi>σ</mi><mi>y</mi></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\rho = \\frac {\\sigma_xy} {\\sigma_x \\sigma_y}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.079668em;vertical-align:-0.972108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1075599999999999em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.972108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n</li>\n<li>상관계수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ρ</mi></mrow><annotation encoding=\"application/x-tex\">\\rho</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ρ</span></span></span></span>는 +1에 가까울 수록 양의 관계가 강하고, -1에 가까울수록 음의 관계가 강합니다. 상관관계가 0에 가까울수록 상관관계가 약하다고 보는데,<br />\n일반적으로 상관계수의 절대값이 0.7보다 클 때 상관계수가 강하다고 말한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"최대-가능도-추정\"><a class=\"markdownIt-Anchor\" href=\"#최대-가능도-추정\"></a> 최대 가능도 추정</h2>\n<ul>\n<li>최대 가능도 추정이란 ‘가장 그럴듯 하게 추정’ 한다는 의미로, 영어로는 가능도를 'likelihood’라고 표현합니다.</li>\n<li>최대 가능도를 추정한 다는 말은 곧, 파라미터 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>에 대한 가능도함수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L(\\theta)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span></span></span></span>를 최대화 할 수 있는 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>값을 구하는 것을 의미한다.</li>\n<li>1차 미분을 했을 때 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mi>d</mi><mi>L</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>d</mi><mi>θ</mi></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {dL(\\theta)} {d\\theta}} =0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"mord mathdefault mtight\">L</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 이 되는 지점을 의미한다.</li>\n<li>극값은 그래프에서 값이 변곡되는 곳에서 발생하기 때문에 0이 되는 지점은 최소값 혹은 최대값이 될 수 있다.</li>\n</ul>\n<h2 id=\"로그-가능도-함수\"><a class=\"markdownIt-Anchor\" href=\"#로그-가능도-함수\"></a> 로그 가능도 함수</h2>\n<ul>\n<li>가능도 함수에 자연로그를 붙여 로그 가능도 함수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>θ</mi></mrow></mfrac><msub><mo><mi>log</mi><mo>⁡</mo></mo><mi>e</mi></msub><mi>L</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {d} {d\\theta}}\\log_eL(\\theta) = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.057252em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>를 만들면 된다.</li>\n<li>일반적인 이산확률분포의 식은 확률의 곱으로 표현되는 일이 많다 보니 미분 자체가 어려운 경우가 많다.</li>\n<li>로그를 사용하면 곱셈을 덧셈으로 만들고 수식의 차원을 낮춰 계산을 용이하게 하는 장점이 있다.</li>\n<li>가능도 함수 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mo stretchy=\"false\">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L(\\theta_1,\\theta_2,...,\\theta_m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>을 최대로 하는 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\theta_1,\\theta_2,...,\\theta_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>는 다음 방정식을 만족한다.<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi mathvariant=\"normal\">∂</mi><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mfrac><mi>L</mi><mo stretchy=\"false\">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial}{\\partial\\theta_1}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.20744em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi mathvariant=\"normal\">∂</mi><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>θ</mi><mn>2</mn></msub></mrow></mfrac><mi>L</mi><mo stretchy=\"false\">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial}{\\partial\\theta_2}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.20744em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi mathvariant=\"normal\">∂</mi><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>θ</mi><mi>m</mi></msub></mrow></mfrac><mi>L</mi><mo stretchy=\"false\">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>θ</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial}{\\partial\\theta_m}}L(\\theta_1,\\theta_2,...,\\theta_m) = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.20744em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n</li>\n</ul>\n<h2 id=\"선형-회귀-모델\"><a class=\"markdownIt-Anchor\" href=\"#선형-회귀-모델\"></a> 선형 회귀 모델</h2>\n<ul>\n<li>회귀 모델이란 하나의 목적변수(종속변수)를 하나 이상의 설명변수(독립변수)로 기술한 관계식이다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ω</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>ω</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>ω</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_0, \\omega_1,... \\omega_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>을 계수(가중치)라고 하고, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1,x_2,...,x_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>을 설명 변수라고 할 때 목적변수 y의 선형회귀 모델은 다음과 같이 기술 할 수 있다.<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>ω</mi><mn>0</mn></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></munderover><mrow><msub><mi>ω</mi><mi>k</mi></msub><msub><mi>x</mi><mi>k</mi></msub></mrow></mrow><annotation encoding=\"application/x-tex\">y = \\omega_0 + \\sum_{k=1}^{l}{\\omega_kx_k}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1382260000000004em;vertical-align:-1.302113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.836113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>ω</mi><mn>0</mn></msub><mo>+</mo><msub><mi>ω</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>ω</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>ω</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>ω</mi><mi>l</mi></msub><msub><mi>x</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">y = \\omega_0 + \\omega_1x_1 + \\omega_2x_2 + \\omega_3x_3 + \\cdots + \\omega_lx_l\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>y</mi><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>y</mi><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>y</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>1</mn></msub><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>1</mn></msub><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>1</mn></msub><mi>l</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>2</mn></msub><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>2</mn></msub><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mn>1</mn></msub><mi>l</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mi>n</mi></msub><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mi>n</mi></msub><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>x</mi><mi>n</mi></msub><mi>l</mi></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>ω</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>ω</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>ω</mi><mi>l</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin {bmatrix}\n   y1 \\\\ y2 \\\\ {\\vdots} \\\\ y_n \n   \\end{bmatrix} = \n   \\begin {bmatrix}\n   1 &amp; x_11 &amp; x_12 &amp; {\\cdots} &amp; x_1l \\\\\n   1 &amp; x_21 &amp; x_22 &amp; {\\cdots} &amp; x_1l \\\\ \n   {\\vdots} &amp; {\\vdots} &amp; {\\vdots} &amp; {\\vdots} &amp; {\\vdots} \\\\ \n   1 &amp; x_n1 &amp; x_n2 &amp; {\\cdotp\\cdotp\\cdotp} &amp; x_nl \\\\\n   \\end{bmatrix} \n   \\begin {bmatrix}\n   \\omega_0 \\\\\n   \\omega_1 \\\\\n   {\\vdots} \\\\\n   \\omega_l \\\\\n   \\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.459999999999999em;vertical-align:-2.4799999999999995em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">1</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">2</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:5.459999999999999em;vertical-align:-2.4799999999999995em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"minner\">⋯</span></span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"minner\">⋯</span></span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9799999999999995em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.7674999999999996em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span><span style=\"top:-1.5675000000000006em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4799999999999995em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.953005em;\"><span style=\"top:-1.3499850000000007em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.5049850000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.1059850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.7069850000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.953005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.4500349999999997em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<h2 id=\"최소-제곱법\"><a class=\"markdownIt-Anchor\" href=\"#최소-제곱법\"></a> 최소 제곱법</h2>\n<ul>\n<li>모델식에 가장 잘 들어맞는 가중치를 찾는 것이 중요한데, 이때 사용할 수 있는 근사법으로 <em>최소제곱법</em>이라는 것이 있다.</li>\n<li>최소제곱법에서는 데이터 세트와 같은 수치 데이터들을 1차 함수와 같은 특정 함수를 사용하여 근사적으로 표현할 수 있다고 가정한다.</li>\n<li>목적변수를 Y, 설명변수를 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>3</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_1, X_2, X_3,... ,X_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 그리고 모델식을 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>l</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(X_1, X_2,... ,X_l)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>이라고 할때,<br />\n최소 제곱법을 적용 하는 과정은 오차의 제곱합 D를 최소화 하는 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>l</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(X_1, X_2,... ,X_l)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>를 구하는 것이다.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy=\"false\">(</mo><mrow><msub><mi>y</mi><mi>k</mi></msub><mo>−</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>k</mi></msub><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>k</mi></msub><mi>l</mi></mrow><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">D = \\sum_{k=1}^{n}({y_k - f(x_k1, x_k2, \\cdots, x_kl}))^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.113818em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span></span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>k</mi></msub><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>k</mi></msub><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>k</mi></msub><mi>l</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></msubsup><msub><mi>w</mi><mi>m</mi></msub><msub><mi>x</mi><mi>k</mi></msub><mi>m</mi><mo>+</mo><msub><mi>ω</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">f(x_k1, x_k2, \\cdots, x_kl) = \\sum_{m=1}^{l}w_mx_km + \\omega_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2887179999999998em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9890079999999999em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>각 변수의 편미분을 진행하면<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>D</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>ω</mi><mn>0</mn></msub></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial D}{\\partial\\omega_0}} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.325208em;vertical-align:-0.44509999999999994em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44509999999999994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>,  <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>D</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>ω</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial D}{\\partial\\omega_1}} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.325208em;vertical-align:-0.44509999999999994em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44509999999999994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> , <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding=\"application/x-tex\">\\cdots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.31em;vertical-align:0em;\"></span><span class=\"minner\">⋯</span></span></span></span>, $  <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>D</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>ω</mi><mi>l</mi></msub></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">{\\frac {\\partial D}{\\partial\\omega_l}} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.330968em;vertical-align:-0.4508599999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4508599999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></li>\n<li>구하고자 하는 변수와 연립방정식이 l+1개가 있으므로 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ω</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>ω</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>ω</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_0, \\omega_1, \\cdots, \\omega_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>의 값을 구하는 것은 어렵지 않다.</li>\n<li>선형 회귀 모델에서는 최소제곱법을 사용해서 가중치의 값을 결정한다.</li>\n</ul>\n"},{"title":"network-tcp-congestion-control","date":"2020-04-07T00:11:32.000Z","_content":"\n## Congestion Control (혼잡 제어)\n\n### TCP Fast Retransmit\n- 송신측에서 Duplicate ACK를 받게 되면 패킷 손실로 간주하고 즉시 재전송\n- Fast Retransmit 미사용 시 손실 발생 시 재전송 Timeout 만료 후 재전송\n- 재전송 타이머 값이 종종 상대적으로 길어지므로, 손실된 패킷의 재전송 전에 지연시간이 커진다.\n- 위의 상항을 해결하고자 중복 ACKs를 통해 손실된 세그먼트를 검출한다.\n  송신측에서 바로바로 여러 개의 세그먼트를 전송할 경우, 세그먼트가 손실되면 수신측에서는 중복 ACK를 보내게 되는데, 타임아웃 전에 송신측에서 중복 ACK를 3번받게 되면 세그먼트를 즉시 전송한다. \n  즉, 수신측이 기다리는 순서번호의 세그먼트보다 큰 순서번호의 세그먼트가 3개 도착할 경우를 의미한다.\n  \n![](/images/network/tcp/retransmit/retransmit_1.jpeg)\n![](/images/network/tcp/retransmit/retransmit_2.gif)","source":"_posts/network-tcp-congestion-control.md","raw":"---\ntitle: network-tcp-congestion-control\ndate: 2020-04-07 09:11:32\ntags: \n- TCP\n\ncategories:\n- Network\n- TCP\n---\n\n## Congestion Control (혼잡 제어)\n\n### TCP Fast Retransmit\n- 송신측에서 Duplicate ACK를 받게 되면 패킷 손실로 간주하고 즉시 재전송\n- Fast Retransmit 미사용 시 손실 발생 시 재전송 Timeout 만료 후 재전송\n- 재전송 타이머 값이 종종 상대적으로 길어지므로, 손실된 패킷의 재전송 전에 지연시간이 커진다.\n- 위의 상항을 해결하고자 중복 ACKs를 통해 손실된 세그먼트를 검출한다.\n  송신측에서 바로바로 여러 개의 세그먼트를 전송할 경우, 세그먼트가 손실되면 수신측에서는 중복 ACK를 보내게 되는데, 타임아웃 전에 송신측에서 중복 ACK를 3번받게 되면 세그먼트를 즉시 전송한다. \n  즉, 수신측이 기다리는 순서번호의 세그먼트보다 큰 순서번호의 세그먼트가 3개 도착할 경우를 의미한다.\n  \n![](/images/network/tcp/retransmit/retransmit_1.jpeg)\n![](/images/network/tcp/retransmit/retransmit_2.gif)","slug":"network-tcp-congestion-control","published":1,"updated":"2020-07-11T04:51:03.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515e002uqlvogjbn1qcp","content":"<h2 id=\"congestion-control-혼잡-제어\"><a class=\"markdownIt-Anchor\" href=\"#congestion-control-혼잡-제어\"></a> Congestion Control (혼잡 제어)</h2>\n<h3 id=\"tcp-fast-retransmit\"><a class=\"markdownIt-Anchor\" href=\"#tcp-fast-retransmit\"></a> TCP Fast Retransmit</h3>\n<ul>\n<li>송신측에서 Duplicate ACK를 받게 되면 패킷 손실로 간주하고 즉시 재전송</li>\n<li>Fast Retransmit 미사용 시 손실 발생 시 재전송 Timeout 만료 후 재전송</li>\n<li>재전송 타이머 값이 종종 상대적으로 길어지므로, 손실된 패킷의 재전송 전에 지연시간이 커진다.</li>\n<li>위의 상항을 해결하고자 중복 ACKs를 통해 손실된 세그먼트를 검출한다.<br />\n송신측에서 바로바로 여러 개의 세그먼트를 전송할 경우, 세그먼트가 손실되면 수신측에서는 중복 ACK를 보내게 되는데, 타임아웃 전에 송신측에서 중복 ACK를 3번받게 되면 세그먼트를 즉시 전송한다.<br />\n즉, 수신측이 기다리는 순서번호의 세그먼트보다 큰 순서번호의 세그먼트가 3개 도착할 경우를 의미한다.</li>\n</ul>\n<p><img src=\"/images/network/tcp/retransmit/retransmit_1.jpeg\" alt=\"\" /><br />\n<img src=\"/images/network/tcp/retransmit/retransmit_2.gif\" alt=\"\" /></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"congestion-control-혼잡-제어\"><a class=\"markdownIt-Anchor\" href=\"#congestion-control-혼잡-제어\"></a> Congestion Control (혼잡 제어)</h2>\n<h3 id=\"tcp-fast-retransmit\"><a class=\"markdownIt-Anchor\" href=\"#tcp-fast-retransmit\"></a> TCP Fast Retransmit</h3>\n<ul>\n<li>송신측에서 Duplicate ACK를 받게 되면 패킷 손실로 간주하고 즉시 재전송</li>\n<li>Fast Retransmit 미사용 시 손실 발생 시 재전송 Timeout 만료 후 재전송</li>\n<li>재전송 타이머 값이 종종 상대적으로 길어지므로, 손실된 패킷의 재전송 전에 지연시간이 커진다.</li>\n<li>위의 상항을 해결하고자 중복 ACKs를 통해 손실된 세그먼트를 검출한다.<br />\n송신측에서 바로바로 여러 개의 세그먼트를 전송할 경우, 세그먼트가 손실되면 수신측에서는 중복 ACK를 보내게 되는데, 타임아웃 전에 송신측에서 중복 ACK를 3번받게 되면 세그먼트를 즉시 전송한다.<br />\n즉, 수신측이 기다리는 순서번호의 세그먼트보다 큰 순서번호의 세그먼트가 3개 도착할 경우를 의미한다.</li>\n</ul>\n<p><img src=\"/images/network/tcp/retransmit/retransmit_1.jpeg\" alt=\"\" /><br />\n<img src=\"/images/network/tcp/retransmit/retransmit_2.gif\" alt=\"\" /></p>\n"},{"title":"next-generation-web-styling","date":"2019-12-13T05:08:15.000Z","_content":"Closed Caption (폐쇄 자막, 자막의 표시여부를 설정할 수 있는 자) \n## 1) Scroll-snap\n\n```css\nsection {\n    overflow-x: auto;\n    overscroll-behavior-y: contain;\n    scroll-snap-type: y mandatory;\n}\n\nsection > picture{\n    scroll-snap-align: center;\n}\n```\n\n### List with Sub-List HTML\n\n```html\n<ul>\n    <li><a herf=\"...\">One</a></li>\n    <li><a herf=\"...\" aria-haspopup=\"true\">TWO</a>\n        <ul class=\"\"dropdown\" aria-label=\"submenu\">\n            <li><a herf=\"...\">SUB-1</a></li>\n        </ul>\n    </li>\n</ul>\n```\n```css\nli:hover > el,\nli:focus > ul {\nvisibility: visible;\nopacity: 1;\n\n}\n```\n\n## 2) @media (prefers-*)\n### prefers-reduced-motion\n![](/images/next-generation-web-styling/prefer_1.png)\n![](/images/next-generation-web-styling/prefer_2.png)\n```css\n@media (prefers-reduced-motion: reduce) {\n    animation: cross-fade 3s ease-in-out infinite;\n\n}\n```\n\n### prefers-color-scheme\n```css\n@media(prefers-color-scheme: dark) {\n    --lightness: 90%;\n    --text-1: hsl(200 10% var(--lightness));\n}\n```\n\n## 3) Logical properties\n### new mental modal \nthe browser does all of that great work for you to make that website more internaltionalized.\n![](/images/next-generation-web-styling/localproperty_1.png)\n![](/images/next-generation-web-styling/localproperty_2.png)\n![](/images/next-generation-web-styling/localproperty_3.png)\n![](/images/next-generation-web-styling/localproperty_4.png)\n\n```css\n.box {  \n    block-size: 300px;\n    inline-size: 200px;\n}\n\n.h2, p {\n    // margin-left: 3rem;\n    margin-inline-start: 3rem;\n}\n\nmain {\n    //border-top: 2px dashed;\n    border-block-start: 2px dashed;\n    //margin-top: 3rem;\n    margin-block-start: 3rem;\n}\n```\nhttps://wit.nts-corp.com/2018/08/28/5317\n\n## 4) Sticky situations\n\nClassic sticky\nThe Sticky stack {CSS}\nUi layers overlap within the viewport\n\n```css\ndl > dt {\n    position: sticky;\n    top: 0;\n}\n```\n\n```html\n<dl>\n<dt>A</dt>\n...\n<dt>B</dt>\n</dl>\n```\n\nThe sticky Desperado {HTML}\n\n## 5) backdrop-filter\n```css\nelement.style {\n    backdrop-filter: blur(10px);\n}\n```\n\n## 6) :is()\n### any(), match()\n\n```css\nbutton:is(.focus, :focus) {\n    ...\n}\n\narticle > :is(h1,h2,h3,h4,h5,h6) {\n    ...\n}\n```\n\n## 7) grid gap gap (for Flexbox)\n\n```css\n.flex-button {\n    display: inline-flex;\n    gap: 1rem;\n    place-items: center;\n}\n```\n\n## 8) Houdini\n### low-level css \n\n![](/images/next-generation-web-styling/houdini_1.png)\n![](/images/next-generation-web-styling/houdini_2.png)\n\n\n## 9) Properties & Values API\n ![](/images/next-generation-web-styling/property_value_1.png)\n ![](/images/next-generation-web-styling/property_value_2.png)\n ![](/images/next-generation-web-styling/property_value_3.png)\n\n## 10) Typed OM\n ![](/images/next-generation-web-styling/typedOM_1.png)\n\n## 11) Paint API\n ![](/images/next-generation-web-styling/paintedAPI_1.png)\n ![](/images/next-generation-web-styling/paintedAPI_2.png)\n ![](/images/next-generation-web-styling/paintedAPI_3.png)\n ![](/images/next-generation-web-styling/paintedAPI_4.png)\n\n\n## 12) Animation Worklet\n ![](/images/next-generation-web-styling/animation_worklet_1.png)\n\n## Speed Round\n```css\n.box { size: 50vw; }\niframe { aspect-ratio: 16 / 9;}\n// min(),max(),clamp() \nh1 { font-size: clamp(1.5rem, 6vw);}\n\n\n```\n\nhttps://css-at-cds.netlify.com/","source":"_posts/next-generation-web-styling.md","raw":"---\ntitle: next-generation-web-styling\ndate: 2019-12-13 14:08:15\ntags:\n---\nClosed Caption (폐쇄 자막, 자막의 표시여부를 설정할 수 있는 자) \n## 1) Scroll-snap\n\n```css\nsection {\n    overflow-x: auto;\n    overscroll-behavior-y: contain;\n    scroll-snap-type: y mandatory;\n}\n\nsection > picture{\n    scroll-snap-align: center;\n}\n```\n\n### List with Sub-List HTML\n\n```html\n<ul>\n    <li><a herf=\"...\">One</a></li>\n    <li><a herf=\"...\" aria-haspopup=\"true\">TWO</a>\n        <ul class=\"\"dropdown\" aria-label=\"submenu\">\n            <li><a herf=\"...\">SUB-1</a></li>\n        </ul>\n    </li>\n</ul>\n```\n```css\nli:hover > el,\nli:focus > ul {\nvisibility: visible;\nopacity: 1;\n\n}\n```\n\n## 2) @media (prefers-*)\n### prefers-reduced-motion\n![](/images/next-generation-web-styling/prefer_1.png)\n![](/images/next-generation-web-styling/prefer_2.png)\n```css\n@media (prefers-reduced-motion: reduce) {\n    animation: cross-fade 3s ease-in-out infinite;\n\n}\n```\n\n### prefers-color-scheme\n```css\n@media(prefers-color-scheme: dark) {\n    --lightness: 90%;\n    --text-1: hsl(200 10% var(--lightness));\n}\n```\n\n## 3) Logical properties\n### new mental modal \nthe browser does all of that great work for you to make that website more internaltionalized.\n![](/images/next-generation-web-styling/localproperty_1.png)\n![](/images/next-generation-web-styling/localproperty_2.png)\n![](/images/next-generation-web-styling/localproperty_3.png)\n![](/images/next-generation-web-styling/localproperty_4.png)\n\n```css\n.box {  \n    block-size: 300px;\n    inline-size: 200px;\n}\n\n.h2, p {\n    // margin-left: 3rem;\n    margin-inline-start: 3rem;\n}\n\nmain {\n    //border-top: 2px dashed;\n    border-block-start: 2px dashed;\n    //margin-top: 3rem;\n    margin-block-start: 3rem;\n}\n```\nhttps://wit.nts-corp.com/2018/08/28/5317\n\n## 4) Sticky situations\n\nClassic sticky\nThe Sticky stack {CSS}\nUi layers overlap within the viewport\n\n```css\ndl > dt {\n    position: sticky;\n    top: 0;\n}\n```\n\n```html\n<dl>\n<dt>A</dt>\n...\n<dt>B</dt>\n</dl>\n```\n\nThe sticky Desperado {HTML}\n\n## 5) backdrop-filter\n```css\nelement.style {\n    backdrop-filter: blur(10px);\n}\n```\n\n## 6) :is()\n### any(), match()\n\n```css\nbutton:is(.focus, :focus) {\n    ...\n}\n\narticle > :is(h1,h2,h3,h4,h5,h6) {\n    ...\n}\n```\n\n## 7) grid gap gap (for Flexbox)\n\n```css\n.flex-button {\n    display: inline-flex;\n    gap: 1rem;\n    place-items: center;\n}\n```\n\n## 8) Houdini\n### low-level css \n\n![](/images/next-generation-web-styling/houdini_1.png)\n![](/images/next-generation-web-styling/houdini_2.png)\n\n\n## 9) Properties & Values API\n ![](/images/next-generation-web-styling/property_value_1.png)\n ![](/images/next-generation-web-styling/property_value_2.png)\n ![](/images/next-generation-web-styling/property_value_3.png)\n\n## 10) Typed OM\n ![](/images/next-generation-web-styling/typedOM_1.png)\n\n## 11) Paint API\n ![](/images/next-generation-web-styling/paintedAPI_1.png)\n ![](/images/next-generation-web-styling/paintedAPI_2.png)\n ![](/images/next-generation-web-styling/paintedAPI_3.png)\n ![](/images/next-generation-web-styling/paintedAPI_4.png)\n\n\n## 12) Animation Worklet\n ![](/images/next-generation-web-styling/animation_worklet_1.png)\n\n## Speed Round\n```css\n.box { size: 50vw; }\niframe { aspect-ratio: 16 / 9;}\n// min(),max(),clamp() \nh1 { font-size: clamp(1.5rem, 6vw);}\n\n\n```\n\nhttps://css-at-cds.netlify.com/","slug":"next-generation-web-styling","published":1,"updated":"2020-07-11T04:51:03.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515f002yqlvoa8bt141f","content":"<p>Closed Caption (폐쇄 자막, 자막의 표시여부를 설정할 수 있는 자)</p>\n<h2 id=\"1-scroll-snap\"><a class=\"markdownIt-Anchor\" href=\"#1-scroll-snap\"></a> 1) Scroll-snap</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow-x</span>: auto;</span><br><span class=\"line\">    <span class=\"attribute\">overscroll-behavior-y</span>: contain;</span><br><span class=\"line\">    <span class=\"attribute\">scroll-snap-type</span>: y mandatory;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">section</span> &gt; <span class=\"selector-tag\">picture</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">scroll-snap-align</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"list-with-sub-list-html\"><a class=\"markdownIt-Anchor\" href=\"#list-with-sub-list-html\"></a> List with Sub-List HTML</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">herf</span>=<span class=\"string\">\"...\"</span>&gt;</span>One<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">herf</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">aria-haspopup</span>=<span class=\"string\">\"true\"</span>&gt;</span>TWO<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"\"</span><span class=\"attr\">dropdown</span>\" <span class=\"attr\">aria-label</span>=<span class=\"string\">\"submenu\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">herf</span>=<span class=\"string\">\"...\"</span>&gt;</span>SUB-1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> &gt; <span class=\"selector-tag\">el</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:focus</span> &gt; <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\"><span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\"><span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-media-prefers-\"><a class=\"markdownIt-Anchor\" href=\"#2-media-prefers-\"></a> 2) @media (prefers-*)</h2>\n<h3 id=\"prefers-reduced-motion\"><a class=\"markdownIt-Anchor\" href=\"#prefers-reduced-motion\"></a> prefers-reduced-motion</h3>\n<p><img src=\"/images/next-generation-web-styling/prefer_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/prefer_2.png\" alt=\"\" /></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">media</span> (prefers-reduced-motion: reduce) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">animation</span>: <span class=\"selector-tag\">cross-fade</span> 3<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">ease-in-out</span> <span class=\"selector-tag\">infinite</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"prefers-color-scheme\"><a class=\"markdownIt-Anchor\" href=\"#prefers-color-scheme\"></a> prefers-color-scheme</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media(prefers-color-scheme: dark) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">--lightness</span>: 90%;</span><br><span class=\"line\">    <span class=\"selector-tag\">--text-1</span>: <span class=\"selector-tag\">hsl</span>(200 10% <span class=\"selector-tag\">var</span>(<span class=\"selector-tag\">--lightness</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-logical-properties\"><a class=\"markdownIt-Anchor\" href=\"#3-logical-properties\"></a> 3) Logical properties</h2>\n<h3 id=\"new-mental-modal\"><a class=\"markdownIt-Anchor\" href=\"#new-mental-modal\"></a> new mental modal</h3>\n<p>the browser does all of that great work for you to make that website more internaltionalized.<br />\n<img src=\"/images/next-generation-web-styling/localproperty_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/localproperty_2.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/localproperty_3.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/localproperty_4.png\" alt=\"\" /></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;  </span><br><span class=\"line\">    <span class=\"attribute\">block-size</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">inline-size</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.h2</span>, <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    // margin-left: 3rem;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-inline-start</span>: 3<span class=\"selector-tag\">rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">main</span> &#123;</span><br><span class=\"line\">    //border-top: 2px dashed;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-block-start</span>: 2<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">dashed</span>;</span><br><span class=\"line\">    //margin-top: 3rem;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-block-start</span>: 3<span class=\"selector-tag\">rem</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://wit.nts-corp.com/2018/08/28/5317\" target=\"_blank\" rel=\"noopener\">https://wit.nts-corp.com/2018/08/28/5317</a></p>\n<h2 id=\"4-sticky-situations\"><a class=\"markdownIt-Anchor\" href=\"#4-sticky-situations\"></a> 4) Sticky situations</h2>\n<p>Classic sticky<br />\nThe Sticky stack {CSS}<br />\nUi layers overlap within the viewport</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">dl</span> &gt; <span class=\"selector-tag\">dt</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: sticky;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>The sticky Desperado {HTML}</p>\n<h2 id=\"5-backdrop-filter\"><a class=\"markdownIt-Anchor\" href=\"#5-backdrop-filter\"></a> 5) backdrop-filter</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">element</span><span class=\"selector-class\">.style</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">backdrop-filter</span>: <span class=\"built_in\">blur</span>(10px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-is\"><a class=\"markdownIt-Anchor\" href=\"#6-is\"></a> 6) :is()</h2>\n<h3 id=\"any-match\"><a class=\"markdownIt-Anchor\" href=\"#any-match\"></a> any(), match()</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">:is(.focus</span>, <span class=\"selector-pseudo\">:focus)</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">article</span> &gt; <span class=\"selector-pseudo\">:is(h1</span>,<span class=\"selector-tag\">h2</span>,<span class=\"selector-tag\">h3</span>,<span class=\"selector-tag\">h4</span>,<span class=\"selector-tag\">h5</span>,<span class=\"selector-tag\">h6</span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-grid-gap-gap-for-flexbox\"><a class=\"markdownIt-Anchor\" href=\"#7-grid-gap-gap-for-flexbox\"></a> 7) grid gap gap (for Flexbox)</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.flex-button</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-flex;</span><br><span class=\"line\">    <span class=\"attribute\">gap</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">    <span class=\"attribute\">place-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-houdini\"><a class=\"markdownIt-Anchor\" href=\"#8-houdini\"></a> 8) Houdini</h2>\n<h3 id=\"low-level-css\"><a class=\"markdownIt-Anchor\" href=\"#low-level-css\"></a> low-level css</h3>\n<p><img src=\"/images/next-generation-web-styling/houdini_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/houdini_2.png\" alt=\"\" /></p>\n<h2 id=\"9-properties-values-api\"><a class=\"markdownIt-Anchor\" href=\"#9-properties-values-api\"></a> 9) Properties &amp; Values API</h2>\n<p><img src=\"/images/next-generation-web-styling/property_value_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/property_value_2.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/property_value_3.png\" alt=\"\" /></p>\n<h2 id=\"10-typed-om\"><a class=\"markdownIt-Anchor\" href=\"#10-typed-om\"></a> 10) Typed OM</h2>\n<p><img src=\"/images/next-generation-web-styling/typedOM_1.png\" alt=\"\" /></p>\n<h2 id=\"11-paint-api\"><a class=\"markdownIt-Anchor\" href=\"#11-paint-api\"></a> 11) Paint API</h2>\n<p><img src=\"/images/next-generation-web-styling/paintedAPI_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/paintedAPI_2.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/paintedAPI_3.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/paintedAPI_4.png\" alt=\"\" /></p>\n<h2 id=\"12-animation-worklet\"><a class=\"markdownIt-Anchor\" href=\"#12-animation-worklet\"></a> 12) Animation Worklet</h2>\n<p><img src=\"/images/next-generation-web-styling/animation_worklet_1.png\" alt=\"\" /></p>\n<h2 id=\"speed-round\"><a class=\"markdownIt-Anchor\" href=\"#speed-round\"></a> Speed Round</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123; <span class=\"attribute\">size</span>: <span class=\"number\">50vw</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">iframe</span> &#123; <span class=\"attribute\">aspect-ratio</span>: <span class=\"number\">16</span> / <span class=\"number\">9</span>;&#125;</span><br><span class=\"line\">// min(),max(),clamp() </span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123; <span class=\"attribute\">font-size</span>: <span class=\"built_in\">clamp</span>(1.5rem, 6vw);&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://css-at-cds.netlify.com/\" target=\"_blank\" rel=\"noopener\">https://css-at-cds.netlify.com/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Closed Caption (폐쇄 자막, 자막의 표시여부를 설정할 수 있는 자)</p>\n<h2 id=\"1-scroll-snap\"><a class=\"markdownIt-Anchor\" href=\"#1-scroll-snap\"></a> 1) Scroll-snap</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow-x</span>: auto;</span><br><span class=\"line\">    <span class=\"attribute\">overscroll-behavior-y</span>: contain;</span><br><span class=\"line\">    <span class=\"attribute\">scroll-snap-type</span>: y mandatory;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">section</span> &gt; <span class=\"selector-tag\">picture</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">scroll-snap-align</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"list-with-sub-list-html\"><a class=\"markdownIt-Anchor\" href=\"#list-with-sub-list-html\"></a> List with Sub-List HTML</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">herf</span>=<span class=\"string\">\"...\"</span>&gt;</span>One<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">herf</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">aria-haspopup</span>=<span class=\"string\">\"true\"</span>&gt;</span>TWO<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"\"</span><span class=\"attr\">dropdown</span>\" <span class=\"attr\">aria-label</span>=<span class=\"string\">\"submenu\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">herf</span>=<span class=\"string\">\"...\"</span>&gt;</span>SUB-1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> &gt; <span class=\"selector-tag\">el</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:focus</span> &gt; <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\"><span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\"><span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-media-prefers-\"><a class=\"markdownIt-Anchor\" href=\"#2-media-prefers-\"></a> 2) @media (prefers-*)</h2>\n<h3 id=\"prefers-reduced-motion\"><a class=\"markdownIt-Anchor\" href=\"#prefers-reduced-motion\"></a> prefers-reduced-motion</h3>\n<p><img src=\"/images/next-generation-web-styling/prefer_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/prefer_2.png\" alt=\"\" /></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">media</span> (prefers-reduced-motion: reduce) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">animation</span>: <span class=\"selector-tag\">cross-fade</span> 3<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">ease-in-out</span> <span class=\"selector-tag\">infinite</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"prefers-color-scheme\"><a class=\"markdownIt-Anchor\" href=\"#prefers-color-scheme\"></a> prefers-color-scheme</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media(prefers-color-scheme: dark) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">--lightness</span>: 90%;</span><br><span class=\"line\">    <span class=\"selector-tag\">--text-1</span>: <span class=\"selector-tag\">hsl</span>(200 10% <span class=\"selector-tag\">var</span>(<span class=\"selector-tag\">--lightness</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-logical-properties\"><a class=\"markdownIt-Anchor\" href=\"#3-logical-properties\"></a> 3) Logical properties</h2>\n<h3 id=\"new-mental-modal\"><a class=\"markdownIt-Anchor\" href=\"#new-mental-modal\"></a> new mental modal</h3>\n<p>the browser does all of that great work for you to make that website more internaltionalized.<br />\n<img src=\"/images/next-generation-web-styling/localproperty_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/localproperty_2.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/localproperty_3.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/localproperty_4.png\" alt=\"\" /></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;  </span><br><span class=\"line\">    <span class=\"attribute\">block-size</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">inline-size</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.h2</span>, <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    // margin-left: 3rem;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-inline-start</span>: 3<span class=\"selector-tag\">rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">main</span> &#123;</span><br><span class=\"line\">    //border-top: 2px dashed;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-block-start</span>: 2<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">dashed</span>;</span><br><span class=\"line\">    //margin-top: 3rem;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-block-start</span>: 3<span class=\"selector-tag\">rem</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://wit.nts-corp.com/2018/08/28/5317\" target=\"_blank\" rel=\"noopener\">https://wit.nts-corp.com/2018/08/28/5317</a></p>\n<h2 id=\"4-sticky-situations\"><a class=\"markdownIt-Anchor\" href=\"#4-sticky-situations\"></a> 4) Sticky situations</h2>\n<p>Classic sticky<br />\nThe Sticky stack {CSS}<br />\nUi layers overlap within the viewport</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">dl</span> &gt; <span class=\"selector-tag\">dt</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: sticky;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>The sticky Desperado {HTML}</p>\n<h2 id=\"5-backdrop-filter\"><a class=\"markdownIt-Anchor\" href=\"#5-backdrop-filter\"></a> 5) backdrop-filter</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">element</span><span class=\"selector-class\">.style</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">backdrop-filter</span>: <span class=\"built_in\">blur</span>(10px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-is\"><a class=\"markdownIt-Anchor\" href=\"#6-is\"></a> 6) :is()</h2>\n<h3 id=\"any-match\"><a class=\"markdownIt-Anchor\" href=\"#any-match\"></a> any(), match()</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">:is(.focus</span>, <span class=\"selector-pseudo\">:focus)</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">article</span> &gt; <span class=\"selector-pseudo\">:is(h1</span>,<span class=\"selector-tag\">h2</span>,<span class=\"selector-tag\">h3</span>,<span class=\"selector-tag\">h4</span>,<span class=\"selector-tag\">h5</span>,<span class=\"selector-tag\">h6</span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-grid-gap-gap-for-flexbox\"><a class=\"markdownIt-Anchor\" href=\"#7-grid-gap-gap-for-flexbox\"></a> 7) grid gap gap (for Flexbox)</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.flex-button</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-flex;</span><br><span class=\"line\">    <span class=\"attribute\">gap</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">    <span class=\"attribute\">place-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-houdini\"><a class=\"markdownIt-Anchor\" href=\"#8-houdini\"></a> 8) Houdini</h2>\n<h3 id=\"low-level-css\"><a class=\"markdownIt-Anchor\" href=\"#low-level-css\"></a> low-level css</h3>\n<p><img src=\"/images/next-generation-web-styling/houdini_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/houdini_2.png\" alt=\"\" /></p>\n<h2 id=\"9-properties-values-api\"><a class=\"markdownIt-Anchor\" href=\"#9-properties-values-api\"></a> 9) Properties &amp; Values API</h2>\n<p><img src=\"/images/next-generation-web-styling/property_value_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/property_value_2.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/property_value_3.png\" alt=\"\" /></p>\n<h2 id=\"10-typed-om\"><a class=\"markdownIt-Anchor\" href=\"#10-typed-om\"></a> 10) Typed OM</h2>\n<p><img src=\"/images/next-generation-web-styling/typedOM_1.png\" alt=\"\" /></p>\n<h2 id=\"11-paint-api\"><a class=\"markdownIt-Anchor\" href=\"#11-paint-api\"></a> 11) Paint API</h2>\n<p><img src=\"/images/next-generation-web-styling/paintedAPI_1.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/paintedAPI_2.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/paintedAPI_3.png\" alt=\"\" /><br />\n<img src=\"/images/next-generation-web-styling/paintedAPI_4.png\" alt=\"\" /></p>\n<h2 id=\"12-animation-worklet\"><a class=\"markdownIt-Anchor\" href=\"#12-animation-worklet\"></a> 12) Animation Worklet</h2>\n<p><img src=\"/images/next-generation-web-styling/animation_worklet_1.png\" alt=\"\" /></p>\n<h2 id=\"speed-round\"><a class=\"markdownIt-Anchor\" href=\"#speed-round\"></a> Speed Round</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123; <span class=\"attribute\">size</span>: <span class=\"number\">50vw</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">iframe</span> &#123; <span class=\"attribute\">aspect-ratio</span>: <span class=\"number\">16</span> / <span class=\"number\">9</span>;&#125;</span><br><span class=\"line\">// min(),max(),clamp() </span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123; <span class=\"attribute\">font-size</span>: <span class=\"built_in\">clamp</span>(1.5rem, 6vw);&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://css-at-cds.netlify.com/\" target=\"_blank\" rel=\"noopener\">https://css-at-cds.netlify.com/</a></p>\n"},{"title":"project-jasypt","date":"2020-06-24T07:14:15.000Z","_content":"### jasypt\n- Java Simplified Encryption\n- Gradle 추가 compile \"com.github.ulisesbocchio:jasypt-spring-boot-starter:1.17\"\n- StringEncryptor Bean 생성 후 application.yml에 jasypt: encryptor: bean에 해당 bean 이름 선언\n","source":"_posts/project-jasypt.md","raw":"---\ntitle: project-jasypt\ndate: 2020-06-24 16:14:15\ntags:\n---\n### jasypt\n- Java Simplified Encryption\n- Gradle 추가 compile \"com.github.ulisesbocchio:jasypt-spring-boot-starter:1.17\"\n- StringEncryptor Bean 생성 후 application.yml에 jasypt: encryptor: bean에 해당 bean 이름 선언\n","slug":"project-jasypt","published":1,"updated":"2020-07-11T04:51:03.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515h0030qlvoduqt6ke9","content":"<h3 id=\"jasypt\"><a class=\"markdownIt-Anchor\" href=\"#jasypt\"></a> jasypt</h3>\n<ul>\n<li>Java Simplified Encryption</li>\n<li>Gradle 추가 compile “com.github.ulisesbocchio:jasypt-spring-boot-starter:1.17”</li>\n<li>StringEncryptor Bean 생성 후 application.yml에 jasypt: encryptor: bean에 해당 bean 이름 선언</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"jasypt\"><a class=\"markdownIt-Anchor\" href=\"#jasypt\"></a> jasypt</h3>\n<ul>\n<li>Java Simplified Encryption</li>\n<li>Gradle 추가 compile “com.github.ulisesbocchio:jasypt-spring-boot-starter:1.17”</li>\n<li>StringEncryptor Bean 생성 후 application.yml에 jasypt: encryptor: bean에 해당 bean 이름 선언</li>\n</ul>\n"},{"title":"project-start-materials","date":"2020-03-01T11:26:59.000Z","_content":"## Jenkins\n\nCI/CD 환경을 만들기 위해서 가장 익숙한 도구를 사용했다.\nwar파일을 받아 실행만 하면 매우 쉽기 때문에 설치해서 사용하려고 한다.\n\n```shell script\n#!/bin/bash\n\nexport HTTP_PORT=9090\nexport JENKINS_HOME=~/project/jenkins/jenkins_home\n\nnohup java -jar jenkins.war --httpPort=$HTTP_PORT --sessionTimeout=120 -XX:+AggressiveOpts >> ./logs/jenkins.log 2>&1 &\n```\n\n아무 설정도 하지 않으면 JENKINS_HOME을 기본적으로 홈의 .jenkins 폴더에 구성하기 떄문에 Jenkins_home을 지정해주고,\nPort 설정을 하지 않으면 8080 포트로 기동 되기에 HTTP_PORT 를 변경할 수 있도록 한다.\n그리고 기동 후 $JENKINS_HOME/secrets/initialAdminPassword 를 물어보기 때문에 이를 넣고 기동하도록 하자\n\n## Docker\n\nDocker를 이용한 Container 배포를 하기 위해 로컬에서 Docker를 사용할 수 있도록 설치 해보자\nhttps://docs.docker.com/install/linux/docker-ce/ubuntu/ 에 매우 잘 나와 있다.\n\n### SET UP THE REPOSITORY\n1. update the apt package index:\n```shell script\nsudo apt update\n```\n\n2. Install packages to allow apt to use a repository over HTTPS:\n```shell script\nsudo apt install \\\n     apt-transport-https \\\n     ca-certificates \\\n     curl \\\n     gnupg-agent \\\n     software-properties-common\n\n```\n\n3. Add Docker’s official GPG key:\nGPG(PGP)는 암호화 프로그램으로 RSA 방식을 사용하며 주로 이메일을 암호화 하는데 사용된다.\n\n ```shell script\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\nsudo apt-key fingerprint 0EBFCD88\n```\n\n4. Set up the stable repository\nlsb_release -cs 는 Ubuntu distribution 정보를 알수 있다.\n  - Eoan 19.10\n  - Bionic 18.04 (LTS)\n  - Xenial 16.04 (LTS)\n```shell script\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n```\n\n### INSTALL DOCKER ENGINE - COMMUNITY\n\n1. Update the apt package index.\n```shell script\nsudo apt update\n```\n\n2. Install the latest version of Docker Engine - Community and containerd, or go to the next step to install a specific version:\n```shell script\nsudo apt install docker-ce docker-ce-cli containerd.io\n```   \n\n3. Verify that Docker Engine\n```shell script\nsudo docker run hello-world\n```\n\n4. 확인\n```shell script\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n1b930d010525: Pull complete \nDigest: sha256:fc6a51919cfeb2e6763f62b6d9e8815acbf7cd2e476ea353743570610737b752\nStatus: Downloaded newer image for hello-world:latest\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\n\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n\n```\n\n","source":"_posts/project-start-materials.md","raw":"---\ntitle: project-start-materials\ndate: 2020-03-01 20:26:59\ntags:\n---\n## Jenkins\n\nCI/CD 환경을 만들기 위해서 가장 익숙한 도구를 사용했다.\nwar파일을 받아 실행만 하면 매우 쉽기 때문에 설치해서 사용하려고 한다.\n\n```shell script\n#!/bin/bash\n\nexport HTTP_PORT=9090\nexport JENKINS_HOME=~/project/jenkins/jenkins_home\n\nnohup java -jar jenkins.war --httpPort=$HTTP_PORT --sessionTimeout=120 -XX:+AggressiveOpts >> ./logs/jenkins.log 2>&1 &\n```\n\n아무 설정도 하지 않으면 JENKINS_HOME을 기본적으로 홈의 .jenkins 폴더에 구성하기 떄문에 Jenkins_home을 지정해주고,\nPort 설정을 하지 않으면 8080 포트로 기동 되기에 HTTP_PORT 를 변경할 수 있도록 한다.\n그리고 기동 후 $JENKINS_HOME/secrets/initialAdminPassword 를 물어보기 때문에 이를 넣고 기동하도록 하자\n\n## Docker\n\nDocker를 이용한 Container 배포를 하기 위해 로컬에서 Docker를 사용할 수 있도록 설치 해보자\nhttps://docs.docker.com/install/linux/docker-ce/ubuntu/ 에 매우 잘 나와 있다.\n\n### SET UP THE REPOSITORY\n1. update the apt package index:\n```shell script\nsudo apt update\n```\n\n2. Install packages to allow apt to use a repository over HTTPS:\n```shell script\nsudo apt install \\\n     apt-transport-https \\\n     ca-certificates \\\n     curl \\\n     gnupg-agent \\\n     software-properties-common\n\n```\n\n3. Add Docker’s official GPG key:\nGPG(PGP)는 암호화 프로그램으로 RSA 방식을 사용하며 주로 이메일을 암호화 하는데 사용된다.\n\n ```shell script\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\nsudo apt-key fingerprint 0EBFCD88\n```\n\n4. Set up the stable repository\nlsb_release -cs 는 Ubuntu distribution 정보를 알수 있다.\n  - Eoan 19.10\n  - Bionic 18.04 (LTS)\n  - Xenial 16.04 (LTS)\n```shell script\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n```\n\n### INSTALL DOCKER ENGINE - COMMUNITY\n\n1. Update the apt package index.\n```shell script\nsudo apt update\n```\n\n2. Install the latest version of Docker Engine - Community and containerd, or go to the next step to install a specific version:\n```shell script\nsudo apt install docker-ce docker-ce-cli containerd.io\n```   \n\n3. Verify that Docker Engine\n```shell script\nsudo docker run hello-world\n```\n\n4. 확인\n```shell script\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n1b930d010525: Pull complete \nDigest: sha256:fc6a51919cfeb2e6763f62b6d9e8815acbf7cd2e476ea353743570610737b752\nStatus: Downloaded newer image for hello-world:latest\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\n\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n\n```\n\n","slug":"project-start-materials","published":1,"updated":"2020-07-11T04:51:03.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515i0032qlvod5mgdtsv","content":"<h2 id=\"jenkins\"><a class=\"markdownIt-Anchor\" href=\"#jenkins\"></a> Jenkins</h2>\n<p>CI/CD 환경을 만들기 위해서 가장 익숙한 도구를 사용했다.<br />\nwar파일을 받아 실행만 하면 매우 쉽기 때문에 설치해서 사용하려고 한다.</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">export HTTP_PORT=9090</span><br><span class=\"line\">export JENKINS_HOME=~/project/jenkins/jenkins_home</span><br><span class=\"line\"></span><br><span class=\"line\">nohup java -jar jenkins.war --httpPort=$HTTP_PORT --sessionTimeout=120 -XX:+AggressiveOpts &gt;&gt; ./logs/jenkins.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<p>아무 설정도 하지 않으면 JENKINS_HOME을 기본적으로 홈의 .jenkins 폴더에 구성하기 떄문에 Jenkins_home을 지정해주고,<br />\nPort 설정을 하지 않으면 8080 포트로 기동 되기에 HTTP_PORT 를 변경할 수 있도록 한다.<br />\n그리고 기동 후 $JENKINS_HOME/secrets/initialAdminPassword 를 물어보기 때문에 이를 넣고 기동하도록 하자</p>\n<h2 id=\"docker\"><a class=\"markdownIt-Anchor\" href=\"#docker\"></a> Docker</h2>\n<p>Docker를 이용한 Container 배포를 하기 위해 로컬에서 Docker를 사용할 수 있도록 설치 해보자<br />\n<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a> 에 매우 잘 나와 있다.</p>\n<h3 id=\"set-up-the-repository\"><a class=\"markdownIt-Anchor\" href=\"#set-up-the-repository\"></a> SET UP THE REPOSITORY</h3>\n<ol>\n<li>update the apt package index:</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Install packages to allow apt to use a repository over HTTPS:</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install \\</span><br><span class=\"line\">     apt-transport-https \\</span><br><span class=\"line\">     ca-certificates \\</span><br><span class=\"line\">     curl \\</span><br><span class=\"line\">     gnupg-agent \\</span><br><span class=\"line\">     software-properties-common</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Add Docker’s official GPG key:<br />\nGPG(PGP)는 암호화 프로그램으로 RSA 방식을 사용하며 주로 이메일을 암호화 하는데 사용된다.</li>\n</ol>\n <figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>Set up the stable repository<br />\nlsb_release -cs 는 Ubuntu distribution 정보를 알수 있다.</li>\n</ol>\n<ul>\n<li>Eoan 19.10</li>\n<li>Bionic 18.04 (LTS)</li>\n<li>Xenial 16.04 (LTS)</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"</span><br></pre></td></tr></table></figure>\n<h3 id=\"install-docker-engine-community\"><a class=\"markdownIt-Anchor\" href=\"#install-docker-engine-community\"></a> INSTALL DOCKER ENGINE - COMMUNITY</h3>\n<ol>\n<li>Update the apt package index.</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Install the latest version of Docker Engine - Community and containerd, or go to the next step to install a specific version:</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">```   </span><br><span class=\"line\"></span><br><span class=\"line\">3. Verify that Docker Engine</span><br><span class=\"line\">```shell script</span><br><span class=\"line\">sudo docker run hello-world</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>확인</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to find image 'hello-world:latest' locally</span><br><span class=\"line\">latest: Pulling from library/hello-world</span><br><span class=\"line\">1b930d010525: Pull complete </span><br><span class=\"line\">Digest: sha256:fc6a51919cfeb2e6763f62b6d9e8815acbf7cd2e476ea353743570610737b752</span><br><span class=\"line\">Status: Downloaded newer image for hello-world:latest</span><br><span class=\"line\"></span><br><span class=\"line\">Hello from Docker!</span><br><span class=\"line\">This message shows that your installation appears to be working correctly.</span><br><span class=\"line\"></span><br><span class=\"line\">To generate this message, Docker took the following steps:</span><br><span class=\"line\"> 1. The Docker client contacted the Docker daemon.</span><br><span class=\"line\"> 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.</span><br><span class=\"line\">    (amd64)</span><br><span class=\"line\"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class=\"line\">    executable that produces the output you are currently reading.</span><br><span class=\"line\"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class=\"line\">    to your terminal.</span><br><span class=\"line\"></span><br><span class=\"line\">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class=\"line\"><span class=\"meta\"> $</span><span class=\"bash\"> docker run -it ubuntu bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">Share images, automate workflows, and more with a free Docker ID:</span><br><span class=\"line\"> https://hub.docker.com/</span><br><span class=\"line\"></span><br><span class=\"line\">For more examples and ideas, visit:</span><br><span class=\"line\"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"jenkins\"><a class=\"markdownIt-Anchor\" href=\"#jenkins\"></a> Jenkins</h2>\n<p>CI/CD 환경을 만들기 위해서 가장 익숙한 도구를 사용했다.<br />\nwar파일을 받아 실행만 하면 매우 쉽기 때문에 설치해서 사용하려고 한다.</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">export HTTP_PORT=9090</span><br><span class=\"line\">export JENKINS_HOME=~/project/jenkins/jenkins_home</span><br><span class=\"line\"></span><br><span class=\"line\">nohup java -jar jenkins.war --httpPort=$HTTP_PORT --sessionTimeout=120 -XX:+AggressiveOpts &gt;&gt; ./logs/jenkins.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<p>아무 설정도 하지 않으면 JENKINS_HOME을 기본적으로 홈의 .jenkins 폴더에 구성하기 떄문에 Jenkins_home을 지정해주고,<br />\nPort 설정을 하지 않으면 8080 포트로 기동 되기에 HTTP_PORT 를 변경할 수 있도록 한다.<br />\n그리고 기동 후 $JENKINS_HOME/secrets/initialAdminPassword 를 물어보기 때문에 이를 넣고 기동하도록 하자</p>\n<h2 id=\"docker\"><a class=\"markdownIt-Anchor\" href=\"#docker\"></a> Docker</h2>\n<p>Docker를 이용한 Container 배포를 하기 위해 로컬에서 Docker를 사용할 수 있도록 설치 해보자<br />\n<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a> 에 매우 잘 나와 있다.</p>\n<h3 id=\"set-up-the-repository\"><a class=\"markdownIt-Anchor\" href=\"#set-up-the-repository\"></a> SET UP THE REPOSITORY</h3>\n<ol>\n<li>update the apt package index:</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Install packages to allow apt to use a repository over HTTPS:</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install \\</span><br><span class=\"line\">     apt-transport-https \\</span><br><span class=\"line\">     ca-certificates \\</span><br><span class=\"line\">     curl \\</span><br><span class=\"line\">     gnupg-agent \\</span><br><span class=\"line\">     software-properties-common</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Add Docker’s official GPG key:<br />\nGPG(PGP)는 암호화 프로그램으로 RSA 방식을 사용하며 주로 이메일을 암호화 하는데 사용된다.</li>\n</ol>\n <figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>Set up the stable repository<br />\nlsb_release -cs 는 Ubuntu distribution 정보를 알수 있다.</li>\n</ol>\n<ul>\n<li>Eoan 19.10</li>\n<li>Bionic 18.04 (LTS)</li>\n<li>Xenial 16.04 (LTS)</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"</span><br></pre></td></tr></table></figure>\n<h3 id=\"install-docker-engine-community\"><a class=\"markdownIt-Anchor\" href=\"#install-docker-engine-community\"></a> INSTALL DOCKER ENGINE - COMMUNITY</h3>\n<ol>\n<li>Update the apt package index.</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Install the latest version of Docker Engine - Community and containerd, or go to the next step to install a specific version:</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">```   </span><br><span class=\"line\"></span><br><span class=\"line\">3. Verify that Docker Engine</span><br><span class=\"line\">```shell script</span><br><span class=\"line\">sudo docker run hello-world</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>확인</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to find image 'hello-world:latest' locally</span><br><span class=\"line\">latest: Pulling from library/hello-world</span><br><span class=\"line\">1b930d010525: Pull complete </span><br><span class=\"line\">Digest: sha256:fc6a51919cfeb2e6763f62b6d9e8815acbf7cd2e476ea353743570610737b752</span><br><span class=\"line\">Status: Downloaded newer image for hello-world:latest</span><br><span class=\"line\"></span><br><span class=\"line\">Hello from Docker!</span><br><span class=\"line\">This message shows that your installation appears to be working correctly.</span><br><span class=\"line\"></span><br><span class=\"line\">To generate this message, Docker took the following steps:</span><br><span class=\"line\"> 1. The Docker client contacted the Docker daemon.</span><br><span class=\"line\"> 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.</span><br><span class=\"line\">    (amd64)</span><br><span class=\"line\"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class=\"line\">    executable that produces the output you are currently reading.</span><br><span class=\"line\"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class=\"line\">    to your terminal.</span><br><span class=\"line\"></span><br><span class=\"line\">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class=\"line\"><span class=\"meta\"> $</span><span class=\"bash\"> docker run -it ubuntu bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">Share images, automate workflows, and more with a free Docker ID:</span><br><span class=\"line\"> https://hub.docker.com/</span><br><span class=\"line\"></span><br><span class=\"line\">For more examples and ideas, visit:</span><br><span class=\"line\"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>\n"},{"title":"project-nginx","date":"2020-06-24T23:53:07.000Z","_content":"### Nginx 설치\n#### 사전 설치 필요 Library\n- GCC (GNU) : GNU Compiler Collection\n- PCRE (Perl Compatible Regular Expression) : URL 재작성 모듈 및 HTTP 핵심 모듈이 정규식을 사용한다.\n- zlib : nginx gzip 압축 하는데 필요\n- OPENSSL : SSL v2/v3, TLS v1 protocol 지원\n sudo apt-get install build-essential\n sudo apt-get install libpcre3 libpcre3-dev\n sudo apt install zlib zlib-devel\n sudo apt install zlib1g zlib1g-dev\n sudo apt install openssl libssl-dev\n \n sudo yum install gcc gcc-c++ make\n sudo yum install pcre pcre-devel\n sudo yum install zlib zlib-devel\n sudo yum install openssl openssl-devel\n\n#### Make Compile\n- ./configure --prefix=/projectHome --with-http_ssl_module --with-http_v2_module --with-http_realip_module\n    - prefix = base nginx folder\n    - make\n    - make install \n","source":"_posts/project-nginx.md","raw":"---\ntitle: project-nginx\ndate: 2020-06-25 08:53:07\ntags:\n---\n### Nginx 설치\n#### 사전 설치 필요 Library\n- GCC (GNU) : GNU Compiler Collection\n- PCRE (Perl Compatible Regular Expression) : URL 재작성 모듈 및 HTTP 핵심 모듈이 정규식을 사용한다.\n- zlib : nginx gzip 압축 하는데 필요\n- OPENSSL : SSL v2/v3, TLS v1 protocol 지원\n sudo apt-get install build-essential\n sudo apt-get install libpcre3 libpcre3-dev\n sudo apt install zlib zlib-devel\n sudo apt install zlib1g zlib1g-dev\n sudo apt install openssl libssl-dev\n \n sudo yum install gcc gcc-c++ make\n sudo yum install pcre pcre-devel\n sudo yum install zlib zlib-devel\n sudo yum install openssl openssl-devel\n\n#### Make Compile\n- ./configure --prefix=/projectHome --with-http_ssl_module --with-http_v2_module --with-http_realip_module\n    - prefix = base nginx folder\n    - make\n    - make install \n","slug":"project-nginx","published":1,"updated":"2020-07-11T04:51:03.350Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515k0034qlvo1kqq7zbg","content":"<h3 id=\"nginx-설치\"><a class=\"markdownIt-Anchor\" href=\"#nginx-설치\"></a> Nginx 설치</h3>\n<h4 id=\"사전-설치-필요-library\"><a class=\"markdownIt-Anchor\" href=\"#사전-설치-필요-library\"></a> 사전 설치 필요 Library</h4>\n<ul>\n<li>GCC (GNU) : GNU Compiler Collection</li>\n<li>PCRE (Perl Compatible Regular Expression) : URL 재작성 모듈 및 HTTP 핵심 모듈이 정규식을 사용한다.</li>\n<li>zlib : nginx gzip 압축 하는데 필요</li>\n<li>OPENSSL : SSL v2/v3, TLS v1 protocol 지원<br />\nsudo apt-get install build-essential<br />\nsudo apt-get install libpcre3 libpcre3-dev<br />\nsudo apt install zlib zlib-devel<br />\nsudo apt install zlib1g zlib1g-dev<br />\nsudo apt install openssl libssl-dev</li>\n</ul>\n<p>sudo yum install gcc gcc-c++ make<br />\nsudo yum install pcre pcre-devel<br />\nsudo yum install zlib zlib-devel<br />\nsudo yum install openssl openssl-devel</p>\n<h4 id=\"make-compile\"><a class=\"markdownIt-Anchor\" href=\"#make-compile\"></a> Make Compile</h4>\n<ul>\n<li>./configure --prefix=/projectHome --with-http_ssl_module --with-http_v2_module --with-http_realip_module\n<ul>\n<li>prefix = base nginx folder</li>\n<li>make</li>\n<li>make install</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"nginx-설치\"><a class=\"markdownIt-Anchor\" href=\"#nginx-설치\"></a> Nginx 설치</h3>\n<h4 id=\"사전-설치-필요-library\"><a class=\"markdownIt-Anchor\" href=\"#사전-설치-필요-library\"></a> 사전 설치 필요 Library</h4>\n<ul>\n<li>GCC (GNU) : GNU Compiler Collection</li>\n<li>PCRE (Perl Compatible Regular Expression) : URL 재작성 모듈 및 HTTP 핵심 모듈이 정규식을 사용한다.</li>\n<li>zlib : nginx gzip 압축 하는데 필요</li>\n<li>OPENSSL : SSL v2/v3, TLS v1 protocol 지원<br />\nsudo apt-get install build-essential<br />\nsudo apt-get install libpcre3 libpcre3-dev<br />\nsudo apt install zlib zlib-devel<br />\nsudo apt install zlib1g zlib1g-dev<br />\nsudo apt install openssl libssl-dev</li>\n</ul>\n<p>sudo yum install gcc gcc-c++ make<br />\nsudo yum install pcre pcre-devel<br />\nsudo yum install zlib zlib-devel<br />\nsudo yum install openssl openssl-devel</p>\n<h4 id=\"make-compile\"><a class=\"markdownIt-Anchor\" href=\"#make-compile\"></a> Make Compile</h4>\n<ul>\n<li>./configure --prefix=/projectHome --with-http_ssl_module --with-http_v2_module --with-http_realip_module\n<ul>\n<li>prefix = base nginx folder</li>\n<li>make</li>\n<li>make install</li>\n</ul>\n</li>\n</ul>\n"},{"title":"jenkins-ssh-deploy","date":"2020-06-23T01:18:22.000Z","_content":"### Jenkins SSH Deploy\n1. Jenkins Plug-in 설치\n    - SSH Agent Plug-in : This plugin allows you to provide SSH credentials to builds via a ssh-agent in Jenkins.\n2. jenkins Server에 jenkins 계정으로 public/private keypair 만들기\n    - sudo -u jenkins /bash/sh\n    - create a key pair\n    ```text\n       ssh-keygen\n    ```\n    - After entering the command, you should see the following prompt\n    ```text\n       Output\n       Generating public/private rsa key pair.\n       Enter file in which to save the key (/your_home/.ssh/id_rsa):\n    ```\n    - 생성하면 id_rsa, id_rsa.pub file이 만들어진다.\n3. remote Server의 .ssh폴더에 authorized_keys 파일에 jenkins Server의 Jenkins 계정 public key 등록하기\n4. Jenkins Credentials의 Global Credential에 jenkins 계정 private key 등록하기\n5. pipeline 구성\n    - pipeline\n    ```text\n       sshagent(['user_key_id']) {\n           sh 'scp blur blur~'\n           sh 'ssh -t -t userId@targetIp -o StrictHostKeyChecking=no \"cd /usr/local && ./start.sh\"'\n       }\n    ```\n\n6. start.sh 생성\n```shell script\n\n```    \n","source":"_posts/project-jenkins-ssh-deploy.md","raw":"---\ntitle: jenkins-ssh-deploy\ndate: 2020-06-23 10:18:22\ntags:\n---\n### Jenkins SSH Deploy\n1. Jenkins Plug-in 설치\n    - SSH Agent Plug-in : This plugin allows you to provide SSH credentials to builds via a ssh-agent in Jenkins.\n2. jenkins Server에 jenkins 계정으로 public/private keypair 만들기\n    - sudo -u jenkins /bash/sh\n    - create a key pair\n    ```text\n       ssh-keygen\n    ```\n    - After entering the command, you should see the following prompt\n    ```text\n       Output\n       Generating public/private rsa key pair.\n       Enter file in which to save the key (/your_home/.ssh/id_rsa):\n    ```\n    - 생성하면 id_rsa, id_rsa.pub file이 만들어진다.\n3. remote Server의 .ssh폴더에 authorized_keys 파일에 jenkins Server의 Jenkins 계정 public key 등록하기\n4. Jenkins Credentials의 Global Credential에 jenkins 계정 private key 등록하기\n5. pipeline 구성\n    - pipeline\n    ```text\n       sshagent(['user_key_id']) {\n           sh 'scp blur blur~'\n           sh 'ssh -t -t userId@targetIp -o StrictHostKeyChecking=no \"cd /usr/local && ./start.sh\"'\n       }\n    ```\n\n6. start.sh 생성\n```shell script\n\n```    \n","slug":"project-jenkins-ssh-deploy","published":1,"updated":"2020-07-11T04:51:03.350Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515l0035qlvo2g1le7xw","content":"<h3 id=\"jenkins-ssh-deploy\"><a class=\"markdownIt-Anchor\" href=\"#jenkins-ssh-deploy\"></a> Jenkins SSH Deploy</h3>\n<ol>\n<li>\n<p>Jenkins Plug-in 설치</p>\n<ul>\n<li>SSH Agent Plug-in : This plugin allows you to provide SSH credentials to builds via a ssh-agent in Jenkins.</li>\n</ul>\n</li>\n<li>\n<p>jenkins Server에 jenkins 계정으로 public/private keypair 만들기</p>\n<ul>\n<li>sudo -u jenkins /bash/sh</li>\n<li>create a key pair</li>\n</ul>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen</span><br></pre></td></tr></table></figure>\n<ul>\n<li>After entering the command, you should see the following prompt</li>\n</ul>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Output</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (/your_home/.ssh/id_rsa):</span><br></pre></td></tr></table></figure>\n<ul>\n<li>생성하면 id_rsa, id_rsa.pub file이 만들어진다.</li>\n</ul>\n</li>\n<li>\n<p>remote Server의 .ssh폴더에 authorized_keys 파일에 jenkins Server의 Jenkins 계정 public key 등록하기</p>\n</li>\n<li>\n<p>Jenkins Credentials의 Global Credential에 jenkins 계정 private key 등록하기</p>\n</li>\n<li>\n<p>pipeline 구성</p>\n<ul>\n<li>pipeline</li>\n</ul>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sshagent([&apos;user_key_id&apos;]) &#123;</span><br><span class=\"line\">    sh &apos;scp blur blur~&apos;</span><br><span class=\"line\">    sh &apos;ssh -t -t userId@targetIp -o StrictHostKeyChecking=no &quot;cd /usr/local &amp;&amp; ./start.sh&quot;&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><a href=\"http://start.sh\" target=\"_blank\" rel=\"noopener\">start.sh</a> 생성</p>\n</li>\n</ol>\n<pre class=\"highlight\"><code class=\"shell\">\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"jenkins-ssh-deploy\"><a class=\"markdownIt-Anchor\" href=\"#jenkins-ssh-deploy\"></a> Jenkins SSH Deploy</h3>\n<ol>\n<li>\n<p>Jenkins Plug-in 설치</p>\n<ul>\n<li>SSH Agent Plug-in : This plugin allows you to provide SSH credentials to builds via a ssh-agent in Jenkins.</li>\n</ul>\n</li>\n<li>\n<p>jenkins Server에 jenkins 계정으로 public/private keypair 만들기</p>\n<ul>\n<li>sudo -u jenkins /bash/sh</li>\n<li>create a key pair</li>\n</ul>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen</span><br></pre></td></tr></table></figure>\n<ul>\n<li>After entering the command, you should see the following prompt</li>\n</ul>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Output</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (/your_home/.ssh/id_rsa):</span><br></pre></td></tr></table></figure>\n<ul>\n<li>생성하면 id_rsa, id_rsa.pub file이 만들어진다.</li>\n</ul>\n</li>\n<li>\n<p>remote Server의 .ssh폴더에 authorized_keys 파일에 jenkins Server의 Jenkins 계정 public key 등록하기</p>\n</li>\n<li>\n<p>Jenkins Credentials의 Global Credential에 jenkins 계정 private key 등록하기</p>\n</li>\n<li>\n<p>pipeline 구성</p>\n<ul>\n<li>pipeline</li>\n</ul>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sshagent([&apos;user_key_id&apos;]) &#123;</span><br><span class=\"line\">    sh &apos;scp blur blur~&apos;</span><br><span class=\"line\">    sh &apos;ssh -t -t userId@targetIp -o StrictHostKeyChecking=no &quot;cd /usr/local &amp;&amp; ./start.sh&quot;&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><a href=\"http://start.sh\" target=\"_blank\" rel=\"noopener\">start.sh</a> 생성</p>\n</li>\n</ol>\n<pre class=\"highlight\"><code class=\"shell\">\n</code></pre>\n"},{"title":"security-project-account-rule","date":"2020-07-08T05:20:01.000Z","_content":"- 계정 관리\n    |항목|비고|\n    |--|--|\n    |패스워드 규칙 관리| 10자리 이상 영문/숫자/특수문자 2가지 이상 조합 사용|\n    |패스워드 변경 주기| 90일 이내 패스워드 변경 진행|\n    |패스워드 암호화| 안전한 암호화 로직으로 패스워드 암호화|\n    |계정별 권한 설정| 사용자별 계정의 용도 파악 및 적절한 권한을 부여|\n    |계정 관리|1인 1계정 사용|\n    |로그인 실패 횟수 제한| 로그온 실패 횟수를 5회 이하로 제한한 경우 양호 (실패시 일정시간 잠금 조치)|\n\n- 접근 관리\n    |항목|비고|\n    |--|--|\n    |관리자 Page 원격 관리 접근 통제|원격 관리시 관리자 IP 또는 특정 IP만 접근 가능하도록 설정|\n    |암호화 통신 접속| HTTPS 양호|\n    |Session Timeout 설정| Session Timeout시간을 설정한 경우 양호|\n    \n- 로그 관리\n    |항목|비고|\n    |--|--|   \n    |정책 변경 로그 설정|관리자 정책 변경에 따른 로그 기록|\n    |사용자 접속 로그 보안|사용자 로그인/접속 로그 보관 설정|\n    |시스템 로그 정기적 검토|시스템 로그 검토(이상 접속 여부)를 정기적으로 검토|","source":"_posts/security-project-account-rule.md","raw":"---\ntitle: security-project-account-rule\ndate: 2020-07-08 14:20:01\ntags:\n---\n- 계정 관리\n    |항목|비고|\n    |--|--|\n    |패스워드 규칙 관리| 10자리 이상 영문/숫자/특수문자 2가지 이상 조합 사용|\n    |패스워드 변경 주기| 90일 이내 패스워드 변경 진행|\n    |패스워드 암호화| 안전한 암호화 로직으로 패스워드 암호화|\n    |계정별 권한 설정| 사용자별 계정의 용도 파악 및 적절한 권한을 부여|\n    |계정 관리|1인 1계정 사용|\n    |로그인 실패 횟수 제한| 로그온 실패 횟수를 5회 이하로 제한한 경우 양호 (실패시 일정시간 잠금 조치)|\n\n- 접근 관리\n    |항목|비고|\n    |--|--|\n    |관리자 Page 원격 관리 접근 통제|원격 관리시 관리자 IP 또는 특정 IP만 접근 가능하도록 설정|\n    |암호화 통신 접속| HTTPS 양호|\n    |Session Timeout 설정| Session Timeout시간을 설정한 경우 양호|\n    \n- 로그 관리\n    |항목|비고|\n    |--|--|   \n    |정책 변경 로그 설정|관리자 정책 변경에 따른 로그 기록|\n    |사용자 접속 로그 보안|사용자 로그인/접속 로그 보관 설정|\n    |시스템 로그 정기적 검토|시스템 로그 검토(이상 접속 여부)를 정기적으로 검토|","slug":"security-project-account-rule","published":1,"updated":"2020-07-11T04:51:03.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515n0039qlvo8v449aqe","content":"<ul>\n<li>\n<p>계정 관리</p>\n<table>\n<thead>\n<tr>\n<th>항목</th>\n<th>비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>패스워드 규칙 관리</td>\n<td>10자리 이상 영문/숫자/특수문자 2가지 이상 조합 사용</td>\n</tr>\n<tr>\n<td>패스워드 변경 주기</td>\n<td>90일 이내 패스워드 변경 진행</td>\n</tr>\n<tr>\n<td>패스워드 암호화</td>\n<td>안전한 암호화 로직으로 패스워드 암호화</td>\n</tr>\n<tr>\n<td>계정별 권한 설정</td>\n<td>사용자별 계정의 용도 파악 및 적절한 권한을 부여</td>\n</tr>\n<tr>\n<td>계정 관리</td>\n<td>1인 1계정 사용</td>\n</tr>\n<tr>\n<td>로그인 실패 횟수 제한</td>\n<td>로그온 실패 횟수를 5회 이하로 제한한 경우 양호 (실패시 일정시간 잠금 조치)</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>접근 관리</p>\n<table>\n<thead>\n<tr>\n<th>항목</th>\n<th>비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>관리자 Page 원격 관리 접근 통제</td>\n<td>원격 관리시 관리자 IP 또는 특정 IP만 접근 가능하도록 설정</td>\n</tr>\n<tr>\n<td>암호화 통신 접속</td>\n<td>HTTPS 양호</td>\n</tr>\n<tr>\n<td>Session Timeout 설정</td>\n<td>Session Timeout시간을 설정한 경우 양호</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>로그 관리</p>\n<table>\n<thead>\n<tr>\n<th>항목</th>\n<th>비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>정책 변경 로그 설정</td>\n<td>관리자 정책 변경에 따른 로그 기록</td>\n</tr>\n<tr>\n<td>사용자 접속 로그 보안</td>\n<td>사용자 로그인/접속 로그 보관 설정</td>\n</tr>\n<tr>\n<td>시스템 로그 정기적 검토</td>\n<td>시스템 로그 검토(이상 접속 여부)를 정기적으로 검토</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>\n<p>계정 관리</p>\n<table>\n<thead>\n<tr>\n<th>항목</th>\n<th>비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>패스워드 규칙 관리</td>\n<td>10자리 이상 영문/숫자/특수문자 2가지 이상 조합 사용</td>\n</tr>\n<tr>\n<td>패스워드 변경 주기</td>\n<td>90일 이내 패스워드 변경 진행</td>\n</tr>\n<tr>\n<td>패스워드 암호화</td>\n<td>안전한 암호화 로직으로 패스워드 암호화</td>\n</tr>\n<tr>\n<td>계정별 권한 설정</td>\n<td>사용자별 계정의 용도 파악 및 적절한 권한을 부여</td>\n</tr>\n<tr>\n<td>계정 관리</td>\n<td>1인 1계정 사용</td>\n</tr>\n<tr>\n<td>로그인 실패 횟수 제한</td>\n<td>로그온 실패 횟수를 5회 이하로 제한한 경우 양호 (실패시 일정시간 잠금 조치)</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>접근 관리</p>\n<table>\n<thead>\n<tr>\n<th>항목</th>\n<th>비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>관리자 Page 원격 관리 접근 통제</td>\n<td>원격 관리시 관리자 IP 또는 특정 IP만 접근 가능하도록 설정</td>\n</tr>\n<tr>\n<td>암호화 통신 접속</td>\n<td>HTTPS 양호</td>\n</tr>\n<tr>\n<td>Session Timeout 설정</td>\n<td>Session Timeout시간을 설정한 경우 양호</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>로그 관리</p>\n<table>\n<thead>\n<tr>\n<th>항목</th>\n<th>비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>정책 변경 로그 설정</td>\n<td>관리자 정책 변경에 따른 로그 기록</td>\n</tr>\n<tr>\n<td>사용자 접속 로그 보안</td>\n<td>사용자 로그인/접속 로그 보관 설정</td>\n</tr>\n<tr>\n<td>시스템 로그 정기적 검토</td>\n<td>시스템 로그 검토(이상 접속 여부)를 정기적으로 검토</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n"},{"title":"spring-boot-configuration-properties","date":"2020-06-29T02:01:57.000Z","_content":"### @ConfigurationProperties\n- Spring Mail 서비스로 메일 전송하는 기능을 만드려고 하다가 application.yml과 연동되는 Property 값들을 정의하는 방법부터 정리하고자 한다.\n```java\n@ConfigurationProperties(prefix = \"spring.mail\")\npublic class MailProperties {\n\tprivate String host;\n\tprivate Integer port;\n\tprivate String username;\n\tprivate String password;\n}\n```\n\n```yaml\nspring:\n    mail:\n      host:\n      port:\n      username:\n      password:      \n```\n\n```java\n@Configuration(proxyBeanMethods = false)\n@ConditionalOnClass({ MimeMessage.class, MimeType.class, MailSender.class })\n@ConditionalOnMissingBean(MailSender.class)\n@Conditional(MailSenderCondition.class)\n@EnableConfigurationProperties(MailProperties.class)\n@Import({ MailSenderJndiConfiguration.class, MailSenderPropertiesConfiguration.class })\npublic class MailSenderAutoConfiguration {\n\tstatic class MailSenderCondition extends AnyNestedCondition {\n\t\tMailSenderCondition() {\n\t\t\tsuper(ConfigurationPhase.PARSE_CONFIGURATION);\n\t\t}\n\t\t@ConditionalOnProperty(prefix = \"spring.mail\", name = \"host\")\n\t\tstatic class HostProperty {\n\n\t\t}\n\t\t@ConditionalOnProperty(prefix = \"spring.mail\", name = \"jndi-name\")\n\t\tstatic class JndiNameProperty {\n\n\t\t}\n\n\t}\n\n}\n```\n\n- @EnableConfigurationProperties 로 사용할 MailProperties.class를 선언한 뒤 MailSenderJndiConfiguration과 MailSenderPropertiesConfiguration.class의\n  설정을 가져와 처리한다.\n- 이 값을 사용하기 위해서는 Bean으로 선언되어 있기 때문에 주입 받아서 사용하면 된다.\n\n```java\n@Service\npublic class EMailService {\n    @Autowired\n    public JavaMailSender javaMailSender;\n    \n    @Autowired\n    public MailProperties mailProperties;\n\n    public void sendSimpleMessageMail(String to, String subject, String content) {\n       // javaMailSender.send()\n    }\n}\n```","source":"_posts/spring-boot-configuration-properties.md","raw":"---\ntitle: spring-boot-configuration-properties\ndate: 2020-06-29 11:01:57\ntags:\n---\n### @ConfigurationProperties\n- Spring Mail 서비스로 메일 전송하는 기능을 만드려고 하다가 application.yml과 연동되는 Property 값들을 정의하는 방법부터 정리하고자 한다.\n```java\n@ConfigurationProperties(prefix = \"spring.mail\")\npublic class MailProperties {\n\tprivate String host;\n\tprivate Integer port;\n\tprivate String username;\n\tprivate String password;\n}\n```\n\n```yaml\nspring:\n    mail:\n      host:\n      port:\n      username:\n      password:      \n```\n\n```java\n@Configuration(proxyBeanMethods = false)\n@ConditionalOnClass({ MimeMessage.class, MimeType.class, MailSender.class })\n@ConditionalOnMissingBean(MailSender.class)\n@Conditional(MailSenderCondition.class)\n@EnableConfigurationProperties(MailProperties.class)\n@Import({ MailSenderJndiConfiguration.class, MailSenderPropertiesConfiguration.class })\npublic class MailSenderAutoConfiguration {\n\tstatic class MailSenderCondition extends AnyNestedCondition {\n\t\tMailSenderCondition() {\n\t\t\tsuper(ConfigurationPhase.PARSE_CONFIGURATION);\n\t\t}\n\t\t@ConditionalOnProperty(prefix = \"spring.mail\", name = \"host\")\n\t\tstatic class HostProperty {\n\n\t\t}\n\t\t@ConditionalOnProperty(prefix = \"spring.mail\", name = \"jndi-name\")\n\t\tstatic class JndiNameProperty {\n\n\t\t}\n\n\t}\n\n}\n```\n\n- @EnableConfigurationProperties 로 사용할 MailProperties.class를 선언한 뒤 MailSenderJndiConfiguration과 MailSenderPropertiesConfiguration.class의\n  설정을 가져와 처리한다.\n- 이 값을 사용하기 위해서는 Bean으로 선언되어 있기 때문에 주입 받아서 사용하면 된다.\n\n```java\n@Service\npublic class EMailService {\n    @Autowired\n    public JavaMailSender javaMailSender;\n    \n    @Autowired\n    public MailProperties mailProperties;\n\n    public void sendSimpleMessageMail(String to, String subject, String content) {\n       // javaMailSender.send()\n    }\n}\n```","slug":"spring-boot-configuration-properties","published":1,"updated":"2020-07-11T04:51:03.354Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515p003bqlvo15wngvj8","content":"<h3 id=\"configurationproperties\"><a class=\"markdownIt-Anchor\" href=\"#configurationproperties\"></a> @ConfigurationProperties</h3>\n<ul>\n<li>Spring Mail 서비스로 메일 전송하는 기능을 만드려고 하다가 application.yml과 연동되는 Property 값들을 정의하는 방법부터 정리하고자 한다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>(prefix = <span class=\"string\">\"spring.mail\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MailProperties</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String host;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Integer port;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    mail:</span></span><br><span class=\"line\"><span class=\"attr\">      host:</span></span><br><span class=\"line\"><span class=\"attr\">      port:</span></span><br><span class=\"line\"><span class=\"attr\">      username:</span></span><br><span class=\"line\"><span class=\"attr\">      password:</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span>(proxyBeanMethods = <span class=\"keyword\">false</span>)</span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnClass</span>(&#123; MimeMessage.class, MimeType.class, MailSender.class &#125;)</span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean</span>(MailSender.class)</span><br><span class=\"line\"><span class=\"meta\">@Conditional</span>(MailSenderCondition.class)</span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>(MailProperties.class)</span><br><span class=\"line\"><span class=\"meta\">@Import</span>(&#123; MailSenderJndiConfiguration.class, MailSenderPropertiesConfiguration.class &#125;)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MailSenderAutoConfiguration</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MailSenderCondition</span> <span class=\"keyword\">extends</span> <span class=\"title\">AnyNestedCondition</span> </span>&#123;</span><br><span class=\"line\">\t\tMailSenderCondition() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">super</span>(ConfigurationPhase.PARSE_CONFIGURATION);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"meta\">@ConditionalOnProperty</span>(prefix = <span class=\"string\">\"spring.mail\"</span>, name = <span class=\"string\">\"host\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HostProperty</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"meta\">@ConditionalOnProperty</span>(prefix = <span class=\"string\">\"spring.mail\"</span>, name = <span class=\"string\">\"jndi-name\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JndiNameProperty</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>@EnableConfigurationProperties 로 사용할 MailProperties.class를 선언한 뒤 MailSenderJndiConfiguration과 MailSenderPropertiesConfiguration.class의<br />\n설정을 가져와 처리한다.</li>\n<li>이 값을 사용하기 위해서는 Bean으로 선언되어 있기 때문에 주입 받아서 사용하면 된다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EMailService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> JavaMailSender javaMailSender;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MailProperties mailProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendSimpleMessageMail</span><span class=\"params\">(String to, String subject, String content)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">// javaMailSender.send()</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"configurationproperties\"><a class=\"markdownIt-Anchor\" href=\"#configurationproperties\"></a> @ConfigurationProperties</h3>\n<ul>\n<li>Spring Mail 서비스로 메일 전송하는 기능을 만드려고 하다가 application.yml과 연동되는 Property 값들을 정의하는 방법부터 정리하고자 한다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>(prefix = <span class=\"string\">\"spring.mail\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MailProperties</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String host;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Integer port;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    mail:</span></span><br><span class=\"line\"><span class=\"attr\">      host:</span></span><br><span class=\"line\"><span class=\"attr\">      port:</span></span><br><span class=\"line\"><span class=\"attr\">      username:</span></span><br><span class=\"line\"><span class=\"attr\">      password:</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span>(proxyBeanMethods = <span class=\"keyword\">false</span>)</span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnClass</span>(&#123; MimeMessage.class, MimeType.class, MailSender.class &#125;)</span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean</span>(MailSender.class)</span><br><span class=\"line\"><span class=\"meta\">@Conditional</span>(MailSenderCondition.class)</span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>(MailProperties.class)</span><br><span class=\"line\"><span class=\"meta\">@Import</span>(&#123; MailSenderJndiConfiguration.class, MailSenderPropertiesConfiguration.class &#125;)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MailSenderAutoConfiguration</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MailSenderCondition</span> <span class=\"keyword\">extends</span> <span class=\"title\">AnyNestedCondition</span> </span>&#123;</span><br><span class=\"line\">\t\tMailSenderCondition() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">super</span>(ConfigurationPhase.PARSE_CONFIGURATION);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"meta\">@ConditionalOnProperty</span>(prefix = <span class=\"string\">\"spring.mail\"</span>, name = <span class=\"string\">\"host\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HostProperty</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"meta\">@ConditionalOnProperty</span>(prefix = <span class=\"string\">\"spring.mail\"</span>, name = <span class=\"string\">\"jndi-name\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JndiNameProperty</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>@EnableConfigurationProperties 로 사용할 MailProperties.class를 선언한 뒤 MailSenderJndiConfiguration과 MailSenderPropertiesConfiguration.class의<br />\n설정을 가져와 처리한다.</li>\n<li>이 값을 사용하기 위해서는 Bean으로 선언되어 있기 때문에 주입 받아서 사용하면 된다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EMailService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> JavaMailSender javaMailSender;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MailProperties mailProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendSimpleMessageMail</span><span class=\"params\">(String to, String subject, String content)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">// javaMailSender.send()</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"protocol-smtp","date":"2020-07-01T01:46:20.000Z","_content":"### SMTP (Simple Mail Transfer Protocol)\n- SMTP : 두 메일시스템이 전자우편을 교환할 수 있게 하는 메세지 전송용 프로토콜\n- 통신 포트 : 25\n- 모든 처리는 항상 하나의 *TCP* 연결을 통해 실행됨\n- 메일 서버는 데몬으로 동작하며, 메일 클라이언트로부터 요청에 항상 준비\n\n#### 주요 구성 요소\n- UA(User Agent) : Outlook, Zmail등\n- MTA(Message Transfer Agent) : 메일을 중계, 전달하는 기능을 수행\n- MAA(Message Access Agent) : 메일 엑세스용 프로토콜\n\n![](/images/protocol/smtp/mta_maa.png)\n\n#### MTA 클라이언트 및 MTA 서버 간 주요 명령 및 응답\n- SMTP 주요 명령\n    - HELLO : 클라이언트 자신이 누구인지 밝힘 (Hello : kwang.co.kr)\n    - MAIL FROM : 클라이언트가 메일 송신자가 누구인지\n    - RCPT TO : 수신처\n    - DATA : 전체 메일 메세지 전송을 송신측에서 준비됨\n    - QUIT 등\n\n#### Mail Message Format\n- 메세지 구성\n    - Header \n        - Return-Path : 하나 이상의 SMTP 서버 경유시\n        - Received : 하나 이상의 SMTP 서버 경유시\n        - From: 발신자\n        - To : 수신자\n        - Subject : 제목\n        - Date : 날짜\n        - MIME 확장 : Body에 멀티미디어 데이터가 포함되는 경우에 MIME(Multi-purpose Internet Mail Extension Type)\n            - MIME-version\n            - Content-Transfer-Encoding\n            - Content-Type:\n            \n        |Content-Type|설명|    \n        |--|--|\n        |Text / Plain               | 포맷되지 않는 텍스트 (특정한 문자세트로 구성됨)|\n        |Text / Richtext            | 볼드, 이탤릭체, 밑줄 등 간단한 포맷을 가진 텍스트|\n        |Application / Octet-Stream | Binary 데이타|\n        |Application / Postscript   | PostScript 프로그램|\n        |Message / RFC 822          | 또다른 우편 메시지 RFC 822| \n        |Image / JPEG               | 정지화상 데이타, ISO 10918 포맷|\n        |Image / GIF                | 정지화상 데이타, CompuServe의 Graphic interchange 포맷|\n        |Video / MPEG               | 동화상 데이타, ISO 11172 포맷|\n        |Audio / Basic              | 오디오 데이타, 8비트 ISDN mu-law 포맷을 사용한 인코드|\n    - Body\n        - 각 줄은 단일점. 으로 끝남\n        - 멀티 미디어용 데이터인 경우에는 헤더부분에 MIME 선언이 있음\n        \n``` Text\ntelnet 172.0.0.1 25\nHELLO kwang.co.kr\nMAIL FROM:kwang@kwang.co.kr\nRCPT TO:kwang@kwang.co.kr\nDATA\nSUBJECT: Test subject\ntest content\n. \n```                          \n\nRFC-2045 : Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)\nRFC-2046 : Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)\nRFC-2047 : MIME (Multipurpose Internet Mail Extensions) Part Three: Message Header Extensions for Non-ASCII Text. K. Moore. November 1996. (Status: DRAFT STANDARD)\nRFC-2048 : Multipurpose Internet Mail Extensions (MIME) Part Four: Registration Procedures. N. Freed, J. Klensin, J. Postel. November 1996. (Status: BEST CURRENT PRACTICE)\nRFC-2049 : Multipurpose Internet Mail Extensions (MIME) Part Five: Conformance Criteria and Examples. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)","source":"_posts/protocol-smtp.md","raw":"---\ntitle: protocol-smtp\ndate: 2020-07-01 10:46:20\ntags:\n---\n### SMTP (Simple Mail Transfer Protocol)\n- SMTP : 두 메일시스템이 전자우편을 교환할 수 있게 하는 메세지 전송용 프로토콜\n- 통신 포트 : 25\n- 모든 처리는 항상 하나의 *TCP* 연결을 통해 실행됨\n- 메일 서버는 데몬으로 동작하며, 메일 클라이언트로부터 요청에 항상 준비\n\n#### 주요 구성 요소\n- UA(User Agent) : Outlook, Zmail등\n- MTA(Message Transfer Agent) : 메일을 중계, 전달하는 기능을 수행\n- MAA(Message Access Agent) : 메일 엑세스용 프로토콜\n\n![](/images/protocol/smtp/mta_maa.png)\n\n#### MTA 클라이언트 및 MTA 서버 간 주요 명령 및 응답\n- SMTP 주요 명령\n    - HELLO : 클라이언트 자신이 누구인지 밝힘 (Hello : kwang.co.kr)\n    - MAIL FROM : 클라이언트가 메일 송신자가 누구인지\n    - RCPT TO : 수신처\n    - DATA : 전체 메일 메세지 전송을 송신측에서 준비됨\n    - QUIT 등\n\n#### Mail Message Format\n- 메세지 구성\n    - Header \n        - Return-Path : 하나 이상의 SMTP 서버 경유시\n        - Received : 하나 이상의 SMTP 서버 경유시\n        - From: 발신자\n        - To : 수신자\n        - Subject : 제목\n        - Date : 날짜\n        - MIME 확장 : Body에 멀티미디어 데이터가 포함되는 경우에 MIME(Multi-purpose Internet Mail Extension Type)\n            - MIME-version\n            - Content-Transfer-Encoding\n            - Content-Type:\n            \n        |Content-Type|설명|    \n        |--|--|\n        |Text / Plain               | 포맷되지 않는 텍스트 (특정한 문자세트로 구성됨)|\n        |Text / Richtext            | 볼드, 이탤릭체, 밑줄 등 간단한 포맷을 가진 텍스트|\n        |Application / Octet-Stream | Binary 데이타|\n        |Application / Postscript   | PostScript 프로그램|\n        |Message / RFC 822          | 또다른 우편 메시지 RFC 822| \n        |Image / JPEG               | 정지화상 데이타, ISO 10918 포맷|\n        |Image / GIF                | 정지화상 데이타, CompuServe의 Graphic interchange 포맷|\n        |Video / MPEG               | 동화상 데이타, ISO 11172 포맷|\n        |Audio / Basic              | 오디오 데이타, 8비트 ISDN mu-law 포맷을 사용한 인코드|\n    - Body\n        - 각 줄은 단일점. 으로 끝남\n        - 멀티 미디어용 데이터인 경우에는 헤더부분에 MIME 선언이 있음\n        \n``` Text\ntelnet 172.0.0.1 25\nHELLO kwang.co.kr\nMAIL FROM:kwang@kwang.co.kr\nRCPT TO:kwang@kwang.co.kr\nDATA\nSUBJECT: Test subject\ntest content\n. \n```                          \n\nRFC-2045 : Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)\nRFC-2046 : Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)\nRFC-2047 : MIME (Multipurpose Internet Mail Extensions) Part Three: Message Header Extensions for Non-ASCII Text. K. Moore. November 1996. (Status: DRAFT STANDARD)\nRFC-2048 : Multipurpose Internet Mail Extensions (MIME) Part Four: Registration Procedures. N. Freed, J. Klensin, J. Postel. November 1996. (Status: BEST CURRENT PRACTICE)\nRFC-2049 : Multipurpose Internet Mail Extensions (MIME) Part Five: Conformance Criteria and Examples. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)","slug":"protocol-smtp","published":1,"updated":"2020-07-11T04:51:03.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515r003gqlvogwgy9lns","content":"<h3 id=\"smtp-simple-mail-transfer-protocol\"><a class=\"markdownIt-Anchor\" href=\"#smtp-simple-mail-transfer-protocol\"></a> SMTP (Simple Mail Transfer Protocol)</h3>\n<ul>\n<li>SMTP : 두 메일시스템이 전자우편을 교환할 수 있게 하는 메세지 전송용 프로토콜</li>\n<li>통신 포트 : 25</li>\n<li>모든 처리는 항상 하나의 <em>TCP</em> 연결을 통해 실행됨</li>\n<li>메일 서버는 데몬으로 동작하며, 메일 클라이언트로부터 요청에 항상 준비</li>\n</ul>\n<h4 id=\"주요-구성-요소\"><a class=\"markdownIt-Anchor\" href=\"#주요-구성-요소\"></a> 주요 구성 요소</h4>\n<ul>\n<li>UA(User Agent) : Outlook, Zmail등</li>\n<li>MTA(Message Transfer Agent) : 메일을 중계, 전달하는 기능을 수행</li>\n<li>MAA(Message Access Agent) : 메일 엑세스용 프로토콜</li>\n</ul>\n<p><img src=\"/images/protocol/smtp/mta_maa.png\" alt=\"\" /></p>\n<h4 id=\"mta-클라이언트-및-mta-서버-간-주요-명령-및-응답\"><a class=\"markdownIt-Anchor\" href=\"#mta-클라이언트-및-mta-서버-간-주요-명령-및-응답\"></a> MTA 클라이언트 및 MTA 서버 간 주요 명령 및 응답</h4>\n<ul>\n<li>SMTP 주요 명령\n<ul>\n<li>HELLO : 클라이언트 자신이 누구인지 밝힘 (Hello : <a href=\"http://kwang.co.kr\" target=\"_blank\" rel=\"noopener\">kwang.co.kr</a>)</li>\n<li>MAIL FROM : 클라이언트가 메일 송신자가 누구인지</li>\n<li>RCPT TO : 수신처</li>\n<li>DATA : 전체 메일 메세지 전송을 송신측에서 준비됨</li>\n<li>QUIT 등</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"mail-message-format\"><a class=\"markdownIt-Anchor\" href=\"#mail-message-format\"></a> Mail Message Format</h4>\n<ul>\n<li>메세지 구성\n<ul>\n<li>\n<p>Header</p>\n<ul>\n<li>Return-Path : 하나 이상의 SMTP 서버 경유시</li>\n<li>Received : 하나 이상의 SMTP 서버 경유시</li>\n<li>From: 발신자</li>\n<li>To : 수신자</li>\n<li>Subject : 제목</li>\n<li>Date : 날짜</li>\n<li>MIME 확장 : Body에 멀티미디어 데이터가 포함되는 경우에 MIME(Multi-purpose Internet Mail Extension Type)\n<ul>\n<li>MIME-version</li>\n<li>Content-Transfer-Encoding</li>\n<li>Content-Type:</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Content-Type</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Text / Plain</td>\n<td>포맷되지 않는 텍스트 (특정한 문자세트로 구성됨)</td>\n</tr>\n<tr>\n<td>Text / Richtext</td>\n<td>볼드, 이탤릭체, 밑줄 등 간단한 포맷을 가진 텍스트</td>\n</tr>\n<tr>\n<td>Application / Octet-Stream</td>\n<td>Binary 데이타</td>\n</tr>\n<tr>\n<td>Application / Postscript</td>\n<td>PostScript 프로그램</td>\n</tr>\n<tr>\n<td>Message / RFC 822</td>\n<td>또다른 우편 메시지 RFC 822</td>\n</tr>\n<tr>\n<td>Image / JPEG</td>\n<td>정지화상 데이타, ISO 10918 포맷</td>\n</tr>\n<tr>\n<td>Image / GIF</td>\n<td>정지화상 데이타, CompuServe의 Graphic interchange 포맷</td>\n</tr>\n<tr>\n<td>Video / MPEG</td>\n<td>동화상 데이타, ISO 11172 포맷</td>\n</tr>\n<tr>\n<td>Audio / Basic</td>\n<td>오디오 데이타, 8비트 ISDN mu-law 포맷을 사용한 인코드</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>Body</p>\n<ul>\n<li>각 줄은 단일점. 으로 끝남</li>\n<li>멀티 미디어용 데이터인 경우에는 헤더부분에 MIME 선언이 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre class=\"highlight\"><code class=\"Text\">telnet 172.0.0.1 25\nHELLO kwang.co.kr\nMAIL FROM:kwang@kwang.co.kr\nRCPT TO:kwang@kwang.co.kr\nDATA\nSUBJECT: Test subject\ntest content\n. \n</code></pre>\n<p>RFC-2045 : Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)<br />\nRFC-2046 : Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)<br />\nRFC-2047 : MIME (Multipurpose Internet Mail Extensions) Part Three: Message Header Extensions for Non-ASCII Text. K. Moore. November 1996. (Status: DRAFT STANDARD)<br />\nRFC-2048 : Multipurpose Internet Mail Extensions (MIME) Part Four: Registration Procedures. N. Freed, J. Klensin, J. Postel. November 1996. (Status: BEST CURRENT PRACTICE)<br />\nRFC-2049 : Multipurpose Internet Mail Extensions (MIME) Part Five: Conformance Criteria and Examples. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"smtp-simple-mail-transfer-protocol\"><a class=\"markdownIt-Anchor\" href=\"#smtp-simple-mail-transfer-protocol\"></a> SMTP (Simple Mail Transfer Protocol)</h3>\n<ul>\n<li>SMTP : 두 메일시스템이 전자우편을 교환할 수 있게 하는 메세지 전송용 프로토콜</li>\n<li>통신 포트 : 25</li>\n<li>모든 처리는 항상 하나의 <em>TCP</em> 연결을 통해 실행됨</li>\n<li>메일 서버는 데몬으로 동작하며, 메일 클라이언트로부터 요청에 항상 준비</li>\n</ul>\n<h4 id=\"주요-구성-요소\"><a class=\"markdownIt-Anchor\" href=\"#주요-구성-요소\"></a> 주요 구성 요소</h4>\n<ul>\n<li>UA(User Agent) : Outlook, Zmail등</li>\n<li>MTA(Message Transfer Agent) : 메일을 중계, 전달하는 기능을 수행</li>\n<li>MAA(Message Access Agent) : 메일 엑세스용 프로토콜</li>\n</ul>\n<p><img src=\"/images/protocol/smtp/mta_maa.png\" alt=\"\" /></p>\n<h4 id=\"mta-클라이언트-및-mta-서버-간-주요-명령-및-응답\"><a class=\"markdownIt-Anchor\" href=\"#mta-클라이언트-및-mta-서버-간-주요-명령-및-응답\"></a> MTA 클라이언트 및 MTA 서버 간 주요 명령 및 응답</h4>\n<ul>\n<li>SMTP 주요 명령\n<ul>\n<li>HELLO : 클라이언트 자신이 누구인지 밝힘 (Hello : <a href=\"http://kwang.co.kr\" target=\"_blank\" rel=\"noopener\">kwang.co.kr</a>)</li>\n<li>MAIL FROM : 클라이언트가 메일 송신자가 누구인지</li>\n<li>RCPT TO : 수신처</li>\n<li>DATA : 전체 메일 메세지 전송을 송신측에서 준비됨</li>\n<li>QUIT 등</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"mail-message-format\"><a class=\"markdownIt-Anchor\" href=\"#mail-message-format\"></a> Mail Message Format</h4>\n<ul>\n<li>메세지 구성\n<ul>\n<li>\n<p>Header</p>\n<ul>\n<li>Return-Path : 하나 이상의 SMTP 서버 경유시</li>\n<li>Received : 하나 이상의 SMTP 서버 경유시</li>\n<li>From: 발신자</li>\n<li>To : 수신자</li>\n<li>Subject : 제목</li>\n<li>Date : 날짜</li>\n<li>MIME 확장 : Body에 멀티미디어 데이터가 포함되는 경우에 MIME(Multi-purpose Internet Mail Extension Type)\n<ul>\n<li>MIME-version</li>\n<li>Content-Transfer-Encoding</li>\n<li>Content-Type:</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Content-Type</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Text / Plain</td>\n<td>포맷되지 않는 텍스트 (특정한 문자세트로 구성됨)</td>\n</tr>\n<tr>\n<td>Text / Richtext</td>\n<td>볼드, 이탤릭체, 밑줄 등 간단한 포맷을 가진 텍스트</td>\n</tr>\n<tr>\n<td>Application / Octet-Stream</td>\n<td>Binary 데이타</td>\n</tr>\n<tr>\n<td>Application / Postscript</td>\n<td>PostScript 프로그램</td>\n</tr>\n<tr>\n<td>Message / RFC 822</td>\n<td>또다른 우편 메시지 RFC 822</td>\n</tr>\n<tr>\n<td>Image / JPEG</td>\n<td>정지화상 데이타, ISO 10918 포맷</td>\n</tr>\n<tr>\n<td>Image / GIF</td>\n<td>정지화상 데이타, CompuServe의 Graphic interchange 포맷</td>\n</tr>\n<tr>\n<td>Video / MPEG</td>\n<td>동화상 데이타, ISO 11172 포맷</td>\n</tr>\n<tr>\n<td>Audio / Basic</td>\n<td>오디오 데이타, 8비트 ISDN mu-law 포맷을 사용한 인코드</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>Body</p>\n<ul>\n<li>각 줄은 단일점. 으로 끝남</li>\n<li>멀티 미디어용 데이터인 경우에는 헤더부분에 MIME 선언이 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre class=\"highlight\"><code class=\"Text\">telnet 172.0.0.1 25\nHELLO kwang.co.kr\nMAIL FROM:kwang@kwang.co.kr\nRCPT TO:kwang@kwang.co.kr\nDATA\nSUBJECT: Test subject\ntest content\n. \n</code></pre>\n<p>RFC-2045 : Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)<br />\nRFC-2046 : Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)<br />\nRFC-2047 : MIME (Multipurpose Internet Mail Extensions) Part Three: Message Header Extensions for Non-ASCII Text. K. Moore. November 1996. (Status: DRAFT STANDARD)<br />\nRFC-2048 : Multipurpose Internet Mail Extensions (MIME) Part Four: Registration Procedures. N. Freed, J. Klensin, J. Postel. November 1996. (Status: BEST CURRENT PRACTICE)<br />\nRFC-2049 : Multipurpose Internet Mail Extensions (MIME) Part Five: Conformance Criteria and Examples. N. Freed, N. Borenstein. November 1996. (Status: DRAFT STANDARD)</p>\n"},{"title":"spring-boot-application-argument","date":"2020-04-07T00:24:01.000Z","_content":"Spring boot 실행할 때 args 를 전달받기 위한 Interface.\n\nSpring boot에서 org.springframework.boot.ApplicationArguments 를 제공하고 있어서 Bean으로 받아서 사용하면 간단하게 쓸 수 있습니다.\n\nSpring boot에서 아무런 설정을 하지 않는다면 DefaultApplicationArguments를 사용해 처리한다.\n\n1. getSourceArgs\n\n - 입력한 args 그대로 배열로 받아 옵니다.\n\n\n\n2. getOptionNames\n\n - args 앞에 \"--\" 를 붙이면 옵션으로 인식 합니다. 옵션 args 사용 형식 --NAME=VALUE \n\n - \"--fruit=apple\" 이렇게 args를 사용하면\n\n - getOptionName는 fruit 처럼 option name 들의 배열을 받아 옵니다.\n\n\n\n3. getNonOptionArgs\n\n- \"--\" 가 없는 경우 NonOption으로 인식합니다.\n\n- \"--\" 가 없는 args 들의 값들을 받다 옵니다.\n\n\n![](/images/application-argument/DefaultApplicationArguments.png)\n\n\n```java\n\tprivate final Source source;\n\n\tprivate final String[] args;\n\n\tpublic DefaultApplicationArguments(String[] args) {\n\t\tAssert.notNull(args, \"Args must not be null\");\n\t\tthis.source = new Source(args);\n\t\tthis.args = args;\n\t}\n```\n\n내부에 private final로 선언되어 있어 생성자를 통한 할당이 아니라면 바꿀수가 없다. \n또한 Source라고 하는 내부 Class를 가지고 있고, 이는 SimpleCommandLinePropertySource를 상속해 구현하였다.\n\n```java\n\tprivate static class Source extends SimpleCommandLinePropertySource {\n\n\t\tSource(String[] args) {\n\t\t\tsuper(args);\n\t\t}\n\n\t\t@Override\n\t\tpublic List<String> getNonOptionArgs() {\n\t\t\treturn super.getNonOptionArgs();\n\t\t}\n\n\t\t@Override\n\t\tpublic List<String> getOptionValues(String name) {\n\t\t\treturn super.getOptionValues(name);\n\t\t}\n\n\t}\n```\n![](/images/application-argument/SimpleCommandLineProperty.png)\n\n```java\npublic class SimpleCommandLinePropertySource extends CommandLinePropertySource<CommandLineArgs> {\n\n\t/**\n\t * Create a new {@code SimpleCommandLinePropertySource} having the default name\n\t * and backed by the given {@code String[]} of command line arguments.\n\t * @see CommandLinePropertySource#COMMAND_LINE_PROPERTY_SOURCE_NAME\n\t * @see CommandLinePropertySource#CommandLinePropertySource(Object)\n\t */\n\tpublic SimpleCommandLinePropertySource(String... args) {\n\t\tsuper(new SimpleCommandLineArgsParser().parse(args));\n\t}\n\n\t/**\n\t * Create a new {@code SimpleCommandLinePropertySource} having the given name\n\t * and backed by the given {@code String[]} of command line arguments.\n\t */\n\tpublic SimpleCommandLinePropertySource(String name, String[] args) {\n\t\tsuper(name, new SimpleCommandLineArgsParser().parse(args));\n\t}\n\n\t/**\n\t * Get the property names for the option arguments.\n\t */\n\t@Override\n\tpublic String[] getPropertyNames() {\n\t\treturn StringUtils.toStringArray(this.source.getOptionNames());\n\t}\n\n\t@Override\n\tprotected boolean containsOption(String name) {\n\t\treturn this.source.containsOption(name);\n\t}\n\n\t@Override\n\t@Nullable\n\tprotected List<String> getOptionValues(String name) {\n\t\treturn this.source.getOptionValues(name);\n\t}\n\n\t@Override\n\tprotected List<String> getNonOptionArgs() {\n\t\treturn this.source.getNonOptionArgs();\n\t}\n\n}\n```\n\nSimpleCommandLinePropertySource는 CommandLineArgs를 Source를 가지는 CommandLinePropertySource를 상속해 구현하였고,\nCommandLineArgs는 내부에 HashMap으로 Option Argument들을, List로 nonOptionArgs를 가지고 있는 Source로 관리된다. \n\n![](/images/application-argument/CommandLineArgs.png)\n","source":"_posts/spring-boot-application-argument.md","raw":"---\ntitle: spring-boot-application-argument\ndate: 2020-04-07 09:24:01\ntags: \n- Java\n- Spring\ncategories:\n- Java\n- Spring\n---\nSpring boot 실행할 때 args 를 전달받기 위한 Interface.\n\nSpring boot에서 org.springframework.boot.ApplicationArguments 를 제공하고 있어서 Bean으로 받아서 사용하면 간단하게 쓸 수 있습니다.\n\nSpring boot에서 아무런 설정을 하지 않는다면 DefaultApplicationArguments를 사용해 처리한다.\n\n1. getSourceArgs\n\n - 입력한 args 그대로 배열로 받아 옵니다.\n\n\n\n2. getOptionNames\n\n - args 앞에 \"--\" 를 붙이면 옵션으로 인식 합니다. 옵션 args 사용 형식 --NAME=VALUE \n\n - \"--fruit=apple\" 이렇게 args를 사용하면\n\n - getOptionName는 fruit 처럼 option name 들의 배열을 받아 옵니다.\n\n\n\n3. getNonOptionArgs\n\n- \"--\" 가 없는 경우 NonOption으로 인식합니다.\n\n- \"--\" 가 없는 args 들의 값들을 받다 옵니다.\n\n\n![](/images/application-argument/DefaultApplicationArguments.png)\n\n\n```java\n\tprivate final Source source;\n\n\tprivate final String[] args;\n\n\tpublic DefaultApplicationArguments(String[] args) {\n\t\tAssert.notNull(args, \"Args must not be null\");\n\t\tthis.source = new Source(args);\n\t\tthis.args = args;\n\t}\n```\n\n내부에 private final로 선언되어 있어 생성자를 통한 할당이 아니라면 바꿀수가 없다. \n또한 Source라고 하는 내부 Class를 가지고 있고, 이는 SimpleCommandLinePropertySource를 상속해 구현하였다.\n\n```java\n\tprivate static class Source extends SimpleCommandLinePropertySource {\n\n\t\tSource(String[] args) {\n\t\t\tsuper(args);\n\t\t}\n\n\t\t@Override\n\t\tpublic List<String> getNonOptionArgs() {\n\t\t\treturn super.getNonOptionArgs();\n\t\t}\n\n\t\t@Override\n\t\tpublic List<String> getOptionValues(String name) {\n\t\t\treturn super.getOptionValues(name);\n\t\t}\n\n\t}\n```\n![](/images/application-argument/SimpleCommandLineProperty.png)\n\n```java\npublic class SimpleCommandLinePropertySource extends CommandLinePropertySource<CommandLineArgs> {\n\n\t/**\n\t * Create a new {@code SimpleCommandLinePropertySource} having the default name\n\t * and backed by the given {@code String[]} of command line arguments.\n\t * @see CommandLinePropertySource#COMMAND_LINE_PROPERTY_SOURCE_NAME\n\t * @see CommandLinePropertySource#CommandLinePropertySource(Object)\n\t */\n\tpublic SimpleCommandLinePropertySource(String... args) {\n\t\tsuper(new SimpleCommandLineArgsParser().parse(args));\n\t}\n\n\t/**\n\t * Create a new {@code SimpleCommandLinePropertySource} having the given name\n\t * and backed by the given {@code String[]} of command line arguments.\n\t */\n\tpublic SimpleCommandLinePropertySource(String name, String[] args) {\n\t\tsuper(name, new SimpleCommandLineArgsParser().parse(args));\n\t}\n\n\t/**\n\t * Get the property names for the option arguments.\n\t */\n\t@Override\n\tpublic String[] getPropertyNames() {\n\t\treturn StringUtils.toStringArray(this.source.getOptionNames());\n\t}\n\n\t@Override\n\tprotected boolean containsOption(String name) {\n\t\treturn this.source.containsOption(name);\n\t}\n\n\t@Override\n\t@Nullable\n\tprotected List<String> getOptionValues(String name) {\n\t\treturn this.source.getOptionValues(name);\n\t}\n\n\t@Override\n\tprotected List<String> getNonOptionArgs() {\n\t\treturn this.source.getNonOptionArgs();\n\t}\n\n}\n```\n\nSimpleCommandLinePropertySource는 CommandLineArgs를 Source를 가지는 CommandLinePropertySource를 상속해 구현하였고,\nCommandLineArgs는 내부에 HashMap으로 Option Argument들을, List로 nonOptionArgs를 가지고 있는 Source로 관리된다. \n\n![](/images/application-argument/CommandLineArgs.png)\n","slug":"spring-boot-application-argument","published":1,"updated":"2020-07-11T04:51:03.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515s003iqlvoc6jwfyb4","content":"<p>Spring boot 실행할 때 args 를 전달받기 위한 Interface.</p>\n<p>Spring boot에서 org.springframework.boot.ApplicationArguments 를 제공하고 있어서 Bean으로 받아서 사용하면 간단하게 쓸 수 있습니다.</p>\n<p>Spring boot에서 아무런 설정을 하지 않는다면 DefaultApplicationArguments를 사용해 처리한다.</p>\n<ol>\n<li>getSourceArgs</li>\n</ol>\n<ul>\n<li>입력한 args 그대로 배열로 받아 옵니다.</li>\n</ul>\n<ol start=\"2\">\n<li>getOptionNames</li>\n</ol>\n<ul>\n<li>\n<p>args 앞에 “–” 를 붙이면 옵션으로 인식 합니다. 옵션 args 사용 형식 --NAME=VALUE</p>\n</li>\n<li>\n<p>“–fruit=apple” 이렇게 args를 사용하면</p>\n</li>\n<li>\n<p>getOptionName는 fruit 처럼 option name 들의 배열을 받아 옵니다.</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li>getNonOptionArgs</li>\n</ol>\n<ul>\n<li>\n<p>“–” 가 없는 경우 NonOption으로 인식합니다.</p>\n</li>\n<li>\n<p>“–” 가 없는 args 들의 값들을 받다 옵니다.</p>\n</li>\n</ul>\n<p><img src=\"/images/application-argument/DefaultApplicationArguments.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Source source;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String[] args;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DefaultApplicationArguments</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\tAssert.notNull(args, <span class=\"string\">\"Args must not be null\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.source = <span class=\"keyword\">new</span> Source(args);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.args = args;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>내부에 private final로 선언되어 있어 생성자를 통한 할당이 아니라면 바꿀수가 없다.<br />\n또한 Source라고 하는 내부 Class를 가지고 있고, 이는 SimpleCommandLinePropertySource를 상속해 구현하였다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Source</span> <span class=\"keyword\">extends</span> <span class=\"title\">SimpleCommandLinePropertySource</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSource(String[] args) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getNonOptionArgs</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getNonOptionArgs();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getOptionValues</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getOptionValues(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/application-argument/SimpleCommandLineProperty.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleCommandLinePropertySource</span> <span class=\"keyword\">extends</span> <span class=\"title\">CommandLinePropertySource</span>&lt;<span class=\"title\">CommandLineArgs</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Create a new &#123;<span class=\"doctag\">@code</span> SimpleCommandLinePropertySource&#125; having the default name</span></span><br><span class=\"line\"><span class=\"comment\">\t * and backed by the given &#123;<span class=\"doctag\">@code</span> String[]&#125; of command line arguments.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> CommandLinePropertySource#COMMAND_LINE_PROPERTY_SOURCE_NAME</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> CommandLinePropertySource#CommandLinePropertySource(Object)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleCommandLinePropertySource</span><span class=\"params\">(String... args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(<span class=\"keyword\">new</span> SimpleCommandLineArgsParser().parse(args));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Create a new &#123;<span class=\"doctag\">@code</span> SimpleCommandLinePropertySource&#125; having the given name</span></span><br><span class=\"line\"><span class=\"comment\">\t * and backed by the given &#123;<span class=\"doctag\">@code</span> String[]&#125; of command line arguments.</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleCommandLinePropertySource</span><span class=\"params\">(String name, String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(name, <span class=\"keyword\">new</span> SimpleCommandLineArgsParser().parse(args));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Get the property names for the option arguments.</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> String[] getPropertyNames() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> StringUtils.toStringArray(<span class=\"keyword\">this</span>.source.getOptionNames());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> <span class=\"title\">containsOption</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.source.containsOption(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"meta\">@Nullable</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> List&lt;String&gt; <span class=\"title\">getOptionValues</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.source.getOptionValues(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> List&lt;String&gt; <span class=\"title\">getNonOptionArgs</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.source.getNonOptionArgs();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>SimpleCommandLinePropertySource는 CommandLineArgs를 Source를 가지는 CommandLinePropertySource를 상속해 구현하였고,<br />\nCommandLineArgs는 내부에 HashMap으로 Option Argument들을, List로 nonOptionArgs를 가지고 있는 Source로 관리된다.</p>\n<p><img src=\"/images/application-argument/CommandLineArgs.png\" alt=\"\" /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Spring boot 실행할 때 args 를 전달받기 위한 Interface.</p>\n<p>Spring boot에서 org.springframework.boot.ApplicationArguments 를 제공하고 있어서 Bean으로 받아서 사용하면 간단하게 쓸 수 있습니다.</p>\n<p>Spring boot에서 아무런 설정을 하지 않는다면 DefaultApplicationArguments를 사용해 처리한다.</p>\n<ol>\n<li>getSourceArgs</li>\n</ol>\n<ul>\n<li>입력한 args 그대로 배열로 받아 옵니다.</li>\n</ul>\n<ol start=\"2\">\n<li>getOptionNames</li>\n</ol>\n<ul>\n<li>\n<p>args 앞에 “–” 를 붙이면 옵션으로 인식 합니다. 옵션 args 사용 형식 --NAME=VALUE</p>\n</li>\n<li>\n<p>“–fruit=apple” 이렇게 args를 사용하면</p>\n</li>\n<li>\n<p>getOptionName는 fruit 처럼 option name 들의 배열을 받아 옵니다.</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li>getNonOptionArgs</li>\n</ol>\n<ul>\n<li>\n<p>“–” 가 없는 경우 NonOption으로 인식합니다.</p>\n</li>\n<li>\n<p>“–” 가 없는 args 들의 값들을 받다 옵니다.</p>\n</li>\n</ul>\n<p><img src=\"/images/application-argument/DefaultApplicationArguments.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Source source;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String[] args;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DefaultApplicationArguments</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\tAssert.notNull(args, <span class=\"string\">\"Args must not be null\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.source = <span class=\"keyword\">new</span> Source(args);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.args = args;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>내부에 private final로 선언되어 있어 생성자를 통한 할당이 아니라면 바꿀수가 없다.<br />\n또한 Source라고 하는 내부 Class를 가지고 있고, 이는 SimpleCommandLinePropertySource를 상속해 구현하였다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Source</span> <span class=\"keyword\">extends</span> <span class=\"title\">SimpleCommandLinePropertySource</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSource(String[] args) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getNonOptionArgs</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getNonOptionArgs();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getOptionValues</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getOptionValues(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/application-argument/SimpleCommandLineProperty.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleCommandLinePropertySource</span> <span class=\"keyword\">extends</span> <span class=\"title\">CommandLinePropertySource</span>&lt;<span class=\"title\">CommandLineArgs</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Create a new &#123;<span class=\"doctag\">@code</span> SimpleCommandLinePropertySource&#125; having the default name</span></span><br><span class=\"line\"><span class=\"comment\">\t * and backed by the given &#123;<span class=\"doctag\">@code</span> String[]&#125; of command line arguments.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> CommandLinePropertySource#COMMAND_LINE_PROPERTY_SOURCE_NAME</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> CommandLinePropertySource#CommandLinePropertySource(Object)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleCommandLinePropertySource</span><span class=\"params\">(String... args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(<span class=\"keyword\">new</span> SimpleCommandLineArgsParser().parse(args));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Create a new &#123;<span class=\"doctag\">@code</span> SimpleCommandLinePropertySource&#125; having the given name</span></span><br><span class=\"line\"><span class=\"comment\">\t * and backed by the given &#123;<span class=\"doctag\">@code</span> String[]&#125; of command line arguments.</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleCommandLinePropertySource</span><span class=\"params\">(String name, String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(name, <span class=\"keyword\">new</span> SimpleCommandLineArgsParser().parse(args));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Get the property names for the option arguments.</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> String[] getPropertyNames() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> StringUtils.toStringArray(<span class=\"keyword\">this</span>.source.getOptionNames());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> <span class=\"title\">containsOption</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.source.containsOption(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"meta\">@Nullable</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> List&lt;String&gt; <span class=\"title\">getOptionValues</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.source.getOptionValues(name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> List&lt;String&gt; <span class=\"title\">getNonOptionArgs</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.source.getNonOptionArgs();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>SimpleCommandLinePropertySource는 CommandLineArgs를 Source를 가지는 CommandLinePropertySource를 상속해 구현하였고,<br />\nCommandLineArgs는 내부에 HashMap으로 Option Argument들을, List로 nonOptionArgs를 가지고 있는 Source로 관리된다.</p>\n<p><img src=\"/images/application-argument/CommandLineArgs.png\" alt=\"\" /></p>\n"},{"title":"security-webapplicationhacker-1","date":"2020-03-31T01:00:11.000Z","_content":"\n## 핵심 방어 매커니즘\n\n- 권한이 없는 사용자가 민감한 정보에 접근하는 것을 막기 위해 어플리케이션의 데이터와 기능에 대한 사용자 접근 처리\n- 의도하지 않은 행동을 유발시키는 사용자 입력을 막기 위해 어플리케이션의 기능에 대한 사용자 입력 값 처리\n- 어플리케이션이 공격자로부터 직접적인 공격 대상이 됐을 때 이를 방어하고 보안 수준을 높이기 위한 공격자에 대한 처리\n- 어플리케이션에 대해 실시간으로 모니터링 할 수 있는 기능을 관리자에게 제공함으로써 관리자가 안전하게 어플리케이션을 관리할 수 있게 함\n\n## 사용자 접근 처리\n- 사용자 범주\n    - 익명 사용자(anonymous users), 인가된 사용자(ordinary authenticated users), 관리적 사용자 (administrative users)\n\n### 인증\n- ID/PWD, 클라이언트 인증, 스마트카드, Access Token\n    - 공격자가 다른 사용자의 아이디와 비밀번호를 추측하거나 로직에 있는 결함을 악용함으로써 인증 과정을 우회할 가능성이 있다. \n\n### 세션 관리\n- 모든 어플리케이션은 각 사용자를 위한 세션을 만들어 주거나 사용자에게 세션을 확인하게 하는 토큰을 발행한다.\n- 세션 자체는 서버에 할당돼 있는 데이터 집합의 구조이며, 어플리케이션과 사용자간의 상호 작용을 도와주는 데 사용된다.\n- 토큰이란 어플리케이션이 세션에 나타내는 독특한 문자열을 말한다. 표준방법은 HTTP 쿠키를 사용한다.\n- 일부 어플리케이션은 세션 토큰을 사용하지 않고 사용자를 재확인하는 다른 수단으로 클라이언트에 상태 정보를 저장해 두는데 누군가 엿들을 수 있는 위험을 막기 위해 암호화 된다.\n\n### 접근 통제\n- 사용자 접근 통제의 마지막 단계는 애 플리케이션 에서 사용자의 요청이 허가되는지 아닌지 결정을 내리고 실행하는 것이다.\n\n## 사용자 입력 값 처리\n\n### 입력 값 조작에 대한 처리 방법\n- 위험하다고 알려진 것들은 모두 차단\n- 안전하다고 알려진 용것들은 모두 수\n- 불순물 제거 (Sanitization)\n- 안전한 데이터 처리\n- 의미론적 검증법\n\n### 경계 검증\n- 프로세스의 여러 딘계에서 경계 검증을 하는 애플리케이션 기능\n\n![](/images/webhack/mechanism/2-5.png)\n\n### 다단계 검증과 정규화\n- Ex) Cross-Site-script 우회\n\n```haml\n<script>\n\nfilter 우회\n<scr<script>ipt>\n```\n\n- 어플리케이션이 처음으로 ../를 제거한 후 인용부호를 떼어버린다면 다음의 입력 값은 검증을 실패로 만드는 데 사용될 수 있다.\n    - ....\\/\n    \n- URL Encoding filter 우회\n    - %2527 -> %27\n    - %%2727\n\n- HTML 인코딩 filter 우회\n\n```html\n<iframe src=j&#x61;vasc&#x72ipt&#x3a;alert&#x28;1&#x29; >\n```\n\n- 좋은 처리 방법은 입력 값의 한 부분이라도 수정이 인ㄹ어나지 않을 때까지 계속 재귀적으로 불안전한 문자를 안전한 상태로 만드는 불순물 제거(Sanitization) 작업을 수행하는 것이다.\n\n### 공격자 핸들링\n- 에러 핸들링 (Handling Errors) : 어플리케이션은 시스템 기반 메세지나 디버깅 정보를 노출시켜서는 안 된다.\n![](/images/webhack/mechanism/2-6.png)\n\n- 감시 로그 관리 (Maintaining Audit Log) : 어플리케이션은 시스템 기반 메세지나 디버깅 정보를 노출시켜서는 안 된다.\n    - 로그인 성공, 로그인 실패, 비밀번호 변경과 같은 인증 기능과 관련된 모든 이벤트\n    - 신용카드 결제와 자금 이체 같은 주요 거래\n    - 접근 통제 메커니즘에 의해 막혀진 접근 시도\n    - 잘 알려진 공격 문자열을 포함하고 있는 악의적인 의도를 명확하게 표시하는 요청\n![](/images/webhack/mechanism/2-7.png)\n\n- 관리자에게 경고 (Alerting Administrators)\n    - 하나의 IP 주소나 한 명의 사용자로부터 비정상적으로 많은 양의 요청을 받은 경우\n    - 하나의 은행 계좌로부터 평소와 다르게 많은 돈이 인출된 경우\n    - 잘 알려진 공격 문자열을 포함하는 경우\n    - 일반 사용자들에게 숨겨진 데이터가 수정된 경\n    \n- 공격 대응 (Reacting to attacks)우\n    - 공격자의 요청에 점차적으로 늦게 대응하\n    - 공격자의 세션을 종료시킴\n    \n## 어플리케이션 관리\n- 인증 메커니즘에서 약점은 공격자가 전체 어플리케이션을 위험에 빠지게 할 수 있는 관리적인 접근 획득이 가능할 수 있다는 점이다.\n- 다수의 어플리케이션이 관리자 기능에 효과적인 접근 통제를 수행하지 안흔ㄴ다. 공격자는 높은 권한을 가진 새로운 사용자 계정을 생성하는 방법을 찾아 낼지도 모른다.\n- 관리자 기능은 가끔 사용자로부터 발생되는 데이터를 표현하는 사항에 대한 기능을 포함하기도 한다. 관리 인터페이스 내에 있는 크로스사이트 스크립팅 취약점은 높은 권한을 가진 세션을 위협할 수도 있다.\n- 관리자 기능은 신뢰되는 사용자에 의해 사용된다고 생각하기 때문에 덜 엄격한 보안 검사를 받게 된다.\n\n","source":"_posts/security-webapplicationhacker-1.md","raw":"---\ntitle: security-webapplicationhacker-1\ndate: 2020-03-31 10:00:11\ntags:\n---\n\n## 핵심 방어 매커니즘\n\n- 권한이 없는 사용자가 민감한 정보에 접근하는 것을 막기 위해 어플리케이션의 데이터와 기능에 대한 사용자 접근 처리\n- 의도하지 않은 행동을 유발시키는 사용자 입력을 막기 위해 어플리케이션의 기능에 대한 사용자 입력 값 처리\n- 어플리케이션이 공격자로부터 직접적인 공격 대상이 됐을 때 이를 방어하고 보안 수준을 높이기 위한 공격자에 대한 처리\n- 어플리케이션에 대해 실시간으로 모니터링 할 수 있는 기능을 관리자에게 제공함으로써 관리자가 안전하게 어플리케이션을 관리할 수 있게 함\n\n## 사용자 접근 처리\n- 사용자 범주\n    - 익명 사용자(anonymous users), 인가된 사용자(ordinary authenticated users), 관리적 사용자 (administrative users)\n\n### 인증\n- ID/PWD, 클라이언트 인증, 스마트카드, Access Token\n    - 공격자가 다른 사용자의 아이디와 비밀번호를 추측하거나 로직에 있는 결함을 악용함으로써 인증 과정을 우회할 가능성이 있다. \n\n### 세션 관리\n- 모든 어플리케이션은 각 사용자를 위한 세션을 만들어 주거나 사용자에게 세션을 확인하게 하는 토큰을 발행한다.\n- 세션 자체는 서버에 할당돼 있는 데이터 집합의 구조이며, 어플리케이션과 사용자간의 상호 작용을 도와주는 데 사용된다.\n- 토큰이란 어플리케이션이 세션에 나타내는 독특한 문자열을 말한다. 표준방법은 HTTP 쿠키를 사용한다.\n- 일부 어플리케이션은 세션 토큰을 사용하지 않고 사용자를 재확인하는 다른 수단으로 클라이언트에 상태 정보를 저장해 두는데 누군가 엿들을 수 있는 위험을 막기 위해 암호화 된다.\n\n### 접근 통제\n- 사용자 접근 통제의 마지막 단계는 애 플리케이션 에서 사용자의 요청이 허가되는지 아닌지 결정을 내리고 실행하는 것이다.\n\n## 사용자 입력 값 처리\n\n### 입력 값 조작에 대한 처리 방법\n- 위험하다고 알려진 것들은 모두 차단\n- 안전하다고 알려진 용것들은 모두 수\n- 불순물 제거 (Sanitization)\n- 안전한 데이터 처리\n- 의미론적 검증법\n\n### 경계 검증\n- 프로세스의 여러 딘계에서 경계 검증을 하는 애플리케이션 기능\n\n![](/images/webhack/mechanism/2-5.png)\n\n### 다단계 검증과 정규화\n- Ex) Cross-Site-script 우회\n\n```haml\n<script>\n\nfilter 우회\n<scr<script>ipt>\n```\n\n- 어플리케이션이 처음으로 ../를 제거한 후 인용부호를 떼어버린다면 다음의 입력 값은 검증을 실패로 만드는 데 사용될 수 있다.\n    - ....\\/\n    \n- URL Encoding filter 우회\n    - %2527 -> %27\n    - %%2727\n\n- HTML 인코딩 filter 우회\n\n```html\n<iframe src=j&#x61;vasc&#x72ipt&#x3a;alert&#x28;1&#x29; >\n```\n\n- 좋은 처리 방법은 입력 값의 한 부분이라도 수정이 인ㄹ어나지 않을 때까지 계속 재귀적으로 불안전한 문자를 안전한 상태로 만드는 불순물 제거(Sanitization) 작업을 수행하는 것이다.\n\n### 공격자 핸들링\n- 에러 핸들링 (Handling Errors) : 어플리케이션은 시스템 기반 메세지나 디버깅 정보를 노출시켜서는 안 된다.\n![](/images/webhack/mechanism/2-6.png)\n\n- 감시 로그 관리 (Maintaining Audit Log) : 어플리케이션은 시스템 기반 메세지나 디버깅 정보를 노출시켜서는 안 된다.\n    - 로그인 성공, 로그인 실패, 비밀번호 변경과 같은 인증 기능과 관련된 모든 이벤트\n    - 신용카드 결제와 자금 이체 같은 주요 거래\n    - 접근 통제 메커니즘에 의해 막혀진 접근 시도\n    - 잘 알려진 공격 문자열을 포함하고 있는 악의적인 의도를 명확하게 표시하는 요청\n![](/images/webhack/mechanism/2-7.png)\n\n- 관리자에게 경고 (Alerting Administrators)\n    - 하나의 IP 주소나 한 명의 사용자로부터 비정상적으로 많은 양의 요청을 받은 경우\n    - 하나의 은행 계좌로부터 평소와 다르게 많은 돈이 인출된 경우\n    - 잘 알려진 공격 문자열을 포함하는 경우\n    - 일반 사용자들에게 숨겨진 데이터가 수정된 경\n    \n- 공격 대응 (Reacting to attacks)우\n    - 공격자의 요청에 점차적으로 늦게 대응하\n    - 공격자의 세션을 종료시킴\n    \n## 어플리케이션 관리\n- 인증 메커니즘에서 약점은 공격자가 전체 어플리케이션을 위험에 빠지게 할 수 있는 관리적인 접근 획득이 가능할 수 있다는 점이다.\n- 다수의 어플리케이션이 관리자 기능에 효과적인 접근 통제를 수행하지 안흔ㄴ다. 공격자는 높은 권한을 가진 새로운 사용자 계정을 생성하는 방법을 찾아 낼지도 모른다.\n- 관리자 기능은 가끔 사용자로부터 발생되는 데이터를 표현하는 사항에 대한 기능을 포함하기도 한다. 관리 인터페이스 내에 있는 크로스사이트 스크립팅 취약점은 높은 권한을 가진 세션을 위협할 수도 있다.\n- 관리자 기능은 신뢰되는 사용자에 의해 사용된다고 생각하기 때문에 덜 엄격한 보안 검사를 받게 된다.\n\n","slug":"security-webapplicationhacker-1","published":1,"updated":"2020-07-11T04:51:03.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515v003mqlvo62dqfytd","content":"<h2 id=\"핵심-방어-매커니즘\"><a class=\"markdownIt-Anchor\" href=\"#핵심-방어-매커니즘\"></a> 핵심 방어 매커니즘</h2>\n<ul>\n<li>권한이 없는 사용자가 민감한 정보에 접근하는 것을 막기 위해 어플리케이션의 데이터와 기능에 대한 사용자 접근 처리</li>\n<li>의도하지 않은 행동을 유발시키는 사용자 입력을 막기 위해 어플리케이션의 기능에 대한 사용자 입력 값 처리</li>\n<li>어플리케이션이 공격자로부터 직접적인 공격 대상이 됐을 때 이를 방어하고 보안 수준을 높이기 위한 공격자에 대한 처리</li>\n<li>어플리케이션에 대해 실시간으로 모니터링 할 수 있는 기능을 관리자에게 제공함으로써 관리자가 안전하게 어플리케이션을 관리할 수 있게 함</li>\n</ul>\n<h2 id=\"사용자-접근-처리\"><a class=\"markdownIt-Anchor\" href=\"#사용자-접근-처리\"></a> 사용자 접근 처리</h2>\n<ul>\n<li>사용자 범주\n<ul>\n<li>익명 사용자(anonymous users), 인가된 사용자(ordinary authenticated users), 관리적 사용자 (administrative users)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"인증\"><a class=\"markdownIt-Anchor\" href=\"#인증\"></a> 인증</h3>\n<ul>\n<li>ID/PWD, 클라이언트 인증, 스마트카드, Access Token\n<ul>\n<li>공격자가 다른 사용자의 아이디와 비밀번호를 추측하거나 로직에 있는 결함을 악용함으로써 인증 과정을 우회할 가능성이 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"세션-관리\"><a class=\"markdownIt-Anchor\" href=\"#세션-관리\"></a> 세션 관리</h3>\n<ul>\n<li>모든 어플리케이션은 각 사용자를 위한 세션을 만들어 주거나 사용자에게 세션을 확인하게 하는 토큰을 발행한다.</li>\n<li>세션 자체는 서버에 할당돼 있는 데이터 집합의 구조이며, 어플리케이션과 사용자간의 상호 작용을 도와주는 데 사용된다.</li>\n<li>토큰이란 어플리케이션이 세션에 나타내는 독특한 문자열을 말한다. 표준방법은 HTTP 쿠키를 사용한다.</li>\n<li>일부 어플리케이션은 세션 토큰을 사용하지 않고 사용자를 재확인하는 다른 수단으로 클라이언트에 상태 정보를 저장해 두는데 누군가 엿들을 수 있는 위험을 막기 위해 암호화 된다.</li>\n</ul>\n<h3 id=\"접근-통제\"><a class=\"markdownIt-Anchor\" href=\"#접근-통제\"></a> 접근 통제</h3>\n<ul>\n<li>사용자 접근 통제의 마지막 단계는 애 플리케이션 에서 사용자의 요청이 허가되는지 아닌지 결정을 내리고 실행하는 것이다.</li>\n</ul>\n<h2 id=\"사용자-입력-값-처리\"><a class=\"markdownIt-Anchor\" href=\"#사용자-입력-값-처리\"></a> 사용자 입력 값 처리</h2>\n<h3 id=\"입력-값-조작에-대한-처리-방법\"><a class=\"markdownIt-Anchor\" href=\"#입력-값-조작에-대한-처리-방법\"></a> 입력 값 조작에 대한 처리 방법</h3>\n<ul>\n<li>위험하다고 알려진 것들은 모두 차단</li>\n<li>안전하다고 알려진 용것들은 모두 수</li>\n<li>불순물 제거 (Sanitization)</li>\n<li>안전한 데이터 처리</li>\n<li>의미론적 검증법</li>\n</ul>\n<h3 id=\"경계-검증\"><a class=\"markdownIt-Anchor\" href=\"#경계-검증\"></a> 경계 검증</h3>\n<ul>\n<li>프로세스의 여러 딘계에서 경계 검증을 하는 애플리케이션 기능</li>\n</ul>\n<p><img src=\"/images/webhack/mechanism/2-5.png\" alt=\"\" /></p>\n<h3 id=\"다단계-검증과-정규화\"><a class=\"markdownIt-Anchor\" href=\"#다단계-검증과-정규화\"></a> 다단계 검증과 정규화</h3>\n<ul>\n<li>Ex) Cross-Site-script 우회</li>\n</ul>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">filter 우회</span><br><span class=\"line\">&lt;scr&lt;script&gt;ipt&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>어플리케이션이 처음으로 …/를 제거한 후 인용부호를 떼어버린다면 다음의 입력 값은 검증을 실패로 만드는 데 사용될 수 있다.</p>\n<ul>\n<li>…/</li>\n</ul>\n</li>\n<li>\n<p>URL Encoding filter 우회</p>\n<ul>\n<li>%2527 -&gt; %27</li>\n<li>%%2727</li>\n</ul>\n</li>\n<li>\n<p>HTML 인코딩 filter 우회</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">j&amp;#x61;vasc&amp;#x72ipt&amp;#x3a;alert&amp;#x28;1&amp;#x29;</span> &gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>좋은 처리 방법은 입력 값의 한 부분이라도 수정이 인ㄹ어나지 않을 때까지 계속 재귀적으로 불안전한 문자를 안전한 상태로 만드는 불순물 제거(Sanitization) 작업을 수행하는 것이다.</li>\n</ul>\n<h3 id=\"공격자-핸들링\"><a class=\"markdownIt-Anchor\" href=\"#공격자-핸들링\"></a> 공격자 핸들링</h3>\n<ul>\n<li>\n<p>에러 핸들링 (Handling Errors) : 어플리케이션은 시스템 기반 메세지나 디버깅 정보를 노출시켜서는 안 된다.<br />\n<img src=\"/images/webhack/mechanism/2-6.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>감시 로그 관리 (Maintaining Audit Log) : 어플리케이션은 시스템 기반 메세지나 디버깅 정보를 노출시켜서는 안 된다.</p>\n<ul>\n<li>로그인 성공, 로그인 실패, 비밀번호 변경과 같은 인증 기능과 관련된 모든 이벤트</li>\n<li>신용카드 결제와 자금 이체 같은 주요 거래</li>\n<li>접근 통제 메커니즘에 의해 막혀진 접근 시도</li>\n<li>잘 알려진 공격 문자열을 포함하고 있는 악의적인 의도를 명확하게 표시하는 요청<br />\n<img src=\"/images/webhack/mechanism/2-7.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>관리자에게 경고 (Alerting Administrators)</p>\n<ul>\n<li>하나의 IP 주소나 한 명의 사용자로부터 비정상적으로 많은 양의 요청을 받은 경우</li>\n<li>하나의 은행 계좌로부터 평소와 다르게 많은 돈이 인출된 경우</li>\n<li>잘 알려진 공격 문자열을 포함하는 경우</li>\n<li>일반 사용자들에게 숨겨진 데이터가 수정된 경</li>\n</ul>\n</li>\n<li>\n<p>공격 대응 (Reacting to attacks)우</p>\n<ul>\n<li>공격자의 요청에 점차적으로 늦게 대응하</li>\n<li>공격자의 세션을 종료시킴</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"어플리케이션-관리\"><a class=\"markdownIt-Anchor\" href=\"#어플리케이션-관리\"></a> 어플리케이션 관리</h2>\n<ul>\n<li>인증 메커니즘에서 약점은 공격자가 전체 어플리케이션을 위험에 빠지게 할 수 있는 관리적인 접근 획득이 가능할 수 있다는 점이다.</li>\n<li>다수의 어플리케이션이 관리자 기능에 효과적인 접근 통제를 수행하지 안흔ㄴ다. 공격자는 높은 권한을 가진 새로운 사용자 계정을 생성하는 방법을 찾아 낼지도 모른다.</li>\n<li>관리자 기능은 가끔 사용자로부터 발생되는 데이터를 표현하는 사항에 대한 기능을 포함하기도 한다. 관리 인터페이스 내에 있는 크로스사이트 스크립팅 취약점은 높은 권한을 가진 세션을 위협할 수도 있다.</li>\n<li>관리자 기능은 신뢰되는 사용자에 의해 사용된다고 생각하기 때문에 덜 엄격한 보안 검사를 받게 된다.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"핵심-방어-매커니즘\"><a class=\"markdownIt-Anchor\" href=\"#핵심-방어-매커니즘\"></a> 핵심 방어 매커니즘</h2>\n<ul>\n<li>권한이 없는 사용자가 민감한 정보에 접근하는 것을 막기 위해 어플리케이션의 데이터와 기능에 대한 사용자 접근 처리</li>\n<li>의도하지 않은 행동을 유발시키는 사용자 입력을 막기 위해 어플리케이션의 기능에 대한 사용자 입력 값 처리</li>\n<li>어플리케이션이 공격자로부터 직접적인 공격 대상이 됐을 때 이를 방어하고 보안 수준을 높이기 위한 공격자에 대한 처리</li>\n<li>어플리케이션에 대해 실시간으로 모니터링 할 수 있는 기능을 관리자에게 제공함으로써 관리자가 안전하게 어플리케이션을 관리할 수 있게 함</li>\n</ul>\n<h2 id=\"사용자-접근-처리\"><a class=\"markdownIt-Anchor\" href=\"#사용자-접근-처리\"></a> 사용자 접근 처리</h2>\n<ul>\n<li>사용자 범주\n<ul>\n<li>익명 사용자(anonymous users), 인가된 사용자(ordinary authenticated users), 관리적 사용자 (administrative users)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"인증\"><a class=\"markdownIt-Anchor\" href=\"#인증\"></a> 인증</h3>\n<ul>\n<li>ID/PWD, 클라이언트 인증, 스마트카드, Access Token\n<ul>\n<li>공격자가 다른 사용자의 아이디와 비밀번호를 추측하거나 로직에 있는 결함을 악용함으로써 인증 과정을 우회할 가능성이 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"세션-관리\"><a class=\"markdownIt-Anchor\" href=\"#세션-관리\"></a> 세션 관리</h3>\n<ul>\n<li>모든 어플리케이션은 각 사용자를 위한 세션을 만들어 주거나 사용자에게 세션을 확인하게 하는 토큰을 발행한다.</li>\n<li>세션 자체는 서버에 할당돼 있는 데이터 집합의 구조이며, 어플리케이션과 사용자간의 상호 작용을 도와주는 데 사용된다.</li>\n<li>토큰이란 어플리케이션이 세션에 나타내는 독특한 문자열을 말한다. 표준방법은 HTTP 쿠키를 사용한다.</li>\n<li>일부 어플리케이션은 세션 토큰을 사용하지 않고 사용자를 재확인하는 다른 수단으로 클라이언트에 상태 정보를 저장해 두는데 누군가 엿들을 수 있는 위험을 막기 위해 암호화 된다.</li>\n</ul>\n<h3 id=\"접근-통제\"><a class=\"markdownIt-Anchor\" href=\"#접근-통제\"></a> 접근 통제</h3>\n<ul>\n<li>사용자 접근 통제의 마지막 단계는 애 플리케이션 에서 사용자의 요청이 허가되는지 아닌지 결정을 내리고 실행하는 것이다.</li>\n</ul>\n<h2 id=\"사용자-입력-값-처리\"><a class=\"markdownIt-Anchor\" href=\"#사용자-입력-값-처리\"></a> 사용자 입력 값 처리</h2>\n<h3 id=\"입력-값-조작에-대한-처리-방법\"><a class=\"markdownIt-Anchor\" href=\"#입력-값-조작에-대한-처리-방법\"></a> 입력 값 조작에 대한 처리 방법</h3>\n<ul>\n<li>위험하다고 알려진 것들은 모두 차단</li>\n<li>안전하다고 알려진 용것들은 모두 수</li>\n<li>불순물 제거 (Sanitization)</li>\n<li>안전한 데이터 처리</li>\n<li>의미론적 검증법</li>\n</ul>\n<h3 id=\"경계-검증\"><a class=\"markdownIt-Anchor\" href=\"#경계-검증\"></a> 경계 검증</h3>\n<ul>\n<li>프로세스의 여러 딘계에서 경계 검증을 하는 애플리케이션 기능</li>\n</ul>\n<p><img src=\"/images/webhack/mechanism/2-5.png\" alt=\"\" /></p>\n<h3 id=\"다단계-검증과-정규화\"><a class=\"markdownIt-Anchor\" href=\"#다단계-검증과-정규화\"></a> 다단계 검증과 정규화</h3>\n<ul>\n<li>Ex) Cross-Site-script 우회</li>\n</ul>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">filter 우회</span><br><span class=\"line\">&lt;scr&lt;script&gt;ipt&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>어플리케이션이 처음으로 …/를 제거한 후 인용부호를 떼어버린다면 다음의 입력 값은 검증을 실패로 만드는 데 사용될 수 있다.</p>\n<ul>\n<li>…/</li>\n</ul>\n</li>\n<li>\n<p>URL Encoding filter 우회</p>\n<ul>\n<li>%2527 -&gt; %27</li>\n<li>%%2727</li>\n</ul>\n</li>\n<li>\n<p>HTML 인코딩 filter 우회</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">j&amp;#x61;vasc&amp;#x72ipt&amp;#x3a;alert&amp;#x28;1&amp;#x29;</span> &gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>좋은 처리 방법은 입력 값의 한 부분이라도 수정이 인ㄹ어나지 않을 때까지 계속 재귀적으로 불안전한 문자를 안전한 상태로 만드는 불순물 제거(Sanitization) 작업을 수행하는 것이다.</li>\n</ul>\n<h3 id=\"공격자-핸들링\"><a class=\"markdownIt-Anchor\" href=\"#공격자-핸들링\"></a> 공격자 핸들링</h3>\n<ul>\n<li>\n<p>에러 핸들링 (Handling Errors) : 어플리케이션은 시스템 기반 메세지나 디버깅 정보를 노출시켜서는 안 된다.<br />\n<img src=\"/images/webhack/mechanism/2-6.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>감시 로그 관리 (Maintaining Audit Log) : 어플리케이션은 시스템 기반 메세지나 디버깅 정보를 노출시켜서는 안 된다.</p>\n<ul>\n<li>로그인 성공, 로그인 실패, 비밀번호 변경과 같은 인증 기능과 관련된 모든 이벤트</li>\n<li>신용카드 결제와 자금 이체 같은 주요 거래</li>\n<li>접근 통제 메커니즘에 의해 막혀진 접근 시도</li>\n<li>잘 알려진 공격 문자열을 포함하고 있는 악의적인 의도를 명확하게 표시하는 요청<br />\n<img src=\"/images/webhack/mechanism/2-7.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>관리자에게 경고 (Alerting Administrators)</p>\n<ul>\n<li>하나의 IP 주소나 한 명의 사용자로부터 비정상적으로 많은 양의 요청을 받은 경우</li>\n<li>하나의 은행 계좌로부터 평소와 다르게 많은 돈이 인출된 경우</li>\n<li>잘 알려진 공격 문자열을 포함하는 경우</li>\n<li>일반 사용자들에게 숨겨진 데이터가 수정된 경</li>\n</ul>\n</li>\n<li>\n<p>공격 대응 (Reacting to attacks)우</p>\n<ul>\n<li>공격자의 요청에 점차적으로 늦게 대응하</li>\n<li>공격자의 세션을 종료시킴</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"어플리케이션-관리\"><a class=\"markdownIt-Anchor\" href=\"#어플리케이션-관리\"></a> 어플리케이션 관리</h2>\n<ul>\n<li>인증 메커니즘에서 약점은 공격자가 전체 어플리케이션을 위험에 빠지게 할 수 있는 관리적인 접근 획득이 가능할 수 있다는 점이다.</li>\n<li>다수의 어플리케이션이 관리자 기능에 효과적인 접근 통제를 수행하지 안흔ㄴ다. 공격자는 높은 권한을 가진 새로운 사용자 계정을 생성하는 방법을 찾아 낼지도 모른다.</li>\n<li>관리자 기능은 가끔 사용자로부터 발생되는 데이터를 표현하는 사항에 대한 기능을 포함하기도 한다. 관리 인터페이스 내에 있는 크로스사이트 스크립팅 취약점은 높은 권한을 가진 세션을 위협할 수도 있다.</li>\n<li>관리자 기능은 신뢰되는 사용자에 의해 사용된다고 생각하기 때문에 덜 엄격한 보안 검사를 받게 된다.</li>\n</ul>\n"},{"title":"spring-boot-logging","date":"2020-02-18T12:23:27.000Z","_content":"\n스프링 부트에서는 로깅 설정을 자동적으로 지원한다.\nSLF4J를 사용한 로깅 파사드를 통해 구현체를 사용하게 되며 스프링부트의 기본은 logback으로 되어 있다.\nSpring Boot는 기존 Spring에서의 사용법과는 다르게 logback-spring.xml를 사용하도록 권장하고 있다.\n\n기존 logback과 다른점은 logback file 안에서 Spring context를 접근할 수 있다는 것이다.\n기존 logback은 파일이름으로 프로파일을 지정해 사용했던 반면, spring boot의 logback은 \n내부에서 프로파일에 대한 if문 처리를 해 파일 하나로 간단하게 관리할 수 있게 도와준다.\n\nhttps://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#boot-features-logging\n상단 링크에 적혀있는 글이 매우 도움이 될 것이다.\n\n현재 프로젝트에서는 Spring-boot-starter-web을 기준으로 프로젝트를 진행하고 있다.\nhttps://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web/2.2.4.RELEASE\n\n해당 spring-boot-starter-web은 내부에 spring-boot-starter를 참조하고 있고, \nspring-boot-starter는 spring-boot-starter-logging을 참조 하고 있어서 logback 이외에 다른 구현체를 사용하고 싶으면\nspring-boot-starter-logging을 exclude하고 다른 spring-boot-starter를 선언해주면 된다.\n\n","source":"_posts/spring-boot-logging.md","raw":"---\ntitle: spring-boot-logging\ndate: 2020-02-18 21:23:27\ntags:\n---\n\n스프링 부트에서는 로깅 설정을 자동적으로 지원한다.\nSLF4J를 사용한 로깅 파사드를 통해 구현체를 사용하게 되며 스프링부트의 기본은 logback으로 되어 있다.\nSpring Boot는 기존 Spring에서의 사용법과는 다르게 logback-spring.xml를 사용하도록 권장하고 있다.\n\n기존 logback과 다른점은 logback file 안에서 Spring context를 접근할 수 있다는 것이다.\n기존 logback은 파일이름으로 프로파일을 지정해 사용했던 반면, spring boot의 logback은 \n내부에서 프로파일에 대한 if문 처리를 해 파일 하나로 간단하게 관리할 수 있게 도와준다.\n\nhttps://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#boot-features-logging\n상단 링크에 적혀있는 글이 매우 도움이 될 것이다.\n\n현재 프로젝트에서는 Spring-boot-starter-web을 기준으로 프로젝트를 진행하고 있다.\nhttps://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web/2.2.4.RELEASE\n\n해당 spring-boot-starter-web은 내부에 spring-boot-starter를 참조하고 있고, \nspring-boot-starter는 spring-boot-starter-logging을 참조 하고 있어서 logback 이외에 다른 구현체를 사용하고 싶으면\nspring-boot-starter-logging을 exclude하고 다른 spring-boot-starter를 선언해주면 된다.\n\n","slug":"spring-boot-logging","published":1,"updated":"2020-07-11T04:51:03.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515x003oqlvocoav93ys","content":"<p>스프링 부트에서는 로깅 설정을 자동적으로 지원한다.<br />\nSLF4J를 사용한 로깅 파사드를 통해 구현체를 사용하게 되며 스프링부트의 기본은 logback으로 되어 있다.<br />\nSpring Boot는 기존 Spring에서의 사용법과는 다르게 logback-spring.xml를 사용하도록 권장하고 있다.</p>\n<p>기존 logback과 다른점은 logback file 안에서 Spring context를 접근할 수 있다는 것이다.<br />\n기존 logback은 파일이름으로 프로파일을 지정해 사용했던 반면, spring boot의 logback은<br />\n내부에서 프로파일에 대한 if문 처리를 해 파일 하나로 간단하게 관리할 수 있게 도와준다.</p>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#boot-features-logging\" target=\"_blank\" rel=\"noopener\">https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#boot-features-logging</a><br />\n상단 링크에 적혀있는 글이 매우 도움이 될 것이다.</p>\n<p>현재 프로젝트에서는 Spring-boot-starter-web을 기준으로 프로젝트를 진행하고 있다.<br />\n<a href=\"https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web/2.2.4.RELEASE\" target=\"_blank\" rel=\"noopener\">https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web/2.2.4.RELEASE</a></p>\n<p>해당 spring-boot-starter-web은 내부에 spring-boot-starter를 참조하고 있고,<br />\nspring-boot-starter는 spring-boot-starter-logging을 참조 하고 있어서 logback 이외에 다른 구현체를 사용하고 싶으면<br />\nspring-boot-starter-logging을 exclude하고 다른 spring-boot-starter를 선언해주면 된다.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>스프링 부트에서는 로깅 설정을 자동적으로 지원한다.<br />\nSLF4J를 사용한 로깅 파사드를 통해 구현체를 사용하게 되며 스프링부트의 기본은 logback으로 되어 있다.<br />\nSpring Boot는 기존 Spring에서의 사용법과는 다르게 logback-spring.xml를 사용하도록 권장하고 있다.</p>\n<p>기존 logback과 다른점은 logback file 안에서 Spring context를 접근할 수 있다는 것이다.<br />\n기존 logback은 파일이름으로 프로파일을 지정해 사용했던 반면, spring boot의 logback은<br />\n내부에서 프로파일에 대한 if문 처리를 해 파일 하나로 간단하게 관리할 수 있게 도와준다.</p>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#boot-features-logging\" target=\"_blank\" rel=\"noopener\">https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#boot-features-logging</a><br />\n상단 링크에 적혀있는 글이 매우 도움이 될 것이다.</p>\n<p>현재 프로젝트에서는 Spring-boot-starter-web을 기준으로 프로젝트를 진행하고 있다.<br />\n<a href=\"https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web/2.2.4.RELEASE\" target=\"_blank\" rel=\"noopener\">https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web/2.2.4.RELEASE</a></p>\n<p>해당 spring-boot-starter-web은 내부에 spring-boot-starter를 참조하고 있고,<br />\nspring-boot-starter는 spring-boot-starter-logging을 참조 하고 있어서 logback 이외에 다른 구현체를 사용하고 싶으면<br />\nspring-boot-starter-logging을 exclude하고 다른 spring-boot-starter를 선언해주면 된다.</p>\n"},{"title":"spring-boot-application-run-listeners","date":"2019-12-19T06:33:04.000Z","_content":"\nSpring에서 사용하는 기본적인 Listeners 구현체\nSpringApplicationRunListener를 들고 있고 변경 불가능하게 되어있다.\n```java \nclass SpringApplicationRunListeners {\n\n\tprivate final Log log;\n\n\tprivate final List<SpringApplicationRunListener> listeners;\n\n\tSpringApplicationRunListeners(Log log, Collection<? extends SpringApplicationRunListener> listeners) {\n\t\tthis.log = log;\n\t\tthis.listeners = new ArrayList<>(listeners);\n\t}\n\n\tpublic void starting() {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.starting();\n\t\t}\n\t}\n\n\tpublic void environmentPrepared(ConfigurableEnvironment environment) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.environmentPrepared(environment);\n\t\t}\n\t}\n\n\tpublic void contextPrepared(ConfigurableApplicationContext context) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.contextPrepared(context);\n\t\t}\n\t}\n\n\tpublic void contextLoaded(ConfigurableApplicationContext context) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.contextLoaded(context);\n\t\t}\n\t}\n\n\tpublic void started(ConfigurableApplicationContext context) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.started(context);\n\t\t}\n\t}\n\n\tpublic void running(ConfigurableApplicationContext context) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.running(context);\n\t\t}\n\t}\n\n\tpublic void failed(ConfigurableApplicationContext context, Throwable exception) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tcallFailedListener(listener, context, exception);\n\t\t}\n\t}\n\n\tprivate void callFailedListener(SpringApplicationRunListener listener, ConfigurableApplicationContext context,\n\t\t\tThrowable exception) {\n\t\ttry {\n\t\t\tlistener.failed(context, exception);\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\tif (exception == null) {\n\t\t\t\tReflectionUtils.rethrowRuntimeException(ex);\n\t\t\t}\n\t\t\tif (this.log.isDebugEnabled()) {\n\t\t\t\tthis.log.error(\"Error handling failed\", ex);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tmessage = (message != null) ? message : \"no error message\";\n\t\t\t\tthis.log.warn(\"Error handling failed (\" + message + \")\");\n\t\t\t}\n\t\t}\n\t}\n\n}\n```\n\n","source":"_posts/spring-boot-application-run-listeners.md","raw":"---\ntitle: spring-boot-application-run-listeners\ndate: 2019-12-19 15:33:04\ntags: SpringBoot\n---\n\nSpring에서 사용하는 기본적인 Listeners 구현체\nSpringApplicationRunListener를 들고 있고 변경 불가능하게 되어있다.\n```java \nclass SpringApplicationRunListeners {\n\n\tprivate final Log log;\n\n\tprivate final List<SpringApplicationRunListener> listeners;\n\n\tSpringApplicationRunListeners(Log log, Collection<? extends SpringApplicationRunListener> listeners) {\n\t\tthis.log = log;\n\t\tthis.listeners = new ArrayList<>(listeners);\n\t}\n\n\tpublic void starting() {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.starting();\n\t\t}\n\t}\n\n\tpublic void environmentPrepared(ConfigurableEnvironment environment) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.environmentPrepared(environment);\n\t\t}\n\t}\n\n\tpublic void contextPrepared(ConfigurableApplicationContext context) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.contextPrepared(context);\n\t\t}\n\t}\n\n\tpublic void contextLoaded(ConfigurableApplicationContext context) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.contextLoaded(context);\n\t\t}\n\t}\n\n\tpublic void started(ConfigurableApplicationContext context) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.started(context);\n\t\t}\n\t}\n\n\tpublic void running(ConfigurableApplicationContext context) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.running(context);\n\t\t}\n\t}\n\n\tpublic void failed(ConfigurableApplicationContext context, Throwable exception) {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tcallFailedListener(listener, context, exception);\n\t\t}\n\t}\n\n\tprivate void callFailedListener(SpringApplicationRunListener listener, ConfigurableApplicationContext context,\n\t\t\tThrowable exception) {\n\t\ttry {\n\t\t\tlistener.failed(context, exception);\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\tif (exception == null) {\n\t\t\t\tReflectionUtils.rethrowRuntimeException(ex);\n\t\t\t}\n\t\t\tif (this.log.isDebugEnabled()) {\n\t\t\t\tthis.log.error(\"Error handling failed\", ex);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tmessage = (message != null) ? message : \"no error message\";\n\t\t\t\tthis.log.warn(\"Error handling failed (\" + message + \")\");\n\t\t\t}\n\t\t}\n\t}\n\n}\n```\n\n","slug":"spring-boot-application-run-listeners","published":1,"updated":"2020-07-11T04:51:03.354Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo515z003tqlvo4k16f2cx","content":"<p>Spring에서 사용하는 기본적인 Listeners 구현체<br />\nSpringApplicationRunListener를 들고 있고 변경 불가능하게 되어있다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringApplicationRunListeners</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Log log;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;SpringApplicationRunListener&gt; listeners;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSpringApplicationRunListeners(Log log, Collection&lt;? extends SpringApplicationRunListener&gt; listeners) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.log = log;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.listeners = <span class=\"keyword\">new</span> ArrayList&lt;&gt;(listeners);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">starting</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.starting();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">environmentPrepared</span><span class=\"params\">(ConfigurableEnvironment environment)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.environmentPrepared(environment);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextPrepared</span><span class=\"params\">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.contextPrepared(context);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextLoaded</span><span class=\"params\">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.contextLoaded(context);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">started</span><span class=\"params\">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.started(context);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">running</span><span class=\"params\">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.running(context);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">failed</span><span class=\"params\">(ConfigurableApplicationContext context, Throwable exception)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tcallFailedListener(listener, context, exception);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">callFailedListener</span><span class=\"params\">(SpringApplicationRunListener listener, ConfigurableApplicationContext context,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\tThrowable exception)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tlistener.failed(context, exception);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">catch</span> (Throwable ex) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (exception == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tReflectionUtils.rethrowRuntimeException(ex);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.log.isDebugEnabled()) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.log.error(<span class=\"string\">\"Error handling failed\"</span>, ex);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tString message = ex.getMessage();</span><br><span class=\"line\">\t\t\t\tmessage = (message != <span class=\"keyword\">null</span>) ? message : <span class=\"string\">\"no error message\"</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.log.warn(<span class=\"string\">\"Error handling failed (\"</span> + message + <span class=\"string\">\")\"</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>Spring에서 사용하는 기본적인 Listeners 구현체<br />\nSpringApplicationRunListener를 들고 있고 변경 불가능하게 되어있다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringApplicationRunListeners</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Log log;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;SpringApplicationRunListener&gt; listeners;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSpringApplicationRunListeners(Log log, Collection&lt;? extends SpringApplicationRunListener&gt; listeners) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.log = log;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.listeners = <span class=\"keyword\">new</span> ArrayList&lt;&gt;(listeners);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">starting</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.starting();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">environmentPrepared</span><span class=\"params\">(ConfigurableEnvironment environment)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.environmentPrepared(environment);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextPrepared</span><span class=\"params\">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.contextPrepared(context);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextLoaded</span><span class=\"params\">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.contextLoaded(context);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">started</span><span class=\"params\">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.started(context);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">running</span><span class=\"params\">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.running(context);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">failed</span><span class=\"params\">(ConfigurableApplicationContext context, Throwable exception)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tcallFailedListener(listener, context, exception);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">callFailedListener</span><span class=\"params\">(SpringApplicationRunListener listener, ConfigurableApplicationContext context,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\tThrowable exception)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tlistener.failed(context, exception);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">catch</span> (Throwable ex) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (exception == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tReflectionUtils.rethrowRuntimeException(ex);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.log.isDebugEnabled()) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.log.error(<span class=\"string\">\"Error handling failed\"</span>, ex);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tString message = ex.getMessage();</span><br><span class=\"line\">\t\t\t\tmessage = (message != <span class=\"keyword\">null</span>) ? message : <span class=\"string\">\"no error message\"</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.log.warn(<span class=\"string\">\"Error handling failed (\"</span> + message + <span class=\"string\">\")\"</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"spring-boot-proxy","date":"2020-07-18T15:55:53.000Z","_content":"\n### Spring Proxy\n- Proxy pattern\n    - 실제 기능을 수행하는 객체(Real Object)대신 가장의 객체(Proxy Object)를 사용해 로직의 흐름을 제어하는 디자인 패턴\n    - 원래 하려던 기능 외에 다른 것을 추가하고 싶으나 해당 코드 자체를 변경 하지 않고 싶을때, 많이 사용한다.\n    - Real Object, Proxy Object는 동일한 인터페이스를 구현하고 Proxy Object는 메서드 수행시 Real Object의 메소드 실행을 가로챈다.\n        - Virtual Proxy(Lazy initialisation 등), Protection Proxy\n\n- Byte Code Generation Library\n    - cglib : https://github.com/cglib/cglib\n    - byteBuddy : https://bytebuddy.net\n\n- ASM : Java bytecode manipulation and analysis framework\n    - https://asm.ow2.io/\n    ","source":"_posts/spring-boot-proxy.md","raw":"---\ntitle: spring-boot-proxy\ndate: 2020-07-19 00:55:53\ntags: Springboot\n---\n\n### Spring Proxy\n- Proxy pattern\n    - 실제 기능을 수행하는 객체(Real Object)대신 가장의 객체(Proxy Object)를 사용해 로직의 흐름을 제어하는 디자인 패턴\n    - 원래 하려던 기능 외에 다른 것을 추가하고 싶으나 해당 코드 자체를 변경 하지 않고 싶을때, 많이 사용한다.\n    - Real Object, Proxy Object는 동일한 인터페이스를 구현하고 Proxy Object는 메서드 수행시 Real Object의 메소드 실행을 가로챈다.\n        - Virtual Proxy(Lazy initialisation 등), Protection Proxy\n\n- Byte Code Generation Library\n    - cglib : https://github.com/cglib/cglib\n    - byteBuddy : https://bytebuddy.net\n\n- ASM : Java bytecode manipulation and analysis framework\n    - https://asm.ow2.io/\n    ","slug":"spring-boot-proxy","published":1,"updated":"2020-07-18T16:25:02.890Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5161003wqlvoewcx4abj","content":"<h3 id=\"spring-proxy\"><a class=\"markdownIt-Anchor\" href=\"#spring-proxy\"></a> Spring Proxy</h3>\n<ul>\n<li>\n<p>Proxy pattern</p>\n<ul>\n<li>실제 기능을 수행하는 객체(Real Object)대신 가장의 객체(Proxy Object)를 사용해 로직의 흐름을 제어하는 디자인 패턴</li>\n<li>원래 하려던 기능 외에 다른 것을 추가하고 싶으나 해당 코드 자체를 변경 하지 않고 싶을때, 많이 사용한다.</li>\n<li>Real Object, Proxy Object는 동일한 인터페이스를 구현하고 Proxy Object는 메서드 수행시 Real Object의 메소드 실행을 가로챈다.\n<ul>\n<li>Virtual Proxy(Lazy initialisation 등), Protection Proxy</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Byte Code Generation Library</p>\n<ul>\n<li>cglib : <a href=\"https://github.com/cglib/cglib\" target=\"_blank\" rel=\"noopener\">https://github.com/cglib/cglib</a></li>\n<li>byteBuddy : <a href=\"https://bytebuddy.net\" target=\"_blank\" rel=\"noopener\">https://bytebuddy.net</a></li>\n</ul>\n</li>\n<li>\n<p>ASM : Java bytecode manipulation and analysis framework</p>\n<ul>\n<li><a href=\"https://asm.ow2.io/\" target=\"_blank\" rel=\"noopener\">https://asm.ow2.io/</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"spring-proxy\"><a class=\"markdownIt-Anchor\" href=\"#spring-proxy\"></a> Spring Proxy</h3>\n<ul>\n<li>\n<p>Proxy pattern</p>\n<ul>\n<li>실제 기능을 수행하는 객체(Real Object)대신 가장의 객체(Proxy Object)를 사용해 로직의 흐름을 제어하는 디자인 패턴</li>\n<li>원래 하려던 기능 외에 다른 것을 추가하고 싶으나 해당 코드 자체를 변경 하지 않고 싶을때, 많이 사용한다.</li>\n<li>Real Object, Proxy Object는 동일한 인터페이스를 구현하고 Proxy Object는 메서드 수행시 Real Object의 메소드 실행을 가로챈다.\n<ul>\n<li>Virtual Proxy(Lazy initialisation 등), Protection Proxy</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Byte Code Generation Library</p>\n<ul>\n<li>cglib : <a href=\"https://github.com/cglib/cglib\" target=\"_blank\" rel=\"noopener\">https://github.com/cglib/cglib</a></li>\n<li>byteBuddy : <a href=\"https://bytebuddy.net\" target=\"_blank\" rel=\"noopener\">https://bytebuddy.net</a></li>\n</ul>\n</li>\n<li>\n<p>ASM : Java bytecode manipulation and analysis framework</p>\n<ul>\n<li><a href=\"https://asm.ow2.io/\" target=\"_blank\" rel=\"noopener\">https://asm.ow2.io/</a></li>\n</ul>\n</li>\n</ul>\n"},{"title":"spring-boot-application-context","date":"2020-07-18T14:56:20.000Z","_content":"\n### Annotation Config Servlet Application Context (Spring boot 2.3.1 Version 기준)\n![](/images/springboot/applicationContext/annotation_config_servlet_application_context_class_diagram.png)\n\n- AnnotationBeanDefinitionReader\n![](/images/springboot/applicationContext/annotated_bean_definition_reader.png)\n    - Field 설명\n        - BeanNameGenerator : \n    - 기능 설명\n    - 명칭은 Reader인데 Bean을 등록하는 함수를 가지고 있다.\n    - registerBean과 Environment 생성을 담당한다.\n        - Environment : Java System의 Environment로 System Properties(String value)와 System Environment(Key/Value)를 propertySource에 등록한다.\n        - registerBean :  \n- ClassPathBeanDefinitionScanner","source":"_posts/spring-boot-application-context.md","raw":"---\ntitle: spring-boot-application-context\ndate: 2020-07-18 23:56:20\ntags: SpringBoot\n---\n\n### Annotation Config Servlet Application Context (Spring boot 2.3.1 Version 기준)\n![](/images/springboot/applicationContext/annotation_config_servlet_application_context_class_diagram.png)\n\n- AnnotationBeanDefinitionReader\n![](/images/springboot/applicationContext/annotated_bean_definition_reader.png)\n    - Field 설명\n        - BeanNameGenerator : \n    - 기능 설명\n    - 명칭은 Reader인데 Bean을 등록하는 함수를 가지고 있다.\n    - registerBean과 Environment 생성을 담당한다.\n        - Environment : Java System의 Environment로 System Properties(String value)와 System Environment(Key/Value)를 propertySource에 등록한다.\n        - registerBean :  \n- ClassPathBeanDefinitionScanner","slug":"spring-boot-application-context","published":1,"updated":"2020-07-18T15:54:37.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5163003zqlvo72raahtl","content":"<h3 id=\"annotation-config-servlet-application-context-spring-boot-231-version-기준\"><a class=\"markdownIt-Anchor\" href=\"#annotation-config-servlet-application-context-spring-boot-231-version-기준\"></a> Annotation Config Servlet Application Context (Spring boot 2.3.1 Version 기준)</h3>\n<p><img src=\"/images/springboot/applicationContext/annotation_config_servlet_application_context_class_diagram.png\" alt=\"\" /></p>\n<ul>\n<li>AnnotationBeanDefinitionReader<br />\n<img src=\"/images/springboot/applicationContext/annotated_bean_definition_reader.png\" alt=\"\" />\n<ul>\n<li>Field 설명\n<ul>\n<li>BeanNameGenerator :</li>\n</ul>\n</li>\n<li>기능 설명</li>\n<li>명칭은 Reader인데 Bean을 등록하는 함수를 가지고 있다.</li>\n<li>registerBean과 Environment 생성을 담당한다.\n<ul>\n<li>Environment : Java System의 Environment로 System Properties(String value)와 System Environment(Key/Value)를 propertySource에 등록한다.</li>\n<li>registerBean :</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ClassPathBeanDefinitionScanner</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"annotation-config-servlet-application-context-spring-boot-231-version-기준\"><a class=\"markdownIt-Anchor\" href=\"#annotation-config-servlet-application-context-spring-boot-231-version-기준\"></a> Annotation Config Servlet Application Context (Spring boot 2.3.1 Version 기준)</h3>\n<p><img src=\"/images/springboot/applicationContext/annotation_config_servlet_application_context_class_diagram.png\" alt=\"\" /></p>\n<ul>\n<li>AnnotationBeanDefinitionReader<br />\n<img src=\"/images/springboot/applicationContext/annotated_bean_definition_reader.png\" alt=\"\" />\n<ul>\n<li>Field 설명\n<ul>\n<li>BeanNameGenerator :</li>\n</ul>\n</li>\n<li>기능 설명</li>\n<li>명칭은 Reader인데 Bean을 등록하는 함수를 가지고 있다.</li>\n<li>registerBean과 Environment 생성을 담당한다.\n<ul>\n<li>Environment : Java System의 Environment로 System Properties(String value)와 System Environment(Key/Value)를 propertySource에 등록한다.</li>\n<li>registerBean :</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ClassPathBeanDefinitionScanner</li>\n</ul>\n"},{"title":"spring-initializer","date":"2019-12-20T05:18:24.000Z","_content":"\n1. An ApplicationStartingEvent is sent at the start of a run, but before any processing except the registration of listeners and initializers.\n2. An ApplicationEnvironmentPreparedEvent is sent when the Environment to be used in the context is known, but before the context is created.\n3. An ApplicationPreparedEvent is sent just before the refresh is started, but after bean definitions have been loaded.\n4. An ApplicationReadyEvent is sent after the refresh and any related callbacks have been processed to indicate the application is ready to service requests.\n5. An ApplicationFailedEvent is sent if there is an exception on startup.\n\n\n### 1. SharedMetadataReaderFactoryContextInitializer\n\n- initialize 함수가 호출되면 applicationContext에 PostProcessor로 CachingMetadataReaderFactoryPostProcessor를 등록한다.\n\n#### CachingMetadataReaderFactoryPostProcessor\n```java\n\t\t@Override\n\t\tpublic int getOrder() {\n\t\t\t// Must happen before the ConfigurationClassPostProcessor is created\n\t\t\treturn Ordered.HIGHEST_PRECEDENCE;\n\t\t}\n```\n\t\n```java\npublic interface Ordered {\n\tint HIGHEST_PRECEDENCE = Integer.MIN_VALUE;\n\tint LOWEST_PRECEDENCE = Integer.MAX_VALUE;\n\tint getOrder();\n}\n```\n- ConfigurationClassPostProcessor가 생성되기전 반드시 수행되어야 하는 프로세서이다.\n- HIGHEST_PRECEDENCE의 값은 Integer.MIN_VALUE\n- register 수행시 BeanDefinitionRegistry에 BeanDefinition에 \n  \"org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory\"으로 BeanDefinition 등록\n\n####  ","source":"_posts/spring-initializer.md","raw":"---\ntitle: spring-initializer\ndate: 2019-12-20 14:18:24\ntags:\n---\n\n1. An ApplicationStartingEvent is sent at the start of a run, but before any processing except the registration of listeners and initializers.\n2. An ApplicationEnvironmentPreparedEvent is sent when the Environment to be used in the context is known, but before the context is created.\n3. An ApplicationPreparedEvent is sent just before the refresh is started, but after bean definitions have been loaded.\n4. An ApplicationReadyEvent is sent after the refresh and any related callbacks have been processed to indicate the application is ready to service requests.\n5. An ApplicationFailedEvent is sent if there is an exception on startup.\n\n\n### 1. SharedMetadataReaderFactoryContextInitializer\n\n- initialize 함수가 호출되면 applicationContext에 PostProcessor로 CachingMetadataReaderFactoryPostProcessor를 등록한다.\n\n#### CachingMetadataReaderFactoryPostProcessor\n```java\n\t\t@Override\n\t\tpublic int getOrder() {\n\t\t\t// Must happen before the ConfigurationClassPostProcessor is created\n\t\t\treturn Ordered.HIGHEST_PRECEDENCE;\n\t\t}\n```\n\t\n```java\npublic interface Ordered {\n\tint HIGHEST_PRECEDENCE = Integer.MIN_VALUE;\n\tint LOWEST_PRECEDENCE = Integer.MAX_VALUE;\n\tint getOrder();\n}\n```\n- ConfigurationClassPostProcessor가 생성되기전 반드시 수행되어야 하는 프로세서이다.\n- HIGHEST_PRECEDENCE의 값은 Integer.MIN_VALUE\n- register 수행시 BeanDefinitionRegistry에 BeanDefinition에 \n  \"org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory\"으로 BeanDefinition 등록\n\n####  ","slug":"spring-initializer","published":1,"updated":"2020-07-11T04:51:03.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo51660043qlvoahdtey2m","content":"<ol>\n<li>An ApplicationStartingEvent is sent at the start of a run, but before any processing except the registration of listeners and initializers.</li>\n<li>An ApplicationEnvironmentPreparedEvent is sent when the Environment to be used in the context is known, but before the context is created.</li>\n<li>An ApplicationPreparedEvent is sent just before the refresh is started, but after bean definitions have been loaded.</li>\n<li>An ApplicationReadyEvent is sent after the refresh and any related callbacks have been processed to indicate the application is ready to service requests.</li>\n<li>An ApplicationFailedEvent is sent if there is an exception on startup.</li>\n</ol>\n<h3 id=\"1-sharedmetadatareaderfactorycontextinitializer\"><a class=\"markdownIt-Anchor\" href=\"#1-sharedmetadatareaderfactorycontextinitializer\"></a> 1. SharedMetadataReaderFactoryContextInitializer</h3>\n<ul>\n<li>initialize 함수가 호출되면 applicationContext에 PostProcessor로 CachingMetadataReaderFactoryPostProcessor를 등록한다.</li>\n</ul>\n<h4 id=\"cachingmetadatareaderfactorypostprocessor\"><a class=\"markdownIt-Anchor\" href=\"#cachingmetadatareaderfactorypostprocessor\"></a> CachingMetadataReaderFactoryPostProcessor</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Must happen before the ConfigurationClassPostProcessor is created</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Ordered.HIGHEST_PRECEDENCE;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Ordered</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> HIGHEST_PRECEDENCE = Integer.MIN_VALUE;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> LOWEST_PRECEDENCE = Integer.MAX_VALUE;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ConfigurationClassPostProcessor가 생성되기전 반드시 수행되어야 하는 프로세서이다.</li>\n<li>HIGHEST_PRECEDENCE의 값은 Integer.MIN_VALUE</li>\n<li>register 수행시 BeanDefinitionRegistry에 BeanDefinition에<br />\n&quot;org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory&quot;으로 BeanDefinition 등록</li>\n</ul>\n<h4 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\"></a> </h4>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>An ApplicationStartingEvent is sent at the start of a run, but before any processing except the registration of listeners and initializers.</li>\n<li>An ApplicationEnvironmentPreparedEvent is sent when the Environment to be used in the context is known, but before the context is created.</li>\n<li>An ApplicationPreparedEvent is sent just before the refresh is started, but after bean definitions have been loaded.</li>\n<li>An ApplicationReadyEvent is sent after the refresh and any related callbacks have been processed to indicate the application is ready to service requests.</li>\n<li>An ApplicationFailedEvent is sent if there is an exception on startup.</li>\n</ol>\n<h3 id=\"1-sharedmetadatareaderfactorycontextinitializer\"><a class=\"markdownIt-Anchor\" href=\"#1-sharedmetadatareaderfactorycontextinitializer\"></a> 1. SharedMetadataReaderFactoryContextInitializer</h3>\n<ul>\n<li>initialize 함수가 호출되면 applicationContext에 PostProcessor로 CachingMetadataReaderFactoryPostProcessor를 등록한다.</li>\n</ul>\n<h4 id=\"cachingmetadatareaderfactorypostprocessor\"><a class=\"markdownIt-Anchor\" href=\"#cachingmetadatareaderfactorypostprocessor\"></a> CachingMetadataReaderFactoryPostProcessor</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Must happen before the ConfigurationClassPostProcessor is created</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Ordered.HIGHEST_PRECEDENCE;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Ordered</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> HIGHEST_PRECEDENCE = Integer.MIN_VALUE;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> LOWEST_PRECEDENCE = Integer.MAX_VALUE;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ConfigurationClassPostProcessor가 생성되기전 반드시 수행되어야 하는 프로세서이다.</li>\n<li>HIGHEST_PRECEDENCE의 값은 Integer.MIN_VALUE</li>\n<li>register 수행시 BeanDefinitionRegistry에 BeanDefinition에<br />\n&quot;org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory&quot;으로 BeanDefinition 등록</li>\n</ul>\n<h4 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\"></a> </h4>\n"},{"title":"spring_security_filter","date":"2019-11-21T07:07:05.000Z","_content":"\n|순서|제목|내용|\n|---|---|---|\n|1|WebAsyncManagerIntegrationFilter| 조사 요망|\n|2|SecurityContextPersistence Filter|Security Context Repository에서 SecurityContext를 로드하고 저장|\n|3|HeaderWriterFilter| 조사 요망|\n|4|Logout Filter|로그아웃 URL로 지정된 가상 URL에 대한 요청 감시, 매칭되면 로그아웃|\n|5|UsernamePasswordAuthenticationFilter|사용자명과 비밀번호로 이뤄진 폼 기반 인증 URL 확인 및 인증 진행|\n|6|RequestCacheAwareFilter|로그인 성공 이후 인증 요청에 의해 가로 채어진 사용자의 원래 요청을 재구성|\n|7|SecurityContextHolderAwareRequestFilter| 조사 요망|\n|8|AnonymousAuthenticationFilter|이 필터가 호출되는 시점까지 사용자가 아직 인증을 받지 못했다면 요청 관련 인증 토큰에서 사용자가 익명 사용자로 나타남|\n|9|SessionManagementFilter|인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련된 모든 세션 트래킹|\n|10|ExceptionTranslationFilter|발생하는 예외 처리 담당|\n|11|FilterSecurityFilter|권한부여 등 여러 결정을 AccessDecisionManager에게 위임해 최종 제어|\n\n하단은 타 블로그에서 참조\n\nSecurityContextPersistenceFilter\n\nSecurityContextRepository 에서 SecurityContext 를 로딩하거나 SecurityContextRepository 로 SecurityContext 를 저장하는 역할을 한다.SecurityContext 란 사용자의 보호및 인증된 세션을 의미한다.\n\n\n\nLogoutFilter\n\n로그아웃 URL(디폴트 값 : /j_spring_security_logout) 로의 요청을 감시하여 해당 사용자를 로그아웃 시킨다.\n\n\n\nUsernamePasswordAuthenticationFilter\n\nusername 과 password 를 사용하는 폼기반 인증 요청 URL(디폴트 값: /j_spring_security_check) 을 감시하여 사용자를 인증하는 역할을 한다. \n\n\n\nDefaultLoginPageGeneratingFilter\n\n폼또는 OpenID 기반 인증을 위한 로그인폼 URL(디폴트 값: /spring_security_login)을 감시하여 로그인폼을 생성한다.\n\n\n\nBasicAuthenticationFilter\n\n HTTP 기본 인증 헤더를 감시하여 처리한다.\n\n\n\nRequestCacheAwareFilter\n\n로그인 성공 후, 원래 요청 정보를 재구성하기 위해 사용됨\n\n\n\nSecurityContextHolderAwareRequestFilter\n\nHttpServletRequestWrapper 를 상속한 SecurityContextHolderAwareRequestWapper 클래스로 HttpServletRequest 정보를 감싼다. SecurityContextHolderAwareRequestWrapper 클래스는 필터 체인상의 다음 필터들에게 추가 정보를 제공한다.\n\n\n\nAnonymousAuthenticationFilter\n\n이 필터가 호출되는 시점까지 사용자 정보가 인증되지 않았다면 사용자가 익명이라는 것 나타내는 인증토큰이 요청과 관련지어 진다.\n\n\n\nSessionManagementFilter\n\n이 필터는 하나의 인증된 사용자와 관련된 모든 세션을 추적하고, 인증된 사용자 정보를 기반으로 세션을 추적을 처리한다.\n\n\n\nExceptionTranslationFilter\n\n이 필터는 보호된 요청을 처리하는 중에 발생하는 예상된 예외를 위임하거나 전달하는 역할을 한다.\n\n\n\nFilterSecurityInterceptor\n\n이 필터는 AccessDecisionManager 로 인증에 대한 결정권을 위임함으로써 인증허가 및  접근제어 결정을 용이하게 한다.\n","source":"_posts/spring-security-filter.md","raw":"---\ntitle: spring_security_filter\ndate: 2019-11-21 16:07:05\ntags:\n---\n\n|순서|제목|내용|\n|---|---|---|\n|1|WebAsyncManagerIntegrationFilter| 조사 요망|\n|2|SecurityContextPersistence Filter|Security Context Repository에서 SecurityContext를 로드하고 저장|\n|3|HeaderWriterFilter| 조사 요망|\n|4|Logout Filter|로그아웃 URL로 지정된 가상 URL에 대한 요청 감시, 매칭되면 로그아웃|\n|5|UsernamePasswordAuthenticationFilter|사용자명과 비밀번호로 이뤄진 폼 기반 인증 URL 확인 및 인증 진행|\n|6|RequestCacheAwareFilter|로그인 성공 이후 인증 요청에 의해 가로 채어진 사용자의 원래 요청을 재구성|\n|7|SecurityContextHolderAwareRequestFilter| 조사 요망|\n|8|AnonymousAuthenticationFilter|이 필터가 호출되는 시점까지 사용자가 아직 인증을 받지 못했다면 요청 관련 인증 토큰에서 사용자가 익명 사용자로 나타남|\n|9|SessionManagementFilter|인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련된 모든 세션 트래킹|\n|10|ExceptionTranslationFilter|발생하는 예외 처리 담당|\n|11|FilterSecurityFilter|권한부여 등 여러 결정을 AccessDecisionManager에게 위임해 최종 제어|\n\n하단은 타 블로그에서 참조\n\nSecurityContextPersistenceFilter\n\nSecurityContextRepository 에서 SecurityContext 를 로딩하거나 SecurityContextRepository 로 SecurityContext 를 저장하는 역할을 한다.SecurityContext 란 사용자의 보호및 인증된 세션을 의미한다.\n\n\n\nLogoutFilter\n\n로그아웃 URL(디폴트 값 : /j_spring_security_logout) 로의 요청을 감시하여 해당 사용자를 로그아웃 시킨다.\n\n\n\nUsernamePasswordAuthenticationFilter\n\nusername 과 password 를 사용하는 폼기반 인증 요청 URL(디폴트 값: /j_spring_security_check) 을 감시하여 사용자를 인증하는 역할을 한다. \n\n\n\nDefaultLoginPageGeneratingFilter\n\n폼또는 OpenID 기반 인증을 위한 로그인폼 URL(디폴트 값: /spring_security_login)을 감시하여 로그인폼을 생성한다.\n\n\n\nBasicAuthenticationFilter\n\n HTTP 기본 인증 헤더를 감시하여 처리한다.\n\n\n\nRequestCacheAwareFilter\n\n로그인 성공 후, 원래 요청 정보를 재구성하기 위해 사용됨\n\n\n\nSecurityContextHolderAwareRequestFilter\n\nHttpServletRequestWrapper 를 상속한 SecurityContextHolderAwareRequestWapper 클래스로 HttpServletRequest 정보를 감싼다. SecurityContextHolderAwareRequestWrapper 클래스는 필터 체인상의 다음 필터들에게 추가 정보를 제공한다.\n\n\n\nAnonymousAuthenticationFilter\n\n이 필터가 호출되는 시점까지 사용자 정보가 인증되지 않았다면 사용자가 익명이라는 것 나타내는 인증토큰이 요청과 관련지어 진다.\n\n\n\nSessionManagementFilter\n\n이 필터는 하나의 인증된 사용자와 관련된 모든 세션을 추적하고, 인증된 사용자 정보를 기반으로 세션을 추적을 처리한다.\n\n\n\nExceptionTranslationFilter\n\n이 필터는 보호된 요청을 처리하는 중에 발생하는 예상된 예외를 위임하거나 전달하는 역할을 한다.\n\n\n\nFilterSecurityInterceptor\n\n이 필터는 AccessDecisionManager 로 인증에 대한 결정권을 위임함으로써 인증허가 및  접근제어 결정을 용이하게 한다.\n","slug":"spring-security-filter","published":1,"updated":"2020-07-11T04:51:03.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo51670046qlvo4stwfqq5","content":"<table>\n<thead>\n<tr>\n<th>순서</th>\n<th>제목</th>\n<th>내용</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>WebAsyncManagerIntegrationFilter</td>\n<td>조사 요망</td>\n</tr>\n<tr>\n<td>2</td>\n<td>SecurityContextPersistence Filter</td>\n<td>Security Context Repository에서 SecurityContext를 로드하고 저장</td>\n</tr>\n<tr>\n<td>3</td>\n<td>HeaderWriterFilter</td>\n<td>조사 요망</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Logout Filter</td>\n<td>로그아웃 URL로 지정된 가상 URL에 대한 요청 감시, 매칭되면 로그아웃</td>\n</tr>\n<tr>\n<td>5</td>\n<td>UsernamePasswordAuthenticationFilter</td>\n<td>사용자명과 비밀번호로 이뤄진 폼 기반 인증 URL 확인 및 인증 진행</td>\n</tr>\n<tr>\n<td>6</td>\n<td>RequestCacheAwareFilter</td>\n<td>로그인 성공 이후 인증 요청에 의해 가로 채어진 사용자의 원래 요청을 재구성</td>\n</tr>\n<tr>\n<td>7</td>\n<td>SecurityContextHolderAwareRequestFilter</td>\n<td>조사 요망</td>\n</tr>\n<tr>\n<td>8</td>\n<td>AnonymousAuthenticationFilter</td>\n<td>이 필터가 호출되는 시점까지 사용자가 아직 인증을 받지 못했다면 요청 관련 인증 토큰에서 사용자가 익명 사용자로 나타남</td>\n</tr>\n<tr>\n<td>9</td>\n<td>SessionManagementFilter</td>\n<td>인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련된 모든 세션 트래킹</td>\n</tr>\n<tr>\n<td>10</td>\n<td>ExceptionTranslationFilter</td>\n<td>발생하는 예외 처리 담당</td>\n</tr>\n<tr>\n<td>11</td>\n<td>FilterSecurityFilter</td>\n<td>권한부여 등 여러 결정을 AccessDecisionManager에게 위임해 최종 제어</td>\n</tr>\n</tbody>\n</table>\n<p>하단은 타 블로그에서 참조</p>\n<p>SecurityContextPersistenceFilter</p>\n<p>SecurityContextRepository 에서 SecurityContext 를 로딩하거나 SecurityContextRepository 로 SecurityContext 를 저장하는 역할을 한다.SecurityContext 란 사용자의 보호및 인증된 세션을 의미한다.</p>\n<p>LogoutFilter</p>\n<p>로그아웃 URL(디폴트 값 : /j_spring_security_logout) 로의 요청을 감시하여 해당 사용자를 로그아웃 시킨다.</p>\n<p>UsernamePasswordAuthenticationFilter</p>\n<p>username 과 password 를 사용하는 폼기반 인증 요청 URL(디폴트 값: /j_spring_security_check) 을 감시하여 사용자를 인증하는 역할을 한다.</p>\n<p>DefaultLoginPageGeneratingFilter</p>\n<p>폼또는 OpenID 기반 인증을 위한 로그인폼 URL(디폴트 값: /spring_security_login)을 감시하여 로그인폼을 생성한다.</p>\n<p>BasicAuthenticationFilter</p>\n<p>HTTP 기본 인증 헤더를 감시하여 처리한다.</p>\n<p>RequestCacheAwareFilter</p>\n<p>로그인 성공 후, 원래 요청 정보를 재구성하기 위해 사용됨</p>\n<p>SecurityContextHolderAwareRequestFilter</p>\n<p>HttpServletRequestWrapper 를 상속한 SecurityContextHolderAwareRequestWapper 클래스로 HttpServletRequest 정보를 감싼다. SecurityContextHolderAwareRequestWrapper 클래스는 필터 체인상의 다음 필터들에게 추가 정보를 제공한다.</p>\n<p>AnonymousAuthenticationFilter</p>\n<p>이 필터가 호출되는 시점까지 사용자 정보가 인증되지 않았다면 사용자가 익명이라는 것 나타내는 인증토큰이 요청과 관련지어 진다.</p>\n<p>SessionManagementFilter</p>\n<p>이 필터는 하나의 인증된 사용자와 관련된 모든 세션을 추적하고, 인증된 사용자 정보를 기반으로 세션을 추적을 처리한다.</p>\n<p>ExceptionTranslationFilter</p>\n<p>이 필터는 보호된 요청을 처리하는 중에 발생하는 예상된 예외를 위임하거나 전달하는 역할을 한다.</p>\n<p>FilterSecurityInterceptor</p>\n<p>이 필터는 AccessDecisionManager 로 인증에 대한 결정권을 위임함으로써 인증허가 및  접근제어 결정을 용이하게 한다.</p>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>순서</th>\n<th>제목</th>\n<th>내용</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>WebAsyncManagerIntegrationFilter</td>\n<td>조사 요망</td>\n</tr>\n<tr>\n<td>2</td>\n<td>SecurityContextPersistence Filter</td>\n<td>Security Context Repository에서 SecurityContext를 로드하고 저장</td>\n</tr>\n<tr>\n<td>3</td>\n<td>HeaderWriterFilter</td>\n<td>조사 요망</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Logout Filter</td>\n<td>로그아웃 URL로 지정된 가상 URL에 대한 요청 감시, 매칭되면 로그아웃</td>\n</tr>\n<tr>\n<td>5</td>\n<td>UsernamePasswordAuthenticationFilter</td>\n<td>사용자명과 비밀번호로 이뤄진 폼 기반 인증 URL 확인 및 인증 진행</td>\n</tr>\n<tr>\n<td>6</td>\n<td>RequestCacheAwareFilter</td>\n<td>로그인 성공 이후 인증 요청에 의해 가로 채어진 사용자의 원래 요청을 재구성</td>\n</tr>\n<tr>\n<td>7</td>\n<td>SecurityContextHolderAwareRequestFilter</td>\n<td>조사 요망</td>\n</tr>\n<tr>\n<td>8</td>\n<td>AnonymousAuthenticationFilter</td>\n<td>이 필터가 호출되는 시점까지 사용자가 아직 인증을 받지 못했다면 요청 관련 인증 토큰에서 사용자가 익명 사용자로 나타남</td>\n</tr>\n<tr>\n<td>9</td>\n<td>SessionManagementFilter</td>\n<td>인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련된 모든 세션 트래킹</td>\n</tr>\n<tr>\n<td>10</td>\n<td>ExceptionTranslationFilter</td>\n<td>발생하는 예외 처리 담당</td>\n</tr>\n<tr>\n<td>11</td>\n<td>FilterSecurityFilter</td>\n<td>권한부여 등 여러 결정을 AccessDecisionManager에게 위임해 최종 제어</td>\n</tr>\n</tbody>\n</table>\n<p>하단은 타 블로그에서 참조</p>\n<p>SecurityContextPersistenceFilter</p>\n<p>SecurityContextRepository 에서 SecurityContext 를 로딩하거나 SecurityContextRepository 로 SecurityContext 를 저장하는 역할을 한다.SecurityContext 란 사용자의 보호및 인증된 세션을 의미한다.</p>\n<p>LogoutFilter</p>\n<p>로그아웃 URL(디폴트 값 : /j_spring_security_logout) 로의 요청을 감시하여 해당 사용자를 로그아웃 시킨다.</p>\n<p>UsernamePasswordAuthenticationFilter</p>\n<p>username 과 password 를 사용하는 폼기반 인증 요청 URL(디폴트 값: /j_spring_security_check) 을 감시하여 사용자를 인증하는 역할을 한다.</p>\n<p>DefaultLoginPageGeneratingFilter</p>\n<p>폼또는 OpenID 기반 인증을 위한 로그인폼 URL(디폴트 값: /spring_security_login)을 감시하여 로그인폼을 생성한다.</p>\n<p>BasicAuthenticationFilter</p>\n<p>HTTP 기본 인증 헤더를 감시하여 처리한다.</p>\n<p>RequestCacheAwareFilter</p>\n<p>로그인 성공 후, 원래 요청 정보를 재구성하기 위해 사용됨</p>\n<p>SecurityContextHolderAwareRequestFilter</p>\n<p>HttpServletRequestWrapper 를 상속한 SecurityContextHolderAwareRequestWapper 클래스로 HttpServletRequest 정보를 감싼다. SecurityContextHolderAwareRequestWrapper 클래스는 필터 체인상의 다음 필터들에게 추가 정보를 제공한다.</p>\n<p>AnonymousAuthenticationFilter</p>\n<p>이 필터가 호출되는 시점까지 사용자 정보가 인증되지 않았다면 사용자가 익명이라는 것 나타내는 인증토큰이 요청과 관련지어 진다.</p>\n<p>SessionManagementFilter</p>\n<p>이 필터는 하나의 인증된 사용자와 관련된 모든 세션을 추적하고, 인증된 사용자 정보를 기반으로 세션을 추적을 처리한다.</p>\n<p>ExceptionTranslationFilter</p>\n<p>이 필터는 보호된 요청을 처리하는 중에 발생하는 예상된 예외를 위임하거나 전달하는 역할을 한다.</p>\n<p>FilterSecurityInterceptor</p>\n<p>이 필터는 AccessDecisionManager 로 인증에 대한 결정권을 위임함으로써 인증허가 및  접근제어 결정을 용이하게 한다.</p>\n"},{"title":"spring-security-oauth2","date":"2020-03-29T23:12:02.000Z","_content":"\n## Spring-Security-oauth2 vs Spring Security \n- Group ID Spring Security 안의 ArtifactID로 oauth2로 이관되면서 Group ID가 security-oauth2 였던 OSS가 Deprecated 되었다.\n\n```yaml\nspring:\n  thymeleaf:\n    cache: false\n  security:\n    oauth2:\n      client:\n        registration:\n          messaging-client-auth-code:\n            provider: keycloak\n            client-id: messaging-client\n            client-secret: secret\n            authorization-grant-type: authorization_code\n            redirect-uri: \"{baseUrl}/authorized\"\n            scope: message.read,message.write\n          messaging-client-client-creds:\n            provider: keycloak\n            client-id: messaging-client\n            client-secret: secret\n            authorization-grant-type: client_credentials\n            scope: message.read,message.write\n          messaging-client-password:\n            provider: keycloak\n            client-id: messaging-client\n            client-secret: secret\n            authorization-grant-type: password\n            scope: message.read,message.write\n        provider:\n          keycloak:\n            authorization-uri: http://localhost:8090/auth/realms/oauth2-sample/protocol/openid-connect/auth\n            token-uri: http://localhost:8090/auth/realms/oauth2-sample/protocol/openid-connect/token\n\n```\n\n### ClientRegistration\n- Oauth 2.0 or OpenID Connect 1.0 Provider 들에 등록된 Client의 정보들을 적게된다.\n- client 정보에는 ID, Secret, authorization grant type, redirect URL... etc\n\n```java\npublic final class ClientRegistration implements Serializable {\n\tprivate static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;\n\tprivate String registrationId;\n\tprivate String clientId;\n\tprivate String clientSecret;\n\tprivate ClientAuthenticationMethod clientAuthenticationMethod = ClientAuthenticationMethod.BASIC;\n\tprivate AuthorizationGrantType authorizationGrantType;\n\tprivate String redirectUriTemplate;\n\tprivate Set<String> scopes = Collections.emptySet();\n\tprivate ProviderDetails providerDetails = new ProviderDetails();\n\tprivate String clientName;\n\n    public class ProviderDetails implements Serializable {\n        private static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;\n        private String authorizationUri;\n        private String tokenUri;\n        private UserInfoEndpoint userInfoEndpoint = new UserInfoEndpoint();\n        private String jwkSetUri;\n        private Map<String, Object> configurationMetadata = Collections.emptyMap();\n    }\n}\n```\n\n1. registrationId: The ID that uniquely identifies the ClientRegistration.\n2. clientId: The client identifier.\n3. clientSecret: The client secret.\n4. clientAuthenticationMethod: The method used to authenticate the Client with the Provider. The supported values are basic, post and none (public clients).\n5. authorizationGrantType: The OAuth 2.0 Authorization Framework defines four Authorization Grant types. The supported values are authorization_code, client_credentials and password.\n6. redirectUriTemplate: The client’s registered redirect URI that the Authorization Server redirects the end-user’s user-agent to after the end-user has authenticated and authorized access to the client.\n7. scopes: The scope(s) requested by the client during the Authorization Request flow, such as openid, email, or profile.\n8. clientName: A descriptive name used for the client. The name may be used in certain scenarios, such as when displaying the name of the client in the auto-generated login page.\n9. authorizationUri: The Authorization Endpoint URI for the Authorization Server.\n10. tokenUri: The Token Endpoint URI for the Authorization Server.\n11. jwkSetUri: The URI used to retrieve the JSON Web Key (JWK) Set from the Authorization Server, which contains the cryptographic key(s) used to verify the JSON Web Signature (JWS) of the ID Token and optionally the UserInfo Response.\n12. configurationMetadata: The OpenID Provider Configuration Information. This information will only be available if the Spring Boot 2.x property spring.security.oauth2.client.provider.[providerId].issuerUri is configured.\n13. (userInfoEndpoint)uri: The UserInfo Endpoint URI used to access the claims/attributes of the authenticated end-user.\n14. (userInfoEndpoint)authenticationMethod: The authentication method used when sending the access token to the UserInfo Endpoint. The supported values are header, form and query.\n15. userNameAttributeName: The name of the attribute returned in the UserInfo Response that references the Name or Identifier of the end-user.\n\n> Endpoint 별 초기화\n>  > OpenID Connect Provider : configuration endpoint\n>  > OAuth2.0 : Metadata endpoint\n\n### ClientRegistrationRepository\n\n```java\npublic final class InMemoryClientRegistrationRepository implements ClientRegistrationRepository, Iterable<ClientRegistration> {\n\tprivate final Map<String, ClientRegistration> registrations;\n\n\t@Override\n\tpublic ClientRegistration findByRegistrationId(String registrationId) {\n\t\tAssert.hasText(registrationId, \"registrationId cannot be empty\");\n\t\treturn this.registrations.get(registrationId);\n\t}\n}\n```\n\n- Default 구현체는 InMemoryClientRegistrationRepository 이다.\n- Map으로 ClientRegistration 들을 가지고 있으며, 해당 registrationId 로 ClientRegistration을 찾을수 있는 기능을 제공한다.\n- Spring boot 2.x auto-configuration은 spring.security.oauth2.client.registration.[registrationId] 의 형태로 바인드를 자동으로 해놓는다.\n- 또한 ClientRegistrationRepository라는 이름으로 Bean 등록을 해놓았기 때문에 Inject 받아서 사용가능하다.\n\n### OAuthAuthorizedClient\n- Authorized Client를 표현한다.\n- Authorized Client는 보호되는 자원에 대한 Access 권한을 받은 것으로 간주된다.\n- Oauth2AuthorizedClient 는 ClientRegistration과 Resource Owner(End-user) 간 OAuth2AccessToken, OAuth2RefreshToken을 연결시켜준다.\n\n```java\npublic class OAuth2AuthorizedClient implements Serializable {\n\tprivate static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;\n\tprivate final ClientRegistration clientRegistration;\n\tprivate final String principalName;\n\tprivate final OAuth2AccessToken accessToken;\n\tprivate final OAuth2RefreshToken refreshToken;\n}\n```\n\n### OAuth2AuthorizedClientRepository\n\n```java\npublic final class AuthenticatedPrincipalOAuth2AuthorizedClientRepository implements OAuth2AuthorizedClientRepository {\n\tprivate final AuthenticationTrustResolver authenticationTrustResolver = new AuthenticationTrustResolverImpl();\n\tprivate final OAuth2AuthorizedClientService authorizedClientService;\n\tprivate OAuth2AuthorizedClientRepository anonymousAuthorizedClientRepository = new HttpSessionOAuth2AuthorizedClientRepository();\n\n\t@Override\n\tpublic <T extends OAuth2AuthorizedClient> T loadAuthorizedClient(String clientRegistrationId, Authentication principal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHttpServletRequest request) {\n\t\tif (this.isPrincipalAuthenticated(principal)) {\n\t\t\treturn this.authorizedClientService.loadAuthorizedClient(clientRegistrationId, principal.getName());\n\t\t} else {\n\t\t\treturn this.anonymousAuthorizedClientRepository.loadAuthorizedClient(clientRegistrationId, principal, request);\n\t\t}\n\t}\n\t@Override\n\tpublic void saveAuthorizedClient(OAuth2AuthorizedClient authorizedClient, Authentication principal,\n\t\t\t\t\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tif (this.isPrincipalAuthenticated(principal)) {\n\t\t\tthis.authorizedClientService.saveAuthorizedClient(authorizedClient, principal);\n\t\t} else {\n\t\t\tthis.anonymousAuthorizedClientRepository.saveAuthorizedClient(authorizedClient, principal, request, response);\n\t\t}\n\t}\n\n\t@Override\n\tpublic void removeAuthorizedClient(String clientRegistrationId, Authentication principal,\n\t\t\t\t\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tif (this.isPrincipalAuthenticated(principal)) {\n\t\t\tthis.authorizedClientService.removeAuthorizedClient(clientRegistrationId, principal.getName());\n\t\t} else {\n\t\t\tthis.anonymousAuthorizedClientRepository.removeAuthorizedClient(clientRegistrationId, principal, request, response);\n\t\t}\n\t}\n\n\tprivate boolean isPrincipalAuthenticated(Authentication authentication) {\n\t\treturn authentication != null &&\n\t\t\t\t!this.authenticationTrustResolver.isAnonymous(authentication) &&\n\t\t\t\tauthentication.isAuthenticated();\n\t}\n}\n```\n\n- AuthenticationTrustResolver에 질의해 인증된 사용자라면 service에 요청하고 아니면 anonymousAuthorizedClientRepository에 요청한다.\n- OAuth2AuthorizationCodeAuthenticationToken으로 인증을 진행한다.\n- Session Attribute Name = org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizedClientRepository.AUTHORIZED_CLIENTS \n- 내부에 anonymousAuthorizedClientRepository로 HttpSessionOAuth2AuthorizedClientRepository을 가지고 있다.\n- 해당 Session Attribute Name으로 AuthorizedClient들을 저장하고 있다.\n\n\n### AuthenticationTrustResolver\n\n```java\npublic class AuthenticationTrustResolverImpl implements AuthenticationTrustResolver {\n\tprivate Class<? extends Authentication> anonymousClass = AnonymousAuthenticationToken.class;\n\tprivate Class<? extends Authentication> rememberMeClass = RememberMeAuthenticationToken.class;\n\n\tClass<? extends Authentication> getAnonymousClass() {\n\t\treturn anonymousClass;\n\t}\n\n\tClass<? extends Authentication> getRememberMeClass() {\n\t\treturn rememberMeClass;\n\t}\n\n\tpublic boolean isAnonymous(Authentication authentication) {\n\t\tif ((anonymousClass == null) || (authentication == null)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn anonymousClass.isAssignableFrom(authentication.getClass());\n\t}\n\n\tpublic boolean isRememberMe(Authentication authentication) {\n\t\tif ((rememberMeClass == null) || (authentication == null)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn rememberMeClass.isAssignableFrom(authentication.getClass());\n\t}\n\n\tpublic void setAnonymousClass(Class<? extends Authentication> anonymousClass) {\n\t\tthis.anonymousClass = anonymousClass;\n\t}\n\n\tpublic void setRememberMeClass(Class<? extends Authentication> rememberMeClass) {\n\t\tthis.rememberMeClass = rememberMeClass;\n\t}\n}\n```\n- Anonymous, RememberMe 를 구현하고 할당이 가능한지에 따라 True, False를 반환한다.\n\n\n### OAuth2AuthorizedClientService\n\n``` java\npublic final class InMemoryOAuth2AuthorizedClientService implements OAuth2AuthorizedClientService {\n\tprivate final Map<OAuth2AuthorizedClientId, OAuth2AuthorizedClient> authorizedClients;\n\tprivate final ClientRegistrationRepository clientRegistrationRepository;\n\n\tpublic InMemoryOAuth2AuthorizedClientService(ClientRegistrationRepository clientRegistrationRepository) {\n\t\tAssert.notNull(clientRegistrationRepository, \"clientRegistrationRepository cannot be null\");\n\t\tthis.clientRegistrationRepository = clientRegistrationRepository;\n\t\tthis.authorizedClients = new ConcurrentHashMap<>();\n\t}\n\n\tpublic InMemoryOAuth2AuthorizedClientService(ClientRegistrationRepository clientRegistrationRepository,\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap<OAuth2AuthorizedClientId, OAuth2AuthorizedClient> authorizedClients) {\n\t\tAssert.notNull(clientRegistrationRepository, \"clientRegistrationRepository cannot be null\");\n\t\tAssert.notEmpty(authorizedClients, \"authorizedClients cannot be empty\");\n\t\tthis.clientRegistrationRepository = clientRegistrationRepository;\n\t\tthis.authorizedClients = new ConcurrentHashMap<>(authorizedClients);\n\t}\n\n\t@Override\n\t@SuppressWarnings(\"unchecked\")\n\tpublic <T extends OAuth2AuthorizedClient> T loadAuthorizedClient(String clientRegistrationId, String principalName) {\n\t\tAssert.hasText(clientRegistrationId, \"clientRegistrationId cannot be empty\");\n\t\tAssert.hasText(principalName, \"principalName cannot be empty\");\n\t\tClientRegistration registration = this.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);\n\t\tif (registration == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (T) this.authorizedClients.get(new OAuth2AuthorizedClientId(clientRegistrationId, principalName));\n\t}\n\n\t@Override\n\tpublic void saveAuthorizedClient(OAuth2AuthorizedClient authorizedClient, Authentication principal) {\n\t\tAssert.notNull(authorizedClient, \"authorizedClient cannot be null\");\n\t\tAssert.notNull(principal, \"principal cannot be null\");\n\t\tthis.authorizedClients.put(new OAuth2AuthorizedClientId(authorizedClient.getClientRegistration().getRegistrationId(),\n\t\t\t\tprincipal.getName()), authorizedClient);\n\t}\n\n\t@Override\n\tpublic void removeAuthorizedClient(String clientRegistrationId, String principalName) {\n\t\tAssert.hasText(clientRegistrationId, \"clientRegistrationId cannot be empty\");\n\t\tAssert.hasText(principalName, \"principalName cannot be empty\");\n\t\tClientRegistration registration = this.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);\n\t\tif (registration != null) {\n\t\t\tthis.authorizedClients.remove(new OAuth2AuthorizedClientId(clientRegistrationId, principalName));\n\t\t}\n\t}\n}\n```\n\n- ClientRegistrationRepository를 가지고 있고, 해당 Repository에 CRUD를 하는 기능들을 가지고 있다.\n- Bean으로 선언되어 있어 Application레벨에서 사용이 용이하게 되어있다.\n\n### OAuth2AuthorizedClientManager\n\n```java\npublic final class DefaultOAuth2AuthorizedClientManager implements OAuth2AuthorizedClientManager {\n\tprivate final ClientRegistrationRepository clientRegistrationRepository;\n\tprivate final OAuth2AuthorizedClientRepository authorizedClientRepository;\n\tprivate OAuth2AuthorizedClientProvider authorizedClientProvider = context -> null;\n\tprivate Function<OAuth2AuthorizeRequest, Map<String, Object>> contextAttributesMapper = new DefaultContextAttributesMapper();\n\n\t@Nullable\n\t@Override\n\tpublic OAuth2AuthorizedClient authorize(OAuth2AuthorizeRequest authorizeRequest) {\n\t\tAssert.notNull(authorizeRequest, \"authorizeRequest cannot be null\");\n\n\t\tString clientRegistrationId = authorizeRequest.getClientRegistrationId();\n\t\tOAuth2AuthorizedClient authorizedClient = authorizeRequest.getAuthorizedClient();\n\t\tAuthentication principal = authorizeRequest.getPrincipal();\n\n\t\tHttpServletRequest servletRequest = getHttpServletRequestOrDefault(authorizeRequest.getAttributes());\n\t\tAssert.notNull(servletRequest, \"servletRequest cannot be null\");\n\t\tHttpServletResponse servletResponse = getHttpServletResponseOrDefault(authorizeRequest.getAttributes());\n\t\tAssert.notNull(servletResponse, \"servletResponse cannot be null\");\n\n\t\tOAuth2AuthorizationContext.Builder contextBuilder;\n\t\tif (authorizedClient != null) {\n\t\t\tcontextBuilder = OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient);\n\t\t} else {\n\t\t\tClientRegistration clientRegistration = this.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);\n\t\t\tAssert.notNull(clientRegistration, \"Could not find ClientRegistration with id '\" + clientRegistrationId + \"'\");\n\t\t\tauthorizedClient = this.authorizedClientRepository.loadAuthorizedClient(\n\t\t\t\t\tclientRegistrationId, principal, servletRequest);\n\t\t\tif (authorizedClient != null) {\n\t\t\t\tcontextBuilder = OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient);\n\t\t\t} else {\n\t\t\t\tcontextBuilder = OAuth2AuthorizationContext.withClientRegistration(clientRegistration);\n\t\t\t}\n\t\t}\n\t\tOAuth2AuthorizationContext authorizationContext = contextBuilder\n\t\t\t\t.principal(principal)\n\t\t\t\t.attributes(attributes -> {\n\t\t\t\t\tMap<String, Object> contextAttributes = this.contextAttributesMapper.apply(authorizeRequest);\n\t\t\t\t\tif (!CollectionUtils.isEmpty(contextAttributes)) {\n\t\t\t\t\t\tattributes.putAll(contextAttributes);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.build();\n\n\t\tauthorizedClient = this.authorizedClientProvider.authorize(authorizationContext);\n\t\tif (authorizedClient != null) {\n\t\t\tthis.authorizedClientRepository.saveAuthorizedClient(authorizedClient, principal, servletRequest, servletResponse);\n\t\t} else {\n\t\t\t// In the case of re-authorization, the returned `authorizedClient` may be null if re-authorization is not supported.\n\t\t\t// For these cases, return the provided `authorizationContext.authorizedClient`.\n\t\t\tif (authorizationContext.getAuthorizedClient() != null) {\n\t\t\t\treturn authorizationContext.getAuthorizedClient();\n\t\t\t}\n\t\t}\n\n\t\treturn authorizedClient;\n\t}\n}\n```\n\n- 내부에 ClientRegistrationRepository로는 InMemoryClientRegistrationRepository를 가지고 있다.\n- 내부에 AuthorizedClientRepository로 AuthenticatedPrincipalOAuth2AuthorizedClientRepository를 가지고 있다.\n- 내부에 AuthenticationProvider로 DelegatingOAuth2AuthorizedClientProvider를 가지고 있다.\n    - DelegatingOAuth2AuthorizedClientProvider는 Config에서 선언한 GrantType에 해당하는 Provider들을 전부 가지고 있다.\n- The DefaultOAuth2AuthorizedClientManager is designed to be used within the context of a HttpServletRequest. \n  When operating outside of a HttpServletRequest context, use AuthorizedClientServiceOAuth2AuthorizedClientManager instead.\n\n### OAuth2AuthorizedClientProvider\n\n- 각 GrantType에 따른 인증 방식이 들어있다.\n- 인증을 하는 조건이 맞지 않으면 Throw Exception을 던진다.\n\n### OAuth2AuthorizationRequestRedirectFilter\n\n```Java\npublic class OAuth2AuthorizationRequestRedirectFilter extends OncePerRequestFilter {\n\tpublic static final String DEFAULT_AUTHORIZATION_REQUEST_BASE_URI = \"/oauth2/authorization\";\n\tprivate final ThrowableAnalyzer throwableAnalyzer = new DefaultThrowableAnalyzer();\n\tprivate final RedirectStrategy authorizationRedirectStrategy = new DefaultRedirectStrategy();\n\tprivate OAuth2AuthorizationRequestResolver authorizationRequestResolver;\n\tprivate AuthorizationRequestRepository<OAuth2AuthorizationRequest> authorizationRequestRepository =\n\t\tnew HttpSessionOAuth2AuthorizationRequestRepository();\n\tprivate RequestCache requestCache = new HttpSessionRequestCache();\n\n\tpublic OAuth2AuthorizationRequestRedirectFilter(ClientRegistrationRepository clientRegistrationRepository) {\n\t\tthis(clientRegistrationRepository, DEFAULT_AUTHORIZATION_REQUEST_BASE_URI);\n\t}\n\n\tpublic OAuth2AuthorizationRequestRedirectFilter(ClientRegistrationRepository clientRegistrationRepository, String authorizationRequestBaseUri) {\n\t\tAssert.notNull(clientRegistrationRepository, \"clientRegistrationRepository cannot be null\");\n\t\tAssert.hasText(authorizationRequestBaseUri, \"authorizationRequestBaseUri cannot be empty\");\n\t\tthis.authorizationRequestResolver = new DefaultOAuth2AuthorizationRequestResolver(\n\t\t\t\tclientRegistrationRepository, authorizationRequestBaseUri);\n\t}\n\n\tpublic OAuth2AuthorizationRequestRedirectFilter(OAuth2AuthorizationRequestResolver authorizationRequestResolver) {\n\t\tAssert.notNull(authorizationRequestResolver, \"authorizationRequestResolver cannot be null\");\n\t\tthis.authorizationRequestResolver = authorizationRequestResolver;\n\t}\n\n\tpublic final void setAuthorizationRequestRepository(AuthorizationRequestRepository<OAuth2AuthorizationRequest> authorizationRequestRepository) {\n\t\tAssert.notNull(authorizationRequestRepository, \"authorizationRequestRepository cannot be null\");\n\t\tthis.authorizationRequestRepository = authorizationRequestRepository;\n\t}\n\n\tpublic final void setRequestCache(RequestCache requestCache) {\n\t\tAssert.notNull(requestCache, \"requestCache cannot be null\");\n\t\tthis.requestCache = requestCache;\n\t}\n\n\t@Override\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n\t\t\tthrows ServletException, IOException {\n\n\t\ttry {\n\t\t\tOAuth2AuthorizationRequest authorizationRequest = this.authorizationRequestResolver.resolve(request);\n\t\t\tif (authorizationRequest != null) {\n\t\t\t\tthis.sendRedirectForAuthorization(request, response, authorizationRequest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (Exception failed) {\n\t\t\tthis.unsuccessfulRedirectForAuthorization(request, response, failed);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tfilterChain.doFilter(request, response);\n\t\t} catch (IOException ex) {\n\t\t\tthrow ex;\n\t\t} catch (Exception ex) {\n\t\t\t// Check to see if we need to handle ClientAuthorizationRequiredException\n\t\t\tThrowable[] causeChain = this.throwableAnalyzer.determineCauseChain(ex);\n\t\t\tClientAuthorizationRequiredException authzEx = (ClientAuthorizationRequiredException) this.throwableAnalyzer\n\t\t\t\t.getFirstThrowableOfType(ClientAuthorizationRequiredException.class, causeChain);\n\t\t\tif (authzEx != null) {\n\t\t\t\ttry {\n\t\t\t\t\tOAuth2AuthorizationRequest authorizationRequest = this.authorizationRequestResolver.resolve(request, authzEx.getClientRegistrationId());\n\t\t\t\t\tif (authorizationRequest == null) {\n\t\t\t\t\t\tthrow authzEx;\n\t\t\t\t\t}\n\t\t\t\t\tthis.sendRedirectForAuthorization(request, response, authorizationRequest);\n\t\t\t\t\tthis.requestCache.saveRequest(request, response);\n\t\t\t\t} catch (Exception failed) {\n\t\t\t\t\tthis.unsuccessfulRedirectForAuthorization(request, response, failed);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (ex instanceof ServletException) {\n\t\t\t\tthrow (ServletException) ex;\n\t\t\t} else if (ex instanceof RuntimeException) {\n\t\t\t\tthrow (RuntimeException) ex;\n\t\t\t} else {\n\t\t\t\tthrow new RuntimeException(ex);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void sendRedirectForAuthorization(HttpServletRequest request, HttpServletResponse response, OAuth2AuthorizationRequest authorizationRequest) throws IOException {\n\n\t\tif (AuthorizationGrantType.AUTHORIZATION_CODE.equals(authorizationRequest.getGrantType())) {\n\t\t\tthis.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest, request, response);\n\t\t}\n\t\tthis.authorizationRedirectStrategy.sendRedirect(request, response, authorizationRequest.getAuthorizationRequestUri());\n\t}\n\n\tprivate void unsuccessfulRedirectForAuthorization(HttpServletRequest request, HttpServletResponse response,\tException failed) throws IOException {\n\n\t\tif (logger.isErrorEnabled()) {\n\t\t\tlogger.error(\"Authorization Request failed: \" + failed.toString(), failed);\n\t\t}\n\t\tresponse.sendError(HttpStatus.INTERNAL_SERVER_ERROR.value(), HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n\t}\n\n\tprivate static final class DefaultThrowableAnalyzer extends ThrowableAnalyzer {\n\t\tprotected void initExtractorMap() {\n\t\t\tsuper.initExtractorMap();\n\t\t\tregisterExtractor(ServletException.class, throwable -> {\n\t\t\t\tThrowableAnalyzer.verifyThrowableHierarchy(throwable, ServletException.class);\n\t\t\t\treturn ((ServletException) throwable).getRootCause();\n\t\t\t});\n\t\t}\n\t}\n}\n```\n\n### OAuth2AuthorizationCodeGrantFilter\n```text\n\n0. WebAsyncManagerIntegrationFilter \n1. SecurityContextPersistenceFilter@6814 \n2. HeaderWriterFilter\n3. CsrfFilter\n4. LogoutFilter \n\n5. OAuth2AuthorizationRequestRedirectFilter \n\n6. UsernamePasswordAuthenticationFilter \n7. RequestCacheAwareFilter \n8. SecurityContextHolderAwareRequestFilter \n9. AnonymousAuthenticationFilter \n\n10. OAuth2AuthorizationCodeGrantFilter \n\n11. SessionManagementFilter \n12. ExceptionTranslationFilter \n13. FilterSecurityInterceptor \n\n```\n\n### authorizationRedirectStrategy : DefaultRedirectStrategy\n\n### DefaultOauth2AuthorizationRequestResolver","source":"_posts/spring-security-oauth2.md","raw":"---\ntitle: spring-security-oauth2\ndate: 2020-03-30 08:12:02\ntags:\n---\n\n## Spring-Security-oauth2 vs Spring Security \n- Group ID Spring Security 안의 ArtifactID로 oauth2로 이관되면서 Group ID가 security-oauth2 였던 OSS가 Deprecated 되었다.\n\n```yaml\nspring:\n  thymeleaf:\n    cache: false\n  security:\n    oauth2:\n      client:\n        registration:\n          messaging-client-auth-code:\n            provider: keycloak\n            client-id: messaging-client\n            client-secret: secret\n            authorization-grant-type: authorization_code\n            redirect-uri: \"{baseUrl}/authorized\"\n            scope: message.read,message.write\n          messaging-client-client-creds:\n            provider: keycloak\n            client-id: messaging-client\n            client-secret: secret\n            authorization-grant-type: client_credentials\n            scope: message.read,message.write\n          messaging-client-password:\n            provider: keycloak\n            client-id: messaging-client\n            client-secret: secret\n            authorization-grant-type: password\n            scope: message.read,message.write\n        provider:\n          keycloak:\n            authorization-uri: http://localhost:8090/auth/realms/oauth2-sample/protocol/openid-connect/auth\n            token-uri: http://localhost:8090/auth/realms/oauth2-sample/protocol/openid-connect/token\n\n```\n\n### ClientRegistration\n- Oauth 2.0 or OpenID Connect 1.0 Provider 들에 등록된 Client의 정보들을 적게된다.\n- client 정보에는 ID, Secret, authorization grant type, redirect URL... etc\n\n```java\npublic final class ClientRegistration implements Serializable {\n\tprivate static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;\n\tprivate String registrationId;\n\tprivate String clientId;\n\tprivate String clientSecret;\n\tprivate ClientAuthenticationMethod clientAuthenticationMethod = ClientAuthenticationMethod.BASIC;\n\tprivate AuthorizationGrantType authorizationGrantType;\n\tprivate String redirectUriTemplate;\n\tprivate Set<String> scopes = Collections.emptySet();\n\tprivate ProviderDetails providerDetails = new ProviderDetails();\n\tprivate String clientName;\n\n    public class ProviderDetails implements Serializable {\n        private static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;\n        private String authorizationUri;\n        private String tokenUri;\n        private UserInfoEndpoint userInfoEndpoint = new UserInfoEndpoint();\n        private String jwkSetUri;\n        private Map<String, Object> configurationMetadata = Collections.emptyMap();\n    }\n}\n```\n\n1. registrationId: The ID that uniquely identifies the ClientRegistration.\n2. clientId: The client identifier.\n3. clientSecret: The client secret.\n4. clientAuthenticationMethod: The method used to authenticate the Client with the Provider. The supported values are basic, post and none (public clients).\n5. authorizationGrantType: The OAuth 2.0 Authorization Framework defines four Authorization Grant types. The supported values are authorization_code, client_credentials and password.\n6. redirectUriTemplate: The client’s registered redirect URI that the Authorization Server redirects the end-user’s user-agent to after the end-user has authenticated and authorized access to the client.\n7. scopes: The scope(s) requested by the client during the Authorization Request flow, such as openid, email, or profile.\n8. clientName: A descriptive name used for the client. The name may be used in certain scenarios, such as when displaying the name of the client in the auto-generated login page.\n9. authorizationUri: The Authorization Endpoint URI for the Authorization Server.\n10. tokenUri: The Token Endpoint URI for the Authorization Server.\n11. jwkSetUri: The URI used to retrieve the JSON Web Key (JWK) Set from the Authorization Server, which contains the cryptographic key(s) used to verify the JSON Web Signature (JWS) of the ID Token and optionally the UserInfo Response.\n12. configurationMetadata: The OpenID Provider Configuration Information. This information will only be available if the Spring Boot 2.x property spring.security.oauth2.client.provider.[providerId].issuerUri is configured.\n13. (userInfoEndpoint)uri: The UserInfo Endpoint URI used to access the claims/attributes of the authenticated end-user.\n14. (userInfoEndpoint)authenticationMethod: The authentication method used when sending the access token to the UserInfo Endpoint. The supported values are header, form and query.\n15. userNameAttributeName: The name of the attribute returned in the UserInfo Response that references the Name or Identifier of the end-user.\n\n> Endpoint 별 초기화\n>  > OpenID Connect Provider : configuration endpoint\n>  > OAuth2.0 : Metadata endpoint\n\n### ClientRegistrationRepository\n\n```java\npublic final class InMemoryClientRegistrationRepository implements ClientRegistrationRepository, Iterable<ClientRegistration> {\n\tprivate final Map<String, ClientRegistration> registrations;\n\n\t@Override\n\tpublic ClientRegistration findByRegistrationId(String registrationId) {\n\t\tAssert.hasText(registrationId, \"registrationId cannot be empty\");\n\t\treturn this.registrations.get(registrationId);\n\t}\n}\n```\n\n- Default 구현체는 InMemoryClientRegistrationRepository 이다.\n- Map으로 ClientRegistration 들을 가지고 있으며, 해당 registrationId 로 ClientRegistration을 찾을수 있는 기능을 제공한다.\n- Spring boot 2.x auto-configuration은 spring.security.oauth2.client.registration.[registrationId] 의 형태로 바인드를 자동으로 해놓는다.\n- 또한 ClientRegistrationRepository라는 이름으로 Bean 등록을 해놓았기 때문에 Inject 받아서 사용가능하다.\n\n### OAuthAuthorizedClient\n- Authorized Client를 표현한다.\n- Authorized Client는 보호되는 자원에 대한 Access 권한을 받은 것으로 간주된다.\n- Oauth2AuthorizedClient 는 ClientRegistration과 Resource Owner(End-user) 간 OAuth2AccessToken, OAuth2RefreshToken을 연결시켜준다.\n\n```java\npublic class OAuth2AuthorizedClient implements Serializable {\n\tprivate static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;\n\tprivate final ClientRegistration clientRegistration;\n\tprivate final String principalName;\n\tprivate final OAuth2AccessToken accessToken;\n\tprivate final OAuth2RefreshToken refreshToken;\n}\n```\n\n### OAuth2AuthorizedClientRepository\n\n```java\npublic final class AuthenticatedPrincipalOAuth2AuthorizedClientRepository implements OAuth2AuthorizedClientRepository {\n\tprivate final AuthenticationTrustResolver authenticationTrustResolver = new AuthenticationTrustResolverImpl();\n\tprivate final OAuth2AuthorizedClientService authorizedClientService;\n\tprivate OAuth2AuthorizedClientRepository anonymousAuthorizedClientRepository = new HttpSessionOAuth2AuthorizedClientRepository();\n\n\t@Override\n\tpublic <T extends OAuth2AuthorizedClient> T loadAuthorizedClient(String clientRegistrationId, Authentication principal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHttpServletRequest request) {\n\t\tif (this.isPrincipalAuthenticated(principal)) {\n\t\t\treturn this.authorizedClientService.loadAuthorizedClient(clientRegistrationId, principal.getName());\n\t\t} else {\n\t\t\treturn this.anonymousAuthorizedClientRepository.loadAuthorizedClient(clientRegistrationId, principal, request);\n\t\t}\n\t}\n\t@Override\n\tpublic void saveAuthorizedClient(OAuth2AuthorizedClient authorizedClient, Authentication principal,\n\t\t\t\t\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tif (this.isPrincipalAuthenticated(principal)) {\n\t\t\tthis.authorizedClientService.saveAuthorizedClient(authorizedClient, principal);\n\t\t} else {\n\t\t\tthis.anonymousAuthorizedClientRepository.saveAuthorizedClient(authorizedClient, principal, request, response);\n\t\t}\n\t}\n\n\t@Override\n\tpublic void removeAuthorizedClient(String clientRegistrationId, Authentication principal,\n\t\t\t\t\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tif (this.isPrincipalAuthenticated(principal)) {\n\t\t\tthis.authorizedClientService.removeAuthorizedClient(clientRegistrationId, principal.getName());\n\t\t} else {\n\t\t\tthis.anonymousAuthorizedClientRepository.removeAuthorizedClient(clientRegistrationId, principal, request, response);\n\t\t}\n\t}\n\n\tprivate boolean isPrincipalAuthenticated(Authentication authentication) {\n\t\treturn authentication != null &&\n\t\t\t\t!this.authenticationTrustResolver.isAnonymous(authentication) &&\n\t\t\t\tauthentication.isAuthenticated();\n\t}\n}\n```\n\n- AuthenticationTrustResolver에 질의해 인증된 사용자라면 service에 요청하고 아니면 anonymousAuthorizedClientRepository에 요청한다.\n- OAuth2AuthorizationCodeAuthenticationToken으로 인증을 진행한다.\n- Session Attribute Name = org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizedClientRepository.AUTHORIZED_CLIENTS \n- 내부에 anonymousAuthorizedClientRepository로 HttpSessionOAuth2AuthorizedClientRepository을 가지고 있다.\n- 해당 Session Attribute Name으로 AuthorizedClient들을 저장하고 있다.\n\n\n### AuthenticationTrustResolver\n\n```java\npublic class AuthenticationTrustResolverImpl implements AuthenticationTrustResolver {\n\tprivate Class<? extends Authentication> anonymousClass = AnonymousAuthenticationToken.class;\n\tprivate Class<? extends Authentication> rememberMeClass = RememberMeAuthenticationToken.class;\n\n\tClass<? extends Authentication> getAnonymousClass() {\n\t\treturn anonymousClass;\n\t}\n\n\tClass<? extends Authentication> getRememberMeClass() {\n\t\treturn rememberMeClass;\n\t}\n\n\tpublic boolean isAnonymous(Authentication authentication) {\n\t\tif ((anonymousClass == null) || (authentication == null)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn anonymousClass.isAssignableFrom(authentication.getClass());\n\t}\n\n\tpublic boolean isRememberMe(Authentication authentication) {\n\t\tif ((rememberMeClass == null) || (authentication == null)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn rememberMeClass.isAssignableFrom(authentication.getClass());\n\t}\n\n\tpublic void setAnonymousClass(Class<? extends Authentication> anonymousClass) {\n\t\tthis.anonymousClass = anonymousClass;\n\t}\n\n\tpublic void setRememberMeClass(Class<? extends Authentication> rememberMeClass) {\n\t\tthis.rememberMeClass = rememberMeClass;\n\t}\n}\n```\n- Anonymous, RememberMe 를 구현하고 할당이 가능한지에 따라 True, False를 반환한다.\n\n\n### OAuth2AuthorizedClientService\n\n``` java\npublic final class InMemoryOAuth2AuthorizedClientService implements OAuth2AuthorizedClientService {\n\tprivate final Map<OAuth2AuthorizedClientId, OAuth2AuthorizedClient> authorizedClients;\n\tprivate final ClientRegistrationRepository clientRegistrationRepository;\n\n\tpublic InMemoryOAuth2AuthorizedClientService(ClientRegistrationRepository clientRegistrationRepository) {\n\t\tAssert.notNull(clientRegistrationRepository, \"clientRegistrationRepository cannot be null\");\n\t\tthis.clientRegistrationRepository = clientRegistrationRepository;\n\t\tthis.authorizedClients = new ConcurrentHashMap<>();\n\t}\n\n\tpublic InMemoryOAuth2AuthorizedClientService(ClientRegistrationRepository clientRegistrationRepository,\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap<OAuth2AuthorizedClientId, OAuth2AuthorizedClient> authorizedClients) {\n\t\tAssert.notNull(clientRegistrationRepository, \"clientRegistrationRepository cannot be null\");\n\t\tAssert.notEmpty(authorizedClients, \"authorizedClients cannot be empty\");\n\t\tthis.clientRegistrationRepository = clientRegistrationRepository;\n\t\tthis.authorizedClients = new ConcurrentHashMap<>(authorizedClients);\n\t}\n\n\t@Override\n\t@SuppressWarnings(\"unchecked\")\n\tpublic <T extends OAuth2AuthorizedClient> T loadAuthorizedClient(String clientRegistrationId, String principalName) {\n\t\tAssert.hasText(clientRegistrationId, \"clientRegistrationId cannot be empty\");\n\t\tAssert.hasText(principalName, \"principalName cannot be empty\");\n\t\tClientRegistration registration = this.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);\n\t\tif (registration == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (T) this.authorizedClients.get(new OAuth2AuthorizedClientId(clientRegistrationId, principalName));\n\t}\n\n\t@Override\n\tpublic void saveAuthorizedClient(OAuth2AuthorizedClient authorizedClient, Authentication principal) {\n\t\tAssert.notNull(authorizedClient, \"authorizedClient cannot be null\");\n\t\tAssert.notNull(principal, \"principal cannot be null\");\n\t\tthis.authorizedClients.put(new OAuth2AuthorizedClientId(authorizedClient.getClientRegistration().getRegistrationId(),\n\t\t\t\tprincipal.getName()), authorizedClient);\n\t}\n\n\t@Override\n\tpublic void removeAuthorizedClient(String clientRegistrationId, String principalName) {\n\t\tAssert.hasText(clientRegistrationId, \"clientRegistrationId cannot be empty\");\n\t\tAssert.hasText(principalName, \"principalName cannot be empty\");\n\t\tClientRegistration registration = this.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);\n\t\tif (registration != null) {\n\t\t\tthis.authorizedClients.remove(new OAuth2AuthorizedClientId(clientRegistrationId, principalName));\n\t\t}\n\t}\n}\n```\n\n- ClientRegistrationRepository를 가지고 있고, 해당 Repository에 CRUD를 하는 기능들을 가지고 있다.\n- Bean으로 선언되어 있어 Application레벨에서 사용이 용이하게 되어있다.\n\n### OAuth2AuthorizedClientManager\n\n```java\npublic final class DefaultOAuth2AuthorizedClientManager implements OAuth2AuthorizedClientManager {\n\tprivate final ClientRegistrationRepository clientRegistrationRepository;\n\tprivate final OAuth2AuthorizedClientRepository authorizedClientRepository;\n\tprivate OAuth2AuthorizedClientProvider authorizedClientProvider = context -> null;\n\tprivate Function<OAuth2AuthorizeRequest, Map<String, Object>> contextAttributesMapper = new DefaultContextAttributesMapper();\n\n\t@Nullable\n\t@Override\n\tpublic OAuth2AuthorizedClient authorize(OAuth2AuthorizeRequest authorizeRequest) {\n\t\tAssert.notNull(authorizeRequest, \"authorizeRequest cannot be null\");\n\n\t\tString clientRegistrationId = authorizeRequest.getClientRegistrationId();\n\t\tOAuth2AuthorizedClient authorizedClient = authorizeRequest.getAuthorizedClient();\n\t\tAuthentication principal = authorizeRequest.getPrincipal();\n\n\t\tHttpServletRequest servletRequest = getHttpServletRequestOrDefault(authorizeRequest.getAttributes());\n\t\tAssert.notNull(servletRequest, \"servletRequest cannot be null\");\n\t\tHttpServletResponse servletResponse = getHttpServletResponseOrDefault(authorizeRequest.getAttributes());\n\t\tAssert.notNull(servletResponse, \"servletResponse cannot be null\");\n\n\t\tOAuth2AuthorizationContext.Builder contextBuilder;\n\t\tif (authorizedClient != null) {\n\t\t\tcontextBuilder = OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient);\n\t\t} else {\n\t\t\tClientRegistration clientRegistration = this.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);\n\t\t\tAssert.notNull(clientRegistration, \"Could not find ClientRegistration with id '\" + clientRegistrationId + \"'\");\n\t\t\tauthorizedClient = this.authorizedClientRepository.loadAuthorizedClient(\n\t\t\t\t\tclientRegistrationId, principal, servletRequest);\n\t\t\tif (authorizedClient != null) {\n\t\t\t\tcontextBuilder = OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient);\n\t\t\t} else {\n\t\t\t\tcontextBuilder = OAuth2AuthorizationContext.withClientRegistration(clientRegistration);\n\t\t\t}\n\t\t}\n\t\tOAuth2AuthorizationContext authorizationContext = contextBuilder\n\t\t\t\t.principal(principal)\n\t\t\t\t.attributes(attributes -> {\n\t\t\t\t\tMap<String, Object> contextAttributes = this.contextAttributesMapper.apply(authorizeRequest);\n\t\t\t\t\tif (!CollectionUtils.isEmpty(contextAttributes)) {\n\t\t\t\t\t\tattributes.putAll(contextAttributes);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.build();\n\n\t\tauthorizedClient = this.authorizedClientProvider.authorize(authorizationContext);\n\t\tif (authorizedClient != null) {\n\t\t\tthis.authorizedClientRepository.saveAuthorizedClient(authorizedClient, principal, servletRequest, servletResponse);\n\t\t} else {\n\t\t\t// In the case of re-authorization, the returned `authorizedClient` may be null if re-authorization is not supported.\n\t\t\t// For these cases, return the provided `authorizationContext.authorizedClient`.\n\t\t\tif (authorizationContext.getAuthorizedClient() != null) {\n\t\t\t\treturn authorizationContext.getAuthorizedClient();\n\t\t\t}\n\t\t}\n\n\t\treturn authorizedClient;\n\t}\n}\n```\n\n- 내부에 ClientRegistrationRepository로는 InMemoryClientRegistrationRepository를 가지고 있다.\n- 내부에 AuthorizedClientRepository로 AuthenticatedPrincipalOAuth2AuthorizedClientRepository를 가지고 있다.\n- 내부에 AuthenticationProvider로 DelegatingOAuth2AuthorizedClientProvider를 가지고 있다.\n    - DelegatingOAuth2AuthorizedClientProvider는 Config에서 선언한 GrantType에 해당하는 Provider들을 전부 가지고 있다.\n- The DefaultOAuth2AuthorizedClientManager is designed to be used within the context of a HttpServletRequest. \n  When operating outside of a HttpServletRequest context, use AuthorizedClientServiceOAuth2AuthorizedClientManager instead.\n\n### OAuth2AuthorizedClientProvider\n\n- 각 GrantType에 따른 인증 방식이 들어있다.\n- 인증을 하는 조건이 맞지 않으면 Throw Exception을 던진다.\n\n### OAuth2AuthorizationRequestRedirectFilter\n\n```Java\npublic class OAuth2AuthorizationRequestRedirectFilter extends OncePerRequestFilter {\n\tpublic static final String DEFAULT_AUTHORIZATION_REQUEST_BASE_URI = \"/oauth2/authorization\";\n\tprivate final ThrowableAnalyzer throwableAnalyzer = new DefaultThrowableAnalyzer();\n\tprivate final RedirectStrategy authorizationRedirectStrategy = new DefaultRedirectStrategy();\n\tprivate OAuth2AuthorizationRequestResolver authorizationRequestResolver;\n\tprivate AuthorizationRequestRepository<OAuth2AuthorizationRequest> authorizationRequestRepository =\n\t\tnew HttpSessionOAuth2AuthorizationRequestRepository();\n\tprivate RequestCache requestCache = new HttpSessionRequestCache();\n\n\tpublic OAuth2AuthorizationRequestRedirectFilter(ClientRegistrationRepository clientRegistrationRepository) {\n\t\tthis(clientRegistrationRepository, DEFAULT_AUTHORIZATION_REQUEST_BASE_URI);\n\t}\n\n\tpublic OAuth2AuthorizationRequestRedirectFilter(ClientRegistrationRepository clientRegistrationRepository, String authorizationRequestBaseUri) {\n\t\tAssert.notNull(clientRegistrationRepository, \"clientRegistrationRepository cannot be null\");\n\t\tAssert.hasText(authorizationRequestBaseUri, \"authorizationRequestBaseUri cannot be empty\");\n\t\tthis.authorizationRequestResolver = new DefaultOAuth2AuthorizationRequestResolver(\n\t\t\t\tclientRegistrationRepository, authorizationRequestBaseUri);\n\t}\n\n\tpublic OAuth2AuthorizationRequestRedirectFilter(OAuth2AuthorizationRequestResolver authorizationRequestResolver) {\n\t\tAssert.notNull(authorizationRequestResolver, \"authorizationRequestResolver cannot be null\");\n\t\tthis.authorizationRequestResolver = authorizationRequestResolver;\n\t}\n\n\tpublic final void setAuthorizationRequestRepository(AuthorizationRequestRepository<OAuth2AuthorizationRequest> authorizationRequestRepository) {\n\t\tAssert.notNull(authorizationRequestRepository, \"authorizationRequestRepository cannot be null\");\n\t\tthis.authorizationRequestRepository = authorizationRequestRepository;\n\t}\n\n\tpublic final void setRequestCache(RequestCache requestCache) {\n\t\tAssert.notNull(requestCache, \"requestCache cannot be null\");\n\t\tthis.requestCache = requestCache;\n\t}\n\n\t@Override\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n\t\t\tthrows ServletException, IOException {\n\n\t\ttry {\n\t\t\tOAuth2AuthorizationRequest authorizationRequest = this.authorizationRequestResolver.resolve(request);\n\t\t\tif (authorizationRequest != null) {\n\t\t\t\tthis.sendRedirectForAuthorization(request, response, authorizationRequest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (Exception failed) {\n\t\t\tthis.unsuccessfulRedirectForAuthorization(request, response, failed);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tfilterChain.doFilter(request, response);\n\t\t} catch (IOException ex) {\n\t\t\tthrow ex;\n\t\t} catch (Exception ex) {\n\t\t\t// Check to see if we need to handle ClientAuthorizationRequiredException\n\t\t\tThrowable[] causeChain = this.throwableAnalyzer.determineCauseChain(ex);\n\t\t\tClientAuthorizationRequiredException authzEx = (ClientAuthorizationRequiredException) this.throwableAnalyzer\n\t\t\t\t.getFirstThrowableOfType(ClientAuthorizationRequiredException.class, causeChain);\n\t\t\tif (authzEx != null) {\n\t\t\t\ttry {\n\t\t\t\t\tOAuth2AuthorizationRequest authorizationRequest = this.authorizationRequestResolver.resolve(request, authzEx.getClientRegistrationId());\n\t\t\t\t\tif (authorizationRequest == null) {\n\t\t\t\t\t\tthrow authzEx;\n\t\t\t\t\t}\n\t\t\t\t\tthis.sendRedirectForAuthorization(request, response, authorizationRequest);\n\t\t\t\t\tthis.requestCache.saveRequest(request, response);\n\t\t\t\t} catch (Exception failed) {\n\t\t\t\t\tthis.unsuccessfulRedirectForAuthorization(request, response, failed);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (ex instanceof ServletException) {\n\t\t\t\tthrow (ServletException) ex;\n\t\t\t} else if (ex instanceof RuntimeException) {\n\t\t\t\tthrow (RuntimeException) ex;\n\t\t\t} else {\n\t\t\t\tthrow new RuntimeException(ex);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void sendRedirectForAuthorization(HttpServletRequest request, HttpServletResponse response, OAuth2AuthorizationRequest authorizationRequest) throws IOException {\n\n\t\tif (AuthorizationGrantType.AUTHORIZATION_CODE.equals(authorizationRequest.getGrantType())) {\n\t\t\tthis.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest, request, response);\n\t\t}\n\t\tthis.authorizationRedirectStrategy.sendRedirect(request, response, authorizationRequest.getAuthorizationRequestUri());\n\t}\n\n\tprivate void unsuccessfulRedirectForAuthorization(HttpServletRequest request, HttpServletResponse response,\tException failed) throws IOException {\n\n\t\tif (logger.isErrorEnabled()) {\n\t\t\tlogger.error(\"Authorization Request failed: \" + failed.toString(), failed);\n\t\t}\n\t\tresponse.sendError(HttpStatus.INTERNAL_SERVER_ERROR.value(), HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n\t}\n\n\tprivate static final class DefaultThrowableAnalyzer extends ThrowableAnalyzer {\n\t\tprotected void initExtractorMap() {\n\t\t\tsuper.initExtractorMap();\n\t\t\tregisterExtractor(ServletException.class, throwable -> {\n\t\t\t\tThrowableAnalyzer.verifyThrowableHierarchy(throwable, ServletException.class);\n\t\t\t\treturn ((ServletException) throwable).getRootCause();\n\t\t\t});\n\t\t}\n\t}\n}\n```\n\n### OAuth2AuthorizationCodeGrantFilter\n```text\n\n0. WebAsyncManagerIntegrationFilter \n1. SecurityContextPersistenceFilter@6814 \n2. HeaderWriterFilter\n3. CsrfFilter\n4. LogoutFilter \n\n5. OAuth2AuthorizationRequestRedirectFilter \n\n6. UsernamePasswordAuthenticationFilter \n7. RequestCacheAwareFilter \n8. SecurityContextHolderAwareRequestFilter \n9. AnonymousAuthenticationFilter \n\n10. OAuth2AuthorizationCodeGrantFilter \n\n11. SessionManagementFilter \n12. ExceptionTranslationFilter \n13. FilterSecurityInterceptor \n\n```\n\n### authorizationRedirectStrategy : DefaultRedirectStrategy\n\n### DefaultOauth2AuthorizationRequestResolver","slug":"spring-security-oauth2","published":1,"updated":"2020-07-11T04:51:03.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo5169004aqlvo8tt2dpnb","content":"<h2 id=\"spring-security-oauth2-vs-spring-security\"><a class=\"markdownIt-Anchor\" href=\"#spring-security-oauth2-vs-spring-security\"></a> Spring-Security-oauth2 vs Spring Security</h2>\n<ul>\n<li>Group ID Spring Security 안의 ArtifactID로 oauth2로 이관되면서 Group ID가 security-oauth2 였던 OSS가 Deprecated 되었다.</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  thymeleaf:</span></span><br><span class=\"line\"><span class=\"attr\">    cache:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  security:</span></span><br><span class=\"line\"><span class=\"attr\">    oauth2:</span></span><br><span class=\"line\"><span class=\"attr\">      client:</span></span><br><span class=\"line\"><span class=\"attr\">        registration:</span></span><br><span class=\"line\"><span class=\"attr\">          messaging-client-auth-code:</span></span><br><span class=\"line\"><span class=\"attr\">            provider:</span> <span class=\"string\">keycloak</span></span><br><span class=\"line\"><span class=\"attr\">            client-id:</span> <span class=\"string\">messaging-client</span></span><br><span class=\"line\"><span class=\"attr\">            client-secret:</span> <span class=\"string\">secret</span></span><br><span class=\"line\"><span class=\"attr\">            authorization-grant-type:</span> <span class=\"string\">authorization_code</span></span><br><span class=\"line\"><span class=\"attr\">            redirect-uri:</span> <span class=\"string\">\"&#123;baseUrl&#125;/authorized\"</span></span><br><span class=\"line\"><span class=\"attr\">            scope:</span> <span class=\"string\">message.read,message.write</span></span><br><span class=\"line\"><span class=\"attr\">          messaging-client-client-creds:</span></span><br><span class=\"line\"><span class=\"attr\">            provider:</span> <span class=\"string\">keycloak</span></span><br><span class=\"line\"><span class=\"attr\">            client-id:</span> <span class=\"string\">messaging-client</span></span><br><span class=\"line\"><span class=\"attr\">            client-secret:</span> <span class=\"string\">secret</span></span><br><span class=\"line\"><span class=\"attr\">            authorization-grant-type:</span> <span class=\"string\">client_credentials</span></span><br><span class=\"line\"><span class=\"attr\">            scope:</span> <span class=\"string\">message.read,message.write</span></span><br><span class=\"line\"><span class=\"attr\">          messaging-client-password:</span></span><br><span class=\"line\"><span class=\"attr\">            provider:</span> <span class=\"string\">keycloak</span></span><br><span class=\"line\"><span class=\"attr\">            client-id:</span> <span class=\"string\">messaging-client</span></span><br><span class=\"line\"><span class=\"attr\">            client-secret:</span> <span class=\"string\">secret</span></span><br><span class=\"line\"><span class=\"attr\">            authorization-grant-type:</span> <span class=\"string\">password</span></span><br><span class=\"line\"><span class=\"attr\">            scope:</span> <span class=\"string\">message.read,message.write</span></span><br><span class=\"line\"><span class=\"attr\">        provider:</span></span><br><span class=\"line\"><span class=\"attr\">          keycloak:</span></span><br><span class=\"line\"><span class=\"attr\">            authorization-uri:</span> <span class=\"attr\">http://localhost:8090/auth/realms/oauth2-sample/protocol/openid-connect/auth</span></span><br><span class=\"line\"><span class=\"attr\">            token-uri:</span> <span class=\"attr\">http://localhost:8090/auth/realms/oauth2-sample/protocol/openid-connect/token</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"clientregistration\"><a class=\"markdownIt-Anchor\" href=\"#clientregistration\"></a> ClientRegistration</h3>\n<ul>\n<li>Oauth 2.0 or OpenID Connect 1.0 Provider 들에 등록된 Client의 정보들을 적게된다.</li>\n<li>client 정보에는 ID, Secret, authorization grant type, redirect URL… etc</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClientRegistration</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String registrationId;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String clientId;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String clientSecret;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ClientAuthenticationMethod clientAuthenticationMethod = ClientAuthenticationMethod.BASIC;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> AuthorizationGrantType authorizationGrantType;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String redirectUriTemplate;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Set&lt;String&gt; scopes = Collections.emptySet();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ProviderDetails providerDetails = <span class=\"keyword\">new</span> ProviderDetails();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String clientName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProviderDetails</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String authorizationUri;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String tokenUri;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> UserInfoEndpoint userInfoEndpoint = <span class=\"keyword\">new</span> UserInfoEndpoint();</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String jwkSetUri;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Map&lt;String, Object&gt; configurationMetadata = Collections.emptyMap();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>registrationId: The ID that uniquely identifies the ClientRegistration.</li>\n<li>clientId: The client identifier.</li>\n<li>clientSecret: The client secret.</li>\n<li>clientAuthenticationMethod: The method used to authenticate the Client with the Provider. The supported values are basic, post and none (public clients).</li>\n<li>authorizationGrantType: The OAuth 2.0 Authorization Framework defines four Authorization Grant types. The supported values are authorization_code, client_credentials and password.</li>\n<li>redirectUriTemplate: The client’s registered redirect URI that the Authorization Server redirects the end-user’s user-agent to after the end-user has authenticated and authorized access to the client.</li>\n<li>scopes: The scope(s) requested by the client during the Authorization Request flow, such as openid, email, or profile.</li>\n<li>clientName: A descriptive name used for the client. The name may be used in certain scenarios, such as when displaying the name of the client in the auto-generated login page.</li>\n<li>authorizationUri: The Authorization Endpoint URI for the Authorization Server.</li>\n<li>tokenUri: The Token Endpoint URI for the Authorization Server.</li>\n<li>jwkSetUri: The URI used to retrieve the JSON Web Key (JWK) Set from the Authorization Server, which contains the cryptographic key(s) used to verify the JSON Web Signature (JWS) of the ID Token and optionally the UserInfo Response.</li>\n<li>configurationMetadata: The OpenID Provider Configuration Information. This information will only be available if the Spring Boot 2.x property spring.security.oauth2.client.provider.[providerId].issuerUri is configured.</li>\n<li>(userInfoEndpoint)uri: The UserInfo Endpoint URI used to access the claims/attributes of the authenticated end-user.</li>\n<li>(userInfoEndpoint)authenticationMethod: The authentication method used when sending the access token to the UserInfo Endpoint. The supported values are header, form and query.</li>\n<li>userNameAttributeName: The name of the attribute returned in the UserInfo Response that references the Name or Identifier of the end-user.</li>\n</ol>\n<blockquote>\n<p>Endpoint 별 초기화</p>\n<blockquote>\n<p>OpenID Connect Provider : configuration endpoint<br />\nOAuth2.0 : Metadata endpoint</p>\n</blockquote>\n</blockquote>\n<h3 id=\"clientregistrationrepository\"><a class=\"markdownIt-Anchor\" href=\"#clientregistrationrepository\"></a> ClientRegistrationRepository</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InMemoryClientRegistrationRepository</span> <span class=\"keyword\">implements</span> <span class=\"title\">ClientRegistrationRepository</span>, <span class=\"title\">Iterable</span>&lt;<span class=\"title\">ClientRegistration</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;String, ClientRegistration&gt; registrations;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> ClientRegistration <span class=\"title\">findByRegistrationId</span><span class=\"params\">(String registrationId)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.hasText(registrationId, <span class=\"string\">\"registrationId cannot be empty\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.registrations.get(registrationId);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Default 구현체는 InMemoryClientRegistrationRepository 이다.</li>\n<li>Map으로 ClientRegistration 들을 가지고 있으며, 해당 registrationId 로 ClientRegistration을 찾을수 있는 기능을 제공한다.</li>\n<li>Spring boot 2.x auto-configuration은 spring.security.oauth2.client.registration.[registrationId] 의 형태로 바인드를 자동으로 해놓는다.</li>\n<li>또한 ClientRegistrationRepository라는 이름으로 Bean 등록을 해놓았기 때문에 Inject 받아서 사용가능하다.</li>\n</ul>\n<h3 id=\"oauthauthorizedclient\"><a class=\"markdownIt-Anchor\" href=\"#oauthauthorizedclient\"></a> OAuthAuthorizedClient</h3>\n<ul>\n<li>Authorized Client를 표현한다.</li>\n<li>Authorized Client는 보호되는 자원에 대한 Access 권한을 받은 것으로 간주된다.</li>\n<li>Oauth2AuthorizedClient 는 ClientRegistration과 Resource Owner(End-user) 간 OAuth2AccessToken, OAuth2RefreshToken을 연결시켜준다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OAuth2AuthorizedClient</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ClientRegistration clientRegistration;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String principalName;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OAuth2AccessToken accessToken;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OAuth2RefreshToken refreshToken;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"oauth2authorizedclientrepository\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizedclientrepository\"></a> OAuth2AuthorizedClientRepository</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AuthenticatedPrincipalOAuth2AuthorizedClientRepository</span> <span class=\"keyword\">implements</span> <span class=\"title\">OAuth2AuthorizedClientRepository</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> AuthenticationTrustResolver authenticationTrustResolver = <span class=\"keyword\">new</span> AuthenticationTrustResolverImpl();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OAuth2AuthorizedClientService authorizedClientService;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> OAuth2AuthorizedClientRepository anonymousAuthorizedClientRepository = <span class=\"keyword\">new</span> HttpSessionOAuth2AuthorizedClientRepository();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> &lt;T extends OAuth2AuthorizedClient&gt; <span class=\"function\">T <span class=\"title\">loadAuthorizedClient</span><span class=\"params\">(String clientRegistrationId, Authentication principal,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHttpServletRequest request)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isPrincipalAuthenticated(principal)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.authorizedClientService.loadAuthorizedClient(clientRegistrationId, principal.getName());</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.anonymousAuthorizedClientRepository.loadAuthorizedClient(clientRegistrationId, principal, request);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveAuthorizedClient</span><span class=\"params\">(OAuth2AuthorizedClient authorizedClient, Authentication principal,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isPrincipalAuthenticated(principal)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizedClientService.saveAuthorizedClient(authorizedClient, principal);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.anonymousAuthorizedClientRepository.saveAuthorizedClient(authorizedClient, principal, request, response);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeAuthorizedClient</span><span class=\"params\">(String clientRegistrationId, Authentication principal,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isPrincipalAuthenticated(principal)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizedClientService.removeAuthorizedClient(clientRegistrationId, principal.getName());</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.anonymousAuthorizedClientRepository.removeAuthorizedClient(clientRegistrationId, principal, request, response);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isPrincipalAuthenticated</span><span class=\"params\">(Authentication authentication)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> authentication != <span class=\"keyword\">null</span> &amp;&amp;</span><br><span class=\"line\">\t\t\t\t!<span class=\"keyword\">this</span>.authenticationTrustResolver.isAnonymous(authentication) &amp;&amp;</span><br><span class=\"line\">\t\t\t\tauthentication.isAuthenticated();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>AuthenticationTrustResolver에 질의해 인증된 사용자라면 service에 요청하고 아니면 anonymousAuthorizedClientRepository에 요청한다.</li>\n<li>OAuth2AuthorizationCodeAuthenticationToken으로 인증을 진행한다.</li>\n<li>Session Attribute Name = org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizedClientRepository.AUTHORIZED_CLIENTS</li>\n<li>내부에 anonymousAuthorizedClientRepository로 HttpSessionOAuth2AuthorizedClientRepository을 가지고 있다.</li>\n<li>해당 Session Attribute Name으로 AuthorizedClient들을 저장하고 있다.</li>\n</ul>\n<h3 id=\"authenticationtrustresolver\"><a class=\"markdownIt-Anchor\" href=\"#authenticationtrustresolver\"></a> AuthenticationTrustResolver</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AuthenticationTrustResolverImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">AuthenticationTrustResolver</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Class&lt;? extends Authentication&gt; anonymousClass = AnonymousAuthenticationToken.class;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Class&lt;? extends Authentication&gt; rememberMeClass = RememberMeAuthenticationToken.class;</span><br><span class=\"line\"></span><br><span class=\"line\">\tClass&lt;? extends Authentication&gt; getAnonymousClass() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> anonymousClass;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tClass&lt;? extends Authentication&gt; getRememberMeClass() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rememberMeClass;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAnonymous</span><span class=\"params\">(Authentication authentication)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((anonymousClass == <span class=\"keyword\">null</span>) || (authentication == <span class=\"keyword\">null</span>)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> anonymousClass.isAssignableFrom(authentication.getClass());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isRememberMe</span><span class=\"params\">(Authentication authentication)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((rememberMeClass == <span class=\"keyword\">null</span>) || (authentication == <span class=\"keyword\">null</span>)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rememberMeClass.isAssignableFrom(authentication.getClass());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAnonymousClass</span><span class=\"params\">(Class&lt;? extends Authentication&gt; anonymousClass)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.anonymousClass = anonymousClass;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRememberMeClass</span><span class=\"params\">(Class&lt;? extends Authentication&gt; rememberMeClass)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.rememberMeClass = rememberMeClass;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Anonymous, RememberMe 를 구현하고 할당이 가능한지에 따라 True, False를 반환한다.</li>\n</ul>\n<h3 id=\"oauth2authorizedclientservice\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizedclientservice\"></a> OAuth2AuthorizedClientService</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InMemoryOAuth2AuthorizedClientService</span> <span class=\"keyword\">implements</span> <span class=\"title\">OAuth2AuthorizedClientService</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;OAuth2AuthorizedClientId, OAuth2AuthorizedClient&gt; authorizedClients;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ClientRegistrationRepository clientRegistrationRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">InMemoryOAuth2AuthorizedClientService</span><span class=\"params\">(ClientRegistrationRepository clientRegistrationRepository)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(clientRegistrationRepository, <span class=\"string\">\"clientRegistrationRepository cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.clientRegistrationRepository = clientRegistrationRepository;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizedClients = <span class=\"keyword\">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">InMemoryOAuth2AuthorizedClientService</span><span class=\"params\">(ClientRegistrationRepository clientRegistrationRepository,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t\t\t\t\t\t\t\t\t\tMap&lt;OAuth2AuthorizedClientId, OAuth2AuthorizedClient&gt; authorizedClients)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(clientRegistrationRepository, <span class=\"string\">\"clientRegistrationRepository cannot be null\"</span>);</span><br><span class=\"line\">\t\tAssert.notEmpty(authorizedClients, <span class=\"string\">\"authorizedClients cannot be empty\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.clientRegistrationRepository = clientRegistrationRepository;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizedClients = <span class=\"keyword\">new</span> ConcurrentHashMap&lt;&gt;(authorizedClients);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> &lt;T extends OAuth2AuthorizedClient&gt; <span class=\"function\">T <span class=\"title\">loadAuthorizedClient</span><span class=\"params\">(String clientRegistrationId, String principalName)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.hasText(clientRegistrationId, <span class=\"string\">\"clientRegistrationId cannot be empty\"</span>);</span><br><span class=\"line\">\t\tAssert.hasText(principalName, <span class=\"string\">\"principalName cannot be empty\"</span>);</span><br><span class=\"line\">\t\tClientRegistration registration = <span class=\"keyword\">this</span>.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (registration == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (T) <span class=\"keyword\">this</span>.authorizedClients.get(<span class=\"keyword\">new</span> OAuth2AuthorizedClientId(clientRegistrationId, principalName));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveAuthorizedClient</span><span class=\"params\">(OAuth2AuthorizedClient authorizedClient, Authentication principal)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(authorizedClient, <span class=\"string\">\"authorizedClient cannot be null\"</span>);</span><br><span class=\"line\">\t\tAssert.notNull(principal, <span class=\"string\">\"principal cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizedClients.put(<span class=\"keyword\">new</span> OAuth2AuthorizedClientId(authorizedClient.getClientRegistration().getRegistrationId(),</span><br><span class=\"line\">\t\t\t\tprincipal.getName()), authorizedClient);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeAuthorizedClient</span><span class=\"params\">(String clientRegistrationId, String principalName)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.hasText(clientRegistrationId, <span class=\"string\">\"clientRegistrationId cannot be empty\"</span>);</span><br><span class=\"line\">\t\tAssert.hasText(principalName, <span class=\"string\">\"principalName cannot be empty\"</span>);</span><br><span class=\"line\">\t\tClientRegistration registration = <span class=\"keyword\">this</span>.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (registration != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizedClients.remove(<span class=\"keyword\">new</span> OAuth2AuthorizedClientId(clientRegistrationId, principalName));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ClientRegistrationRepository를 가지고 있고, 해당 Repository에 CRUD를 하는 기능들을 가지고 있다.</li>\n<li>Bean으로 선언되어 있어 Application레벨에서 사용이 용이하게 되어있다.</li>\n</ul>\n<h3 id=\"oauth2authorizedclientmanager\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizedclientmanager\"></a> OAuth2AuthorizedClientManager</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DefaultOAuth2AuthorizedClientManager</span> <span class=\"keyword\">implements</span> <span class=\"title\">OAuth2AuthorizedClientManager</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ClientRegistrationRepository clientRegistrationRepository;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OAuth2AuthorizedClientRepository authorizedClientRepository;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> OAuth2AuthorizedClientProvider authorizedClientProvider = context -&gt; <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Function&lt;OAuth2AuthorizeRequest, Map&lt;String, Object&gt;&gt; contextAttributesMapper = <span class=\"keyword\">new</span> DefaultContextAttributesMapper();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Nullable</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> OAuth2AuthorizedClient <span class=\"title\">authorize</span><span class=\"params\">(OAuth2AuthorizeRequest authorizeRequest)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(authorizeRequest, <span class=\"string\">\"authorizeRequest cannot be null\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString clientRegistrationId = authorizeRequest.getClientRegistrationId();</span><br><span class=\"line\">\t\tOAuth2AuthorizedClient authorizedClient = authorizeRequest.getAuthorizedClient();</span><br><span class=\"line\">\t\tAuthentication principal = authorizeRequest.getPrincipal();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tHttpServletRequest servletRequest = getHttpServletRequestOrDefault(authorizeRequest.getAttributes());</span><br><span class=\"line\">\t\tAssert.notNull(servletRequest, <span class=\"string\">\"servletRequest cannot be null\"</span>);</span><br><span class=\"line\">\t\tHttpServletResponse servletResponse = getHttpServletResponseOrDefault(authorizeRequest.getAttributes());</span><br><span class=\"line\">\t\tAssert.notNull(servletResponse, <span class=\"string\">\"servletResponse cannot be null\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tOAuth2AuthorizationContext.Builder contextBuilder;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (authorizedClient != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tcontextBuilder = OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tClientRegistration clientRegistration = <span class=\"keyword\">this</span>.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);</span><br><span class=\"line\">\t\t\tAssert.notNull(clientRegistration, <span class=\"string\">\"Could not find ClientRegistration with id '\"</span> + clientRegistrationId + <span class=\"string\">\"'\"</span>);</span><br><span class=\"line\">\t\t\tauthorizedClient = <span class=\"keyword\">this</span>.authorizedClientRepository.loadAuthorizedClient(</span><br><span class=\"line\">\t\t\t\t\tclientRegistrationId, principal, servletRequest);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (authorizedClient != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcontextBuilder = OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tcontextBuilder = OAuth2AuthorizationContext.withClientRegistration(clientRegistration);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tOAuth2AuthorizationContext authorizationContext = contextBuilder</span><br><span class=\"line\">\t\t\t\t.principal(principal)</span><br><span class=\"line\">\t\t\t\t.attributes(attributes -&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\tMap&lt;String, Object&gt; contextAttributes = <span class=\"keyword\">this</span>.contextAttributesMapper.apply(authorizeRequest);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (!CollectionUtils.isEmpty(contextAttributes)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tattributes.putAll(contextAttributes);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t.build();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tauthorizedClient = <span class=\"keyword\">this</span>.authorizedClientProvider.authorize(authorizationContext);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (authorizedClient != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizedClientRepository.saveAuthorizedClient(authorizedClient, principal, servletRequest, servletResponse);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// In the case of re-authorization, the returned `authorizedClient` may be null if re-authorization is not supported.</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// For these cases, return the provided `authorizationContext.authorizedClient`.</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (authorizationContext.getAuthorizedClient() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> authorizationContext.getAuthorizedClient();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> authorizedClient;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>내부에 ClientRegistrationRepository로는 InMemoryClientRegistrationRepository를 가지고 있다.</li>\n<li>내부에 AuthorizedClientRepository로 AuthenticatedPrincipalOAuth2AuthorizedClientRepository를 가지고 있다.</li>\n<li>내부에 AuthenticationProvider로 DelegatingOAuth2AuthorizedClientProvider를 가지고 있다.\n<ul>\n<li>DelegatingOAuth2AuthorizedClientProvider는 Config에서 선언한 GrantType에 해당하는 Provider들을 전부 가지고 있다.</li>\n</ul>\n</li>\n<li>The DefaultOAuth2AuthorizedClientManager is designed to be used within the context of a HttpServletRequest.<br />\nWhen operating outside of a HttpServletRequest context, use AuthorizedClientServiceOAuth2AuthorizedClientManager instead.</li>\n</ul>\n<h3 id=\"oauth2authorizedclientprovider\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizedclientprovider\"></a> OAuth2AuthorizedClientProvider</h3>\n<ul>\n<li>각 GrantType에 따른 인증 방식이 들어있다.</li>\n<li>인증을 하는 조건이 맞지 않으면 Throw Exception을 던진다.</li>\n</ul>\n<h3 id=\"oauth2authorizationrequestredirectfilter\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizationrequestredirectfilter\"></a> OAuth2AuthorizationRequestRedirectFilter</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OAuth2AuthorizationRequestRedirectFilter</span> <span class=\"keyword\">extends</span> <span class=\"title\">OncePerRequestFilter</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_AUTHORIZATION_REQUEST_BASE_URI = <span class=\"string\">\"/oauth2/authorization\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ThrowableAnalyzer throwableAnalyzer = <span class=\"keyword\">new</span> DefaultThrowableAnalyzer();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> RedirectStrategy authorizationRedirectStrategy = <span class=\"keyword\">new</span> DefaultRedirectStrategy();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> OAuth2AuthorizationRequestResolver authorizationRequestResolver;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> AuthorizationRequestRepository&lt;OAuth2AuthorizationRequest&gt; authorizationRequestRepository =</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HttpSessionOAuth2AuthorizationRequestRepository();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> RequestCache requestCache = <span class=\"keyword\">new</span> HttpSessionRequestCache();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OAuth2AuthorizationRequestRedirectFilter</span><span class=\"params\">(ClientRegistrationRepository clientRegistrationRepository)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>(clientRegistrationRepository, DEFAULT_AUTHORIZATION_REQUEST_BASE_URI);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OAuth2AuthorizationRequestRedirectFilter</span><span class=\"params\">(ClientRegistrationRepository clientRegistrationRepository, String authorizationRequestBaseUri)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(clientRegistrationRepository, <span class=\"string\">\"clientRegistrationRepository cannot be null\"</span>);</span><br><span class=\"line\">\t\tAssert.hasText(authorizationRequestBaseUri, <span class=\"string\">\"authorizationRequestBaseUri cannot be empty\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizationRequestResolver = <span class=\"keyword\">new</span> DefaultOAuth2AuthorizationRequestResolver(</span><br><span class=\"line\">\t\t\t\tclientRegistrationRepository, authorizationRequestBaseUri);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OAuth2AuthorizationRequestRedirectFilter</span><span class=\"params\">(OAuth2AuthorizationRequestResolver authorizationRequestResolver)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(authorizationRequestResolver, <span class=\"string\">\"authorizationRequestResolver cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizationRequestResolver = authorizationRequestResolver;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">setAuthorizationRequestRepository</span><span class=\"params\">(AuthorizationRequestRepository&lt;OAuth2AuthorizationRequest&gt; authorizationRequestRepository)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(authorizationRequestRepository, <span class=\"string\">\"authorizationRequestRepository cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizationRequestRepository = authorizationRequestRepository;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">setRequestCache</span><span class=\"params\">(RequestCache requestCache)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(requestCache, <span class=\"string\">\"requestCache cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.requestCache = requestCache;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span></span></span><br><span class=\"line\"><span class=\"function\">\t\t\t<span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tOAuth2AuthorizationRequest authorizationRequest = <span class=\"keyword\">this</span>.authorizationRequestResolver.resolve(request);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (authorizationRequest != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.sendRedirectForAuthorization(request, response, authorizationRequest);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception failed) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.unsuccessfulRedirectForAuthorization(request, response, failed);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tfilterChain.doFilter(request, response);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception ex) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Check to see if we need to handle ClientAuthorizationRequiredException</span></span><br><span class=\"line\">\t\t\tThrowable[] causeChain = <span class=\"keyword\">this</span>.throwableAnalyzer.determineCauseChain(ex);</span><br><span class=\"line\">\t\t\tClientAuthorizationRequiredException authzEx = (ClientAuthorizationRequiredException) <span class=\"keyword\">this</span>.throwableAnalyzer</span><br><span class=\"line\">\t\t\t\t.getFirstThrowableOfType(ClientAuthorizationRequiredException.class, causeChain);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (authzEx != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tOAuth2AuthorizationRequest authorizationRequest = <span class=\"keyword\">this</span>.authorizationRequestResolver.resolve(request, authzEx.getClientRegistrationId());</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (authorizationRequest == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">throw</span> authzEx;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">this</span>.sendRedirectForAuthorization(request, response, authorizationRequest);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">this</span>.requestCache.saveRequest(request, response);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception failed) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">this</span>.unsuccessfulRedirectForAuthorization(request, response, failed);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (ex <span class=\"keyword\">instanceof</span> ServletException) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">throw</span> (ServletException) ex;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ex <span class=\"keyword\">instanceof</span> RuntimeException) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">throw</span> (RuntimeException) ex;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(ex);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sendRedirectForAuthorization</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, OAuth2AuthorizationRequest authorizationRequest)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (AuthorizationGrantType.AUTHORIZATION_CODE.equals(authorizationRequest.getGrantType())) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest, request, response);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizationRedirectStrategy.sendRedirect(request, response, authorizationRequest.getAuthorizationRequestUri());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">unsuccessfulRedirectForAuthorization</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response,\tException failed)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (logger.isErrorEnabled()) &#123;</span><br><span class=\"line\">\t\t\tlogger.error(<span class=\"string\">\"Authorization Request failed: \"</span> + failed.toString(), failed);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tresponse.sendError(HttpStatus.INTERNAL_SERVER_ERROR.value(), HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DefaultThrowableAnalyzer</span> <span class=\"keyword\">extends</span> <span class=\"title\">ThrowableAnalyzer</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">initExtractorMap</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">super</span>.initExtractorMap();</span><br><span class=\"line\">\t\t\tregisterExtractor(ServletException.class, throwable -&gt; &#123;</span><br><span class=\"line\">\t\t\t\tThrowableAnalyzer.verifyThrowableHierarchy(throwable, ServletException.class);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> ((ServletException) throwable).getRootCause();</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"oauth2authorizationcodegrantfilter\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizationcodegrantfilter\"></a> OAuth2AuthorizationCodeGrantFilter</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">0. WebAsyncManagerIntegrationFilter </span><br><span class=\"line\">1. SecurityContextPersistenceFilter@6814 </span><br><span class=\"line\">2. HeaderWriterFilter</span><br><span class=\"line\">3. CsrfFilter</span><br><span class=\"line\">4. LogoutFilter </span><br><span class=\"line\"></span><br><span class=\"line\">5. OAuth2AuthorizationRequestRedirectFilter </span><br><span class=\"line\"></span><br><span class=\"line\">6. UsernamePasswordAuthenticationFilter </span><br><span class=\"line\">7. RequestCacheAwareFilter </span><br><span class=\"line\">8. SecurityContextHolderAwareRequestFilter </span><br><span class=\"line\">9. AnonymousAuthenticationFilter </span><br><span class=\"line\"></span><br><span class=\"line\">10. OAuth2AuthorizationCodeGrantFilter </span><br><span class=\"line\"></span><br><span class=\"line\">11. SessionManagementFilter </span><br><span class=\"line\">12. ExceptionTranslationFilter </span><br><span class=\"line\">13. FilterSecurityInterceptor</span><br></pre></td></tr></table></figure>\n<h3 id=\"authorizationredirectstrategy-defaultredirectstrategy\"><a class=\"markdownIt-Anchor\" href=\"#authorizationredirectstrategy-defaultredirectstrategy\"></a> authorizationRedirectStrategy : DefaultRedirectStrategy</h3>\n<h3 id=\"defaultoauth2authorizationrequestresolver\"><a class=\"markdownIt-Anchor\" href=\"#defaultoauth2authorizationrequestresolver\"></a> DefaultOauth2AuthorizationRequestResolver</h3>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"spring-security-oauth2-vs-spring-security\"><a class=\"markdownIt-Anchor\" href=\"#spring-security-oauth2-vs-spring-security\"></a> Spring-Security-oauth2 vs Spring Security</h2>\n<ul>\n<li>Group ID Spring Security 안의 ArtifactID로 oauth2로 이관되면서 Group ID가 security-oauth2 였던 OSS가 Deprecated 되었다.</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  thymeleaf:</span></span><br><span class=\"line\"><span class=\"attr\">    cache:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  security:</span></span><br><span class=\"line\"><span class=\"attr\">    oauth2:</span></span><br><span class=\"line\"><span class=\"attr\">      client:</span></span><br><span class=\"line\"><span class=\"attr\">        registration:</span></span><br><span class=\"line\"><span class=\"attr\">          messaging-client-auth-code:</span></span><br><span class=\"line\"><span class=\"attr\">            provider:</span> <span class=\"string\">keycloak</span></span><br><span class=\"line\"><span class=\"attr\">            client-id:</span> <span class=\"string\">messaging-client</span></span><br><span class=\"line\"><span class=\"attr\">            client-secret:</span> <span class=\"string\">secret</span></span><br><span class=\"line\"><span class=\"attr\">            authorization-grant-type:</span> <span class=\"string\">authorization_code</span></span><br><span class=\"line\"><span class=\"attr\">            redirect-uri:</span> <span class=\"string\">\"&#123;baseUrl&#125;/authorized\"</span></span><br><span class=\"line\"><span class=\"attr\">            scope:</span> <span class=\"string\">message.read,message.write</span></span><br><span class=\"line\"><span class=\"attr\">          messaging-client-client-creds:</span></span><br><span class=\"line\"><span class=\"attr\">            provider:</span> <span class=\"string\">keycloak</span></span><br><span class=\"line\"><span class=\"attr\">            client-id:</span> <span class=\"string\">messaging-client</span></span><br><span class=\"line\"><span class=\"attr\">            client-secret:</span> <span class=\"string\">secret</span></span><br><span class=\"line\"><span class=\"attr\">            authorization-grant-type:</span> <span class=\"string\">client_credentials</span></span><br><span class=\"line\"><span class=\"attr\">            scope:</span> <span class=\"string\">message.read,message.write</span></span><br><span class=\"line\"><span class=\"attr\">          messaging-client-password:</span></span><br><span class=\"line\"><span class=\"attr\">            provider:</span> <span class=\"string\">keycloak</span></span><br><span class=\"line\"><span class=\"attr\">            client-id:</span> <span class=\"string\">messaging-client</span></span><br><span class=\"line\"><span class=\"attr\">            client-secret:</span> <span class=\"string\">secret</span></span><br><span class=\"line\"><span class=\"attr\">            authorization-grant-type:</span> <span class=\"string\">password</span></span><br><span class=\"line\"><span class=\"attr\">            scope:</span> <span class=\"string\">message.read,message.write</span></span><br><span class=\"line\"><span class=\"attr\">        provider:</span></span><br><span class=\"line\"><span class=\"attr\">          keycloak:</span></span><br><span class=\"line\"><span class=\"attr\">            authorization-uri:</span> <span class=\"attr\">http://localhost:8090/auth/realms/oauth2-sample/protocol/openid-connect/auth</span></span><br><span class=\"line\"><span class=\"attr\">            token-uri:</span> <span class=\"attr\">http://localhost:8090/auth/realms/oauth2-sample/protocol/openid-connect/token</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"clientregistration\"><a class=\"markdownIt-Anchor\" href=\"#clientregistration\"></a> ClientRegistration</h3>\n<ul>\n<li>Oauth 2.0 or OpenID Connect 1.0 Provider 들에 등록된 Client의 정보들을 적게된다.</li>\n<li>client 정보에는 ID, Secret, authorization grant type, redirect URL… etc</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClientRegistration</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String registrationId;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String clientId;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String clientSecret;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ClientAuthenticationMethod clientAuthenticationMethod = ClientAuthenticationMethod.BASIC;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> AuthorizationGrantType authorizationGrantType;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String redirectUriTemplate;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Set&lt;String&gt; scopes = Collections.emptySet();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ProviderDetails providerDetails = <span class=\"keyword\">new</span> ProviderDetails();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String clientName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProviderDetails</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String authorizationUri;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String tokenUri;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> UserInfoEndpoint userInfoEndpoint = <span class=\"keyword\">new</span> UserInfoEndpoint();</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String jwkSetUri;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Map&lt;String, Object&gt; configurationMetadata = Collections.emptyMap();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>registrationId: The ID that uniquely identifies the ClientRegistration.</li>\n<li>clientId: The client identifier.</li>\n<li>clientSecret: The client secret.</li>\n<li>clientAuthenticationMethod: The method used to authenticate the Client with the Provider. The supported values are basic, post and none (public clients).</li>\n<li>authorizationGrantType: The OAuth 2.0 Authorization Framework defines four Authorization Grant types. The supported values are authorization_code, client_credentials and password.</li>\n<li>redirectUriTemplate: The client’s registered redirect URI that the Authorization Server redirects the end-user’s user-agent to after the end-user has authenticated and authorized access to the client.</li>\n<li>scopes: The scope(s) requested by the client during the Authorization Request flow, such as openid, email, or profile.</li>\n<li>clientName: A descriptive name used for the client. The name may be used in certain scenarios, such as when displaying the name of the client in the auto-generated login page.</li>\n<li>authorizationUri: The Authorization Endpoint URI for the Authorization Server.</li>\n<li>tokenUri: The Token Endpoint URI for the Authorization Server.</li>\n<li>jwkSetUri: The URI used to retrieve the JSON Web Key (JWK) Set from the Authorization Server, which contains the cryptographic key(s) used to verify the JSON Web Signature (JWS) of the ID Token and optionally the UserInfo Response.</li>\n<li>configurationMetadata: The OpenID Provider Configuration Information. This information will only be available if the Spring Boot 2.x property spring.security.oauth2.client.provider.[providerId].issuerUri is configured.</li>\n<li>(userInfoEndpoint)uri: The UserInfo Endpoint URI used to access the claims/attributes of the authenticated end-user.</li>\n<li>(userInfoEndpoint)authenticationMethod: The authentication method used when sending the access token to the UserInfo Endpoint. The supported values are header, form and query.</li>\n<li>userNameAttributeName: The name of the attribute returned in the UserInfo Response that references the Name or Identifier of the end-user.</li>\n</ol>\n<blockquote>\n<p>Endpoint 별 초기화</p>\n<blockquote>\n<p>OpenID Connect Provider : configuration endpoint<br />\nOAuth2.0 : Metadata endpoint</p>\n</blockquote>\n</blockquote>\n<h3 id=\"clientregistrationrepository\"><a class=\"markdownIt-Anchor\" href=\"#clientregistrationrepository\"></a> ClientRegistrationRepository</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InMemoryClientRegistrationRepository</span> <span class=\"keyword\">implements</span> <span class=\"title\">ClientRegistrationRepository</span>, <span class=\"title\">Iterable</span>&lt;<span class=\"title\">ClientRegistration</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;String, ClientRegistration&gt; registrations;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> ClientRegistration <span class=\"title\">findByRegistrationId</span><span class=\"params\">(String registrationId)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.hasText(registrationId, <span class=\"string\">\"registrationId cannot be empty\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.registrations.get(registrationId);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Default 구현체는 InMemoryClientRegistrationRepository 이다.</li>\n<li>Map으로 ClientRegistration 들을 가지고 있으며, 해당 registrationId 로 ClientRegistration을 찾을수 있는 기능을 제공한다.</li>\n<li>Spring boot 2.x auto-configuration은 spring.security.oauth2.client.registration.[registrationId] 의 형태로 바인드를 자동으로 해놓는다.</li>\n<li>또한 ClientRegistrationRepository라는 이름으로 Bean 등록을 해놓았기 때문에 Inject 받아서 사용가능하다.</li>\n</ul>\n<h3 id=\"oauthauthorizedclient\"><a class=\"markdownIt-Anchor\" href=\"#oauthauthorizedclient\"></a> OAuthAuthorizedClient</h3>\n<ul>\n<li>Authorized Client를 표현한다.</li>\n<li>Authorized Client는 보호되는 자원에 대한 Access 권한을 받은 것으로 간주된다.</li>\n<li>Oauth2AuthorizedClient 는 ClientRegistration과 Resource Owner(End-user) 간 OAuth2AccessToken, OAuth2RefreshToken을 연결시켜준다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OAuth2AuthorizedClient</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ClientRegistration clientRegistration;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String principalName;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OAuth2AccessToken accessToken;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OAuth2RefreshToken refreshToken;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"oauth2authorizedclientrepository\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizedclientrepository\"></a> OAuth2AuthorizedClientRepository</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AuthenticatedPrincipalOAuth2AuthorizedClientRepository</span> <span class=\"keyword\">implements</span> <span class=\"title\">OAuth2AuthorizedClientRepository</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> AuthenticationTrustResolver authenticationTrustResolver = <span class=\"keyword\">new</span> AuthenticationTrustResolverImpl();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OAuth2AuthorizedClientService authorizedClientService;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> OAuth2AuthorizedClientRepository anonymousAuthorizedClientRepository = <span class=\"keyword\">new</span> HttpSessionOAuth2AuthorizedClientRepository();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> &lt;T extends OAuth2AuthorizedClient&gt; <span class=\"function\">T <span class=\"title\">loadAuthorizedClient</span><span class=\"params\">(String clientRegistrationId, Authentication principal,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHttpServletRequest request)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isPrincipalAuthenticated(principal)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.authorizedClientService.loadAuthorizedClient(clientRegistrationId, principal.getName());</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.anonymousAuthorizedClientRepository.loadAuthorizedClient(clientRegistrationId, principal, request);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveAuthorizedClient</span><span class=\"params\">(OAuth2AuthorizedClient authorizedClient, Authentication principal,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isPrincipalAuthenticated(principal)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizedClientService.saveAuthorizedClient(authorizedClient, principal);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.anonymousAuthorizedClientRepository.saveAuthorizedClient(authorizedClient, principal, request, response);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeAuthorizedClient</span><span class=\"params\">(String clientRegistrationId, Authentication principal,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isPrincipalAuthenticated(principal)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizedClientService.removeAuthorizedClient(clientRegistrationId, principal.getName());</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.anonymousAuthorizedClientRepository.removeAuthorizedClient(clientRegistrationId, principal, request, response);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isPrincipalAuthenticated</span><span class=\"params\">(Authentication authentication)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> authentication != <span class=\"keyword\">null</span> &amp;&amp;</span><br><span class=\"line\">\t\t\t\t!<span class=\"keyword\">this</span>.authenticationTrustResolver.isAnonymous(authentication) &amp;&amp;</span><br><span class=\"line\">\t\t\t\tauthentication.isAuthenticated();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>AuthenticationTrustResolver에 질의해 인증된 사용자라면 service에 요청하고 아니면 anonymousAuthorizedClientRepository에 요청한다.</li>\n<li>OAuth2AuthorizationCodeAuthenticationToken으로 인증을 진행한다.</li>\n<li>Session Attribute Name = org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizedClientRepository.AUTHORIZED_CLIENTS</li>\n<li>내부에 anonymousAuthorizedClientRepository로 HttpSessionOAuth2AuthorizedClientRepository을 가지고 있다.</li>\n<li>해당 Session Attribute Name으로 AuthorizedClient들을 저장하고 있다.</li>\n</ul>\n<h3 id=\"authenticationtrustresolver\"><a class=\"markdownIt-Anchor\" href=\"#authenticationtrustresolver\"></a> AuthenticationTrustResolver</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AuthenticationTrustResolverImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">AuthenticationTrustResolver</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Class&lt;? extends Authentication&gt; anonymousClass = AnonymousAuthenticationToken.class;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Class&lt;? extends Authentication&gt; rememberMeClass = RememberMeAuthenticationToken.class;</span><br><span class=\"line\"></span><br><span class=\"line\">\tClass&lt;? extends Authentication&gt; getAnonymousClass() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> anonymousClass;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tClass&lt;? extends Authentication&gt; getRememberMeClass() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rememberMeClass;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAnonymous</span><span class=\"params\">(Authentication authentication)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((anonymousClass == <span class=\"keyword\">null</span>) || (authentication == <span class=\"keyword\">null</span>)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> anonymousClass.isAssignableFrom(authentication.getClass());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isRememberMe</span><span class=\"params\">(Authentication authentication)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((rememberMeClass == <span class=\"keyword\">null</span>) || (authentication == <span class=\"keyword\">null</span>)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rememberMeClass.isAssignableFrom(authentication.getClass());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAnonymousClass</span><span class=\"params\">(Class&lt;? extends Authentication&gt; anonymousClass)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.anonymousClass = anonymousClass;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRememberMeClass</span><span class=\"params\">(Class&lt;? extends Authentication&gt; rememberMeClass)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.rememberMeClass = rememberMeClass;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Anonymous, RememberMe 를 구현하고 할당이 가능한지에 따라 True, False를 반환한다.</li>\n</ul>\n<h3 id=\"oauth2authorizedclientservice\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizedclientservice\"></a> OAuth2AuthorizedClientService</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InMemoryOAuth2AuthorizedClientService</span> <span class=\"keyword\">implements</span> <span class=\"title\">OAuth2AuthorizedClientService</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;OAuth2AuthorizedClientId, OAuth2AuthorizedClient&gt; authorizedClients;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ClientRegistrationRepository clientRegistrationRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">InMemoryOAuth2AuthorizedClientService</span><span class=\"params\">(ClientRegistrationRepository clientRegistrationRepository)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(clientRegistrationRepository, <span class=\"string\">\"clientRegistrationRepository cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.clientRegistrationRepository = clientRegistrationRepository;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizedClients = <span class=\"keyword\">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">InMemoryOAuth2AuthorizedClientService</span><span class=\"params\">(ClientRegistrationRepository clientRegistrationRepository,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t\t\t\t\t\t\t\t\t\tMap&lt;OAuth2AuthorizedClientId, OAuth2AuthorizedClient&gt; authorizedClients)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(clientRegistrationRepository, <span class=\"string\">\"clientRegistrationRepository cannot be null\"</span>);</span><br><span class=\"line\">\t\tAssert.notEmpty(authorizedClients, <span class=\"string\">\"authorizedClients cannot be empty\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.clientRegistrationRepository = clientRegistrationRepository;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizedClients = <span class=\"keyword\">new</span> ConcurrentHashMap&lt;&gt;(authorizedClients);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> &lt;T extends OAuth2AuthorizedClient&gt; <span class=\"function\">T <span class=\"title\">loadAuthorizedClient</span><span class=\"params\">(String clientRegistrationId, String principalName)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.hasText(clientRegistrationId, <span class=\"string\">\"clientRegistrationId cannot be empty\"</span>);</span><br><span class=\"line\">\t\tAssert.hasText(principalName, <span class=\"string\">\"principalName cannot be empty\"</span>);</span><br><span class=\"line\">\t\tClientRegistration registration = <span class=\"keyword\">this</span>.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (registration == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (T) <span class=\"keyword\">this</span>.authorizedClients.get(<span class=\"keyword\">new</span> OAuth2AuthorizedClientId(clientRegistrationId, principalName));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveAuthorizedClient</span><span class=\"params\">(OAuth2AuthorizedClient authorizedClient, Authentication principal)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(authorizedClient, <span class=\"string\">\"authorizedClient cannot be null\"</span>);</span><br><span class=\"line\">\t\tAssert.notNull(principal, <span class=\"string\">\"principal cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizedClients.put(<span class=\"keyword\">new</span> OAuth2AuthorizedClientId(authorizedClient.getClientRegistration().getRegistrationId(),</span><br><span class=\"line\">\t\t\t\tprincipal.getName()), authorizedClient);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeAuthorizedClient</span><span class=\"params\">(String clientRegistrationId, String principalName)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.hasText(clientRegistrationId, <span class=\"string\">\"clientRegistrationId cannot be empty\"</span>);</span><br><span class=\"line\">\t\tAssert.hasText(principalName, <span class=\"string\">\"principalName cannot be empty\"</span>);</span><br><span class=\"line\">\t\tClientRegistration registration = <span class=\"keyword\">this</span>.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (registration != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizedClients.remove(<span class=\"keyword\">new</span> OAuth2AuthorizedClientId(clientRegistrationId, principalName));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ClientRegistrationRepository를 가지고 있고, 해당 Repository에 CRUD를 하는 기능들을 가지고 있다.</li>\n<li>Bean으로 선언되어 있어 Application레벨에서 사용이 용이하게 되어있다.</li>\n</ul>\n<h3 id=\"oauth2authorizedclientmanager\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizedclientmanager\"></a> OAuth2AuthorizedClientManager</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DefaultOAuth2AuthorizedClientManager</span> <span class=\"keyword\">implements</span> <span class=\"title\">OAuth2AuthorizedClientManager</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ClientRegistrationRepository clientRegistrationRepository;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OAuth2AuthorizedClientRepository authorizedClientRepository;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> OAuth2AuthorizedClientProvider authorizedClientProvider = context -&gt; <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Function&lt;OAuth2AuthorizeRequest, Map&lt;String, Object&gt;&gt; contextAttributesMapper = <span class=\"keyword\">new</span> DefaultContextAttributesMapper();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Nullable</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> OAuth2AuthorizedClient <span class=\"title\">authorize</span><span class=\"params\">(OAuth2AuthorizeRequest authorizeRequest)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(authorizeRequest, <span class=\"string\">\"authorizeRequest cannot be null\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString clientRegistrationId = authorizeRequest.getClientRegistrationId();</span><br><span class=\"line\">\t\tOAuth2AuthorizedClient authorizedClient = authorizeRequest.getAuthorizedClient();</span><br><span class=\"line\">\t\tAuthentication principal = authorizeRequest.getPrincipal();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tHttpServletRequest servletRequest = getHttpServletRequestOrDefault(authorizeRequest.getAttributes());</span><br><span class=\"line\">\t\tAssert.notNull(servletRequest, <span class=\"string\">\"servletRequest cannot be null\"</span>);</span><br><span class=\"line\">\t\tHttpServletResponse servletResponse = getHttpServletResponseOrDefault(authorizeRequest.getAttributes());</span><br><span class=\"line\">\t\tAssert.notNull(servletResponse, <span class=\"string\">\"servletResponse cannot be null\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tOAuth2AuthorizationContext.Builder contextBuilder;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (authorizedClient != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tcontextBuilder = OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tClientRegistration clientRegistration = <span class=\"keyword\">this</span>.clientRegistrationRepository.findByRegistrationId(clientRegistrationId);</span><br><span class=\"line\">\t\t\tAssert.notNull(clientRegistration, <span class=\"string\">\"Could not find ClientRegistration with id '\"</span> + clientRegistrationId + <span class=\"string\">\"'\"</span>);</span><br><span class=\"line\">\t\t\tauthorizedClient = <span class=\"keyword\">this</span>.authorizedClientRepository.loadAuthorizedClient(</span><br><span class=\"line\">\t\t\t\t\tclientRegistrationId, principal, servletRequest);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (authorizedClient != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcontextBuilder = OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tcontextBuilder = OAuth2AuthorizationContext.withClientRegistration(clientRegistration);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tOAuth2AuthorizationContext authorizationContext = contextBuilder</span><br><span class=\"line\">\t\t\t\t.principal(principal)</span><br><span class=\"line\">\t\t\t\t.attributes(attributes -&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\tMap&lt;String, Object&gt; contextAttributes = <span class=\"keyword\">this</span>.contextAttributesMapper.apply(authorizeRequest);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (!CollectionUtils.isEmpty(contextAttributes)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tattributes.putAll(contextAttributes);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t.build();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tauthorizedClient = <span class=\"keyword\">this</span>.authorizedClientProvider.authorize(authorizationContext);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (authorizedClient != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizedClientRepository.saveAuthorizedClient(authorizedClient, principal, servletRequest, servletResponse);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// In the case of re-authorization, the returned `authorizedClient` may be null if re-authorization is not supported.</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// For these cases, return the provided `authorizationContext.authorizedClient`.</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (authorizationContext.getAuthorizedClient() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> authorizationContext.getAuthorizedClient();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> authorizedClient;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>내부에 ClientRegistrationRepository로는 InMemoryClientRegistrationRepository를 가지고 있다.</li>\n<li>내부에 AuthorizedClientRepository로 AuthenticatedPrincipalOAuth2AuthorizedClientRepository를 가지고 있다.</li>\n<li>내부에 AuthenticationProvider로 DelegatingOAuth2AuthorizedClientProvider를 가지고 있다.\n<ul>\n<li>DelegatingOAuth2AuthorizedClientProvider는 Config에서 선언한 GrantType에 해당하는 Provider들을 전부 가지고 있다.</li>\n</ul>\n</li>\n<li>The DefaultOAuth2AuthorizedClientManager is designed to be used within the context of a HttpServletRequest.<br />\nWhen operating outside of a HttpServletRequest context, use AuthorizedClientServiceOAuth2AuthorizedClientManager instead.</li>\n</ul>\n<h3 id=\"oauth2authorizedclientprovider\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizedclientprovider\"></a> OAuth2AuthorizedClientProvider</h3>\n<ul>\n<li>각 GrantType에 따른 인증 방식이 들어있다.</li>\n<li>인증을 하는 조건이 맞지 않으면 Throw Exception을 던진다.</li>\n</ul>\n<h3 id=\"oauth2authorizationrequestredirectfilter\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizationrequestredirectfilter\"></a> OAuth2AuthorizationRequestRedirectFilter</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OAuth2AuthorizationRequestRedirectFilter</span> <span class=\"keyword\">extends</span> <span class=\"title\">OncePerRequestFilter</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_AUTHORIZATION_REQUEST_BASE_URI = <span class=\"string\">\"/oauth2/authorization\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ThrowableAnalyzer throwableAnalyzer = <span class=\"keyword\">new</span> DefaultThrowableAnalyzer();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> RedirectStrategy authorizationRedirectStrategy = <span class=\"keyword\">new</span> DefaultRedirectStrategy();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> OAuth2AuthorizationRequestResolver authorizationRequestResolver;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> AuthorizationRequestRepository&lt;OAuth2AuthorizationRequest&gt; authorizationRequestRepository =</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HttpSessionOAuth2AuthorizationRequestRepository();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> RequestCache requestCache = <span class=\"keyword\">new</span> HttpSessionRequestCache();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OAuth2AuthorizationRequestRedirectFilter</span><span class=\"params\">(ClientRegistrationRepository clientRegistrationRepository)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>(clientRegistrationRepository, DEFAULT_AUTHORIZATION_REQUEST_BASE_URI);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OAuth2AuthorizationRequestRedirectFilter</span><span class=\"params\">(ClientRegistrationRepository clientRegistrationRepository, String authorizationRequestBaseUri)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(clientRegistrationRepository, <span class=\"string\">\"clientRegistrationRepository cannot be null\"</span>);</span><br><span class=\"line\">\t\tAssert.hasText(authorizationRequestBaseUri, <span class=\"string\">\"authorizationRequestBaseUri cannot be empty\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizationRequestResolver = <span class=\"keyword\">new</span> DefaultOAuth2AuthorizationRequestResolver(</span><br><span class=\"line\">\t\t\t\tclientRegistrationRepository, authorizationRequestBaseUri);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OAuth2AuthorizationRequestRedirectFilter</span><span class=\"params\">(OAuth2AuthorizationRequestResolver authorizationRequestResolver)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(authorizationRequestResolver, <span class=\"string\">\"authorizationRequestResolver cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizationRequestResolver = authorizationRequestResolver;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">setAuthorizationRequestRepository</span><span class=\"params\">(AuthorizationRequestRepository&lt;OAuth2AuthorizationRequest&gt; authorizationRequestRepository)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(authorizationRequestRepository, <span class=\"string\">\"authorizationRequestRepository cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizationRequestRepository = authorizationRequestRepository;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">setRequestCache</span><span class=\"params\">(RequestCache requestCache)</span> </span>&#123;</span><br><span class=\"line\">\t\tAssert.notNull(requestCache, <span class=\"string\">\"requestCache cannot be null\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.requestCache = requestCache;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span></span></span><br><span class=\"line\"><span class=\"function\">\t\t\t<span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tOAuth2AuthorizationRequest authorizationRequest = <span class=\"keyword\">this</span>.authorizationRequestResolver.resolve(request);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (authorizationRequest != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.sendRedirectForAuthorization(request, response, authorizationRequest);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception failed) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.unsuccessfulRedirectForAuthorization(request, response, failed);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tfilterChain.doFilter(request, response);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception ex) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Check to see if we need to handle ClientAuthorizationRequiredException</span></span><br><span class=\"line\">\t\t\tThrowable[] causeChain = <span class=\"keyword\">this</span>.throwableAnalyzer.determineCauseChain(ex);</span><br><span class=\"line\">\t\t\tClientAuthorizationRequiredException authzEx = (ClientAuthorizationRequiredException) <span class=\"keyword\">this</span>.throwableAnalyzer</span><br><span class=\"line\">\t\t\t\t.getFirstThrowableOfType(ClientAuthorizationRequiredException.class, causeChain);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (authzEx != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tOAuth2AuthorizationRequest authorizationRequest = <span class=\"keyword\">this</span>.authorizationRequestResolver.resolve(request, authzEx.getClientRegistrationId());</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (authorizationRequest == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">throw</span> authzEx;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">this</span>.sendRedirectForAuthorization(request, response, authorizationRequest);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">this</span>.requestCache.saveRequest(request, response);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception failed) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">this</span>.unsuccessfulRedirectForAuthorization(request, response, failed);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (ex <span class=\"keyword\">instanceof</span> ServletException) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">throw</span> (ServletException) ex;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ex <span class=\"keyword\">instanceof</span> RuntimeException) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">throw</span> (RuntimeException) ex;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(ex);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sendRedirectForAuthorization</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, OAuth2AuthorizationRequest authorizationRequest)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (AuthorizationGrantType.AUTHORIZATION_CODE.equals(authorizationRequest.getGrantType())) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest, request, response);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.authorizationRedirectStrategy.sendRedirect(request, response, authorizationRequest.getAuthorizationRequestUri());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">unsuccessfulRedirectForAuthorization</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response,\tException failed)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (logger.isErrorEnabled()) &#123;</span><br><span class=\"line\">\t\t\tlogger.error(<span class=\"string\">\"Authorization Request failed: \"</span> + failed.toString(), failed);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tresponse.sendError(HttpStatus.INTERNAL_SERVER_ERROR.value(), HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DefaultThrowableAnalyzer</span> <span class=\"keyword\">extends</span> <span class=\"title\">ThrowableAnalyzer</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">initExtractorMap</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">super</span>.initExtractorMap();</span><br><span class=\"line\">\t\t\tregisterExtractor(ServletException.class, throwable -&gt; &#123;</span><br><span class=\"line\">\t\t\t\tThrowableAnalyzer.verifyThrowableHierarchy(throwable, ServletException.class);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> ((ServletException) throwable).getRootCause();</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"oauth2authorizationcodegrantfilter\"><a class=\"markdownIt-Anchor\" href=\"#oauth2authorizationcodegrantfilter\"></a> OAuth2AuthorizationCodeGrantFilter</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">0. WebAsyncManagerIntegrationFilter </span><br><span class=\"line\">1. SecurityContextPersistenceFilter@6814 </span><br><span class=\"line\">2. HeaderWriterFilter</span><br><span class=\"line\">3. CsrfFilter</span><br><span class=\"line\">4. LogoutFilter </span><br><span class=\"line\"></span><br><span class=\"line\">5. OAuth2AuthorizationRequestRedirectFilter </span><br><span class=\"line\"></span><br><span class=\"line\">6. UsernamePasswordAuthenticationFilter </span><br><span class=\"line\">7. RequestCacheAwareFilter </span><br><span class=\"line\">8. SecurityContextHolderAwareRequestFilter </span><br><span class=\"line\">9. AnonymousAuthenticationFilter </span><br><span class=\"line\"></span><br><span class=\"line\">10. OAuth2AuthorizationCodeGrantFilter </span><br><span class=\"line\"></span><br><span class=\"line\">11. SessionManagementFilter </span><br><span class=\"line\">12. ExceptionTranslationFilter </span><br><span class=\"line\">13. FilterSecurityInterceptor</span><br></pre></td></tr></table></figure>\n<h3 id=\"authorizationredirectstrategy-defaultredirectstrategy\"><a class=\"markdownIt-Anchor\" href=\"#authorizationredirectstrategy-defaultredirectstrategy\"></a> authorizationRedirectStrategy : DefaultRedirectStrategy</h3>\n<h3 id=\"defaultoauth2authorizationrequestresolver\"><a class=\"markdownIt-Anchor\" href=\"#defaultoauth2authorizationrequestresolver\"></a> DefaultOauth2AuthorizationRequestResolver</h3>\n"},{"title":"spring-security-jose","date":"2020-03-31T06:42:00.000Z","_content":"\n## JOSE (Javascript Object Signing and Encryption)\nhttps://jose.readthedocs.io/en/latest/\n\nJWT (JSON WEB Token) : JWS or JWE\nJWS (JSON Web Signature) : 서버에서 인증을 증거로 인증 정보를 서버의 **Private Key** 로 서명\nJWE (Json Web Encryption) : 서버와 클라이언트 간 암호화된 데이터를 Token 화 한것\nJWK (Json Web Key) : cryptographic key 표현 형식\n\n\n## JWT\n![](/images/springboot/security/jose/jwt.png)\nBase64URL Encode\n\n### Header\n```json\n{\n  \"typ\": \"JWT\",\n  \"alg\": \"HS256\"\n}\n```\n\n### Payload\n- Claim : 정보의 조각을 뜻함\n    - Key/Value 의 쌍으로 구성\n    - Registerd, public, private 의 type을 가짐\n\n\n\n#### Registered Claim\n- iss : 토근 발급자 (issuer)\n- sub : 토큰 제목 (subject)\n- aud : 토큰 대상자 (audience)\n- exp : 토큰의 만료시간 (expiration)\n- nbf : 토큰의 활성날짜 (Not Before)\n    - nbf 이후 토큰이 활성화 되어야 함. 그전까지 처리 안됨\n- iat : 토큰이 발급된 시간 (issued at) token age 판단 가능\n- jti : JWT 고유 식별자. 중복확인때 사용됨\n\n#### Public Claim\n- 충돌 방지된 이름 (collision-resistant)\n- Claim 이름을 URI 형식으로 설정함\n\n```json\n{\n  \"https://your.domain/jwt_claims/\": true\n}\n```\n\n#### Private Claim\n- 클라이언트 서버 양측간 협의하에 사용되는 클레임 이름\n\n```json\n{\n    \"username\": \"yours\"\n}\n```\n\n### Signature\n- Header의 인코딩 값, Payload의 인코딩 값 을 합치고 *Private Key*로 해쉬를 하여 생성\n\n```text\nHMACSHA256(\n  base64UrlEncode(header) + \".\" +\n  base64UrlEncode(payload),\n  secret)\n\n```","source":"_posts/spring-security-jose.md","raw":"---\ntitle: spring-security-jose\ndate: 2020-03-31 15:42:00\ntags:\n---\n\n## JOSE (Javascript Object Signing and Encryption)\nhttps://jose.readthedocs.io/en/latest/\n\nJWT (JSON WEB Token) : JWS or JWE\nJWS (JSON Web Signature) : 서버에서 인증을 증거로 인증 정보를 서버의 **Private Key** 로 서명\nJWE (Json Web Encryption) : 서버와 클라이언트 간 암호화된 데이터를 Token 화 한것\nJWK (Json Web Key) : cryptographic key 표현 형식\n\n\n## JWT\n![](/images/springboot/security/jose/jwt.png)\nBase64URL Encode\n\n### Header\n```json\n{\n  \"typ\": \"JWT\",\n  \"alg\": \"HS256\"\n}\n```\n\n### Payload\n- Claim : 정보의 조각을 뜻함\n    - Key/Value 의 쌍으로 구성\n    - Registerd, public, private 의 type을 가짐\n\n\n\n#### Registered Claim\n- iss : 토근 발급자 (issuer)\n- sub : 토큰 제목 (subject)\n- aud : 토큰 대상자 (audience)\n- exp : 토큰의 만료시간 (expiration)\n- nbf : 토큰의 활성날짜 (Not Before)\n    - nbf 이후 토큰이 활성화 되어야 함. 그전까지 처리 안됨\n- iat : 토큰이 발급된 시간 (issued at) token age 판단 가능\n- jti : JWT 고유 식별자. 중복확인때 사용됨\n\n#### Public Claim\n- 충돌 방지된 이름 (collision-resistant)\n- Claim 이름을 URI 형식으로 설정함\n\n```json\n{\n  \"https://your.domain/jwt_claims/\": true\n}\n```\n\n#### Private Claim\n- 클라이언트 서버 양측간 협의하에 사용되는 클레임 이름\n\n```json\n{\n    \"username\": \"yours\"\n}\n```\n\n### Signature\n- Header의 인코딩 값, Payload의 인코딩 값 을 합치고 *Private Key*로 해쉬를 하여 생성\n\n```text\nHMACSHA256(\n  base64UrlEncode(header) + \".\" +\n  base64UrlEncode(payload),\n  secret)\n\n```","slug":"spring-security-jose","published":1,"updated":"2020-07-11T04:51:03.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo516a004dqlvo66rvac1w","content":"<h2 id=\"jose-javascript-object-signing-and-encryption\"><a class=\"markdownIt-Anchor\" href=\"#jose-javascript-object-signing-and-encryption\"></a> JOSE (Javascript Object Signing and Encryption)</h2>\n<p><a href=\"https://jose.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"noopener\">https://jose.readthedocs.io/en/latest/</a></p>\n<p>JWT (JSON WEB Token) : JWS or JWE<br />\nJWS (JSON Web Signature) : 서버에서 인증을 증거로 인증 정보를 서버의 <strong>Private Key</strong> 로 서명<br />\nJWE (Json Web Encryption) : 서버와 클라이언트 간 암호화된 데이터를 Token 화 한것<br />\nJWK (Json Web Key) : cryptographic key 표현 형식</p>\n<h2 id=\"jwt\"><a class=\"markdownIt-Anchor\" href=\"#jwt\"></a> JWT</h2>\n<p><img src=\"/images/springboot/security/jose/jwt.png\" alt=\"\" /><br />\nBase64URL Encode</p>\n<h3 id=\"header\"><a class=\"markdownIt-Anchor\" href=\"#header\"></a> Header</h3>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"typ\"</span>: <span class=\"string\">\"JWT\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"alg\"</span>: <span class=\"string\">\"HS256\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"payload\"><a class=\"markdownIt-Anchor\" href=\"#payload\"></a> Payload</h3>\n<ul>\n<li>Claim : 정보의 조각을 뜻함\n<ul>\n<li>Key/Value 의 쌍으로 구성</li>\n<li>Registerd, public, private 의 type을 가짐</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"registered-claim\"><a class=\"markdownIt-Anchor\" href=\"#registered-claim\"></a> Registered Claim</h4>\n<ul>\n<li>iss : 토근 발급자 (issuer)</li>\n<li>sub : 토큰 제목 (subject)</li>\n<li>aud : 토큰 대상자 (audience)</li>\n<li>exp : 토큰의 만료시간 (expiration)</li>\n<li>nbf : 토큰의 활성날짜 (Not Before)\n<ul>\n<li>nbf 이후 토큰이 활성화 되어야 함. 그전까지 처리 안됨</li>\n</ul>\n</li>\n<li>iat : 토큰이 발급된 시간 (issued at) token age 판단 가능</li>\n<li>jti : JWT 고유 식별자. 중복확인때 사용됨</li>\n</ul>\n<h4 id=\"public-claim\"><a class=\"markdownIt-Anchor\" href=\"#public-claim\"></a> Public Claim</h4>\n<ul>\n<li>충돌 방지된 이름 (collision-resistant)</li>\n<li>Claim 이름을 URI 형식으로 설정함</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"https://your.domain/jwt_claims/\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"private-claim\"><a class=\"markdownIt-Anchor\" href=\"#private-claim\"></a> Private Claim</h4>\n<ul>\n<li>클라이언트 서버 양측간 협의하에 사용되는 클레임 이름</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"username\"</span>: <span class=\"string\">\"yours\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"signature\"><a class=\"markdownIt-Anchor\" href=\"#signature\"></a> Signature</h3>\n<ul>\n<li>Header의 인코딩 값, Payload의 인코딩 값 을 합치고 <em>Private Key</em>로 해쉬를 하여 생성</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HMACSHA256(</span><br><span class=\"line\">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class=\"line\">  base64UrlEncode(payload),</span><br><span class=\"line\">  secret)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"jose-javascript-object-signing-and-encryption\"><a class=\"markdownIt-Anchor\" href=\"#jose-javascript-object-signing-and-encryption\"></a> JOSE (Javascript Object Signing and Encryption)</h2>\n<p><a href=\"https://jose.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"noopener\">https://jose.readthedocs.io/en/latest/</a></p>\n<p>JWT (JSON WEB Token) : JWS or JWE<br />\nJWS (JSON Web Signature) : 서버에서 인증을 증거로 인증 정보를 서버의 <strong>Private Key</strong> 로 서명<br />\nJWE (Json Web Encryption) : 서버와 클라이언트 간 암호화된 데이터를 Token 화 한것<br />\nJWK (Json Web Key) : cryptographic key 표현 형식</p>\n<h2 id=\"jwt\"><a class=\"markdownIt-Anchor\" href=\"#jwt\"></a> JWT</h2>\n<p><img src=\"/images/springboot/security/jose/jwt.png\" alt=\"\" /><br />\nBase64URL Encode</p>\n<h3 id=\"header\"><a class=\"markdownIt-Anchor\" href=\"#header\"></a> Header</h3>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"typ\"</span>: <span class=\"string\">\"JWT\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"alg\"</span>: <span class=\"string\">\"HS256\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"payload\"><a class=\"markdownIt-Anchor\" href=\"#payload\"></a> Payload</h3>\n<ul>\n<li>Claim : 정보의 조각을 뜻함\n<ul>\n<li>Key/Value 의 쌍으로 구성</li>\n<li>Registerd, public, private 의 type을 가짐</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"registered-claim\"><a class=\"markdownIt-Anchor\" href=\"#registered-claim\"></a> Registered Claim</h4>\n<ul>\n<li>iss : 토근 발급자 (issuer)</li>\n<li>sub : 토큰 제목 (subject)</li>\n<li>aud : 토큰 대상자 (audience)</li>\n<li>exp : 토큰의 만료시간 (expiration)</li>\n<li>nbf : 토큰의 활성날짜 (Not Before)\n<ul>\n<li>nbf 이후 토큰이 활성화 되어야 함. 그전까지 처리 안됨</li>\n</ul>\n</li>\n<li>iat : 토큰이 발급된 시간 (issued at) token age 판단 가능</li>\n<li>jti : JWT 고유 식별자. 중복확인때 사용됨</li>\n</ul>\n<h4 id=\"public-claim\"><a class=\"markdownIt-Anchor\" href=\"#public-claim\"></a> Public Claim</h4>\n<ul>\n<li>충돌 방지된 이름 (collision-resistant)</li>\n<li>Claim 이름을 URI 형식으로 설정함</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"https://your.domain/jwt_claims/\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"private-claim\"><a class=\"markdownIt-Anchor\" href=\"#private-claim\"></a> Private Claim</h4>\n<ul>\n<li>클라이언트 서버 양측간 협의하에 사용되는 클레임 이름</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"username\"</span>: <span class=\"string\">\"yours\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"signature\"><a class=\"markdownIt-Anchor\" href=\"#signature\"></a> Signature</h3>\n<ul>\n<li>Header의 인코딩 값, Payload의 인코딩 값 을 합치고 <em>Private Key</em>로 해쉬를 하여 생성</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HMACSHA256(</span><br><span class=\"line\">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class=\"line\">  base64UrlEncode(payload),</span><br><span class=\"line\">  secret)</span><br></pre></td></tr></table></figure>"},{"title":"spring-security","date":"2019-11-22T05:04:46.000Z","_content":"## Authentication Manager\n\nSpring Security에서는 AuthenticationManager라는 Interface가 존재하고 이를 구현하면 된다.\n웹 어플리케이션에서 보통 WebConfig를 설정하기 위해 extends 받는 객체가 WebSecurityConfigurerAdapter이며 \n이는 WebSecurityConfigurer를 구현한 것이다. \nInit함수 실행시 HttpSecurity를 생성하고 내부적으로 내부 init 함수 안에서 최초 1번 생성해서 반환하게 된다.\n\n## Provider Manager\nProvider Manager는 Request의 Authentication을 다루는 AuthenticationProvider를 관리하기 위한 manager이며, \n각각의 AuthenticationProvider의 구현에 따라 인증할 수 있는 범위가 넓어지며, \nDAO기반, LDAP기반, anonymous기반 등 여러가지 Provider를 관리할 수 있다. 만약 각 Provider에서 처리할 수 없고 null값이 나온다면\nProvider Manager는 ProviderNotFoundException을 Throw 해 처리한다.\n\n## Authentication - DaoAuthenticationProvider\n\nAuthentication의 간단한 구현체는 DaoAuthenticationProvider이며 이는 프레임워크에서 조기에 지원한 하나의 구현체입니다. \n```java\npublic class DaoAuthenticationProvider extends AbstractUserDetailsAuthenticationProvider {\n\tprivate static final String USER_NOT_FOUND_PASSWORD = \"userNotFoundPassword\";\n\n\tprivate PasswordEncoder passwordEncoder;\n\n\tprivate volatile String userNotFoundEncodedPassword;\n    ## UserDetailService\n\tprivate UserDetailsService userDetailsService;\n\n\tprivate UserDetailsPasswordService userDetailsPasswordService; \n```\n\nUserDetailService를 Injection받아 해당 유저가 올바른 유저인지 체크한다.\n\n```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\n\n@Configuration\npublic class WebConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    public UserDetailsService userDetailsService() {\n        InMemoryUserDetailsManager manager = new InMemoryUserDetailsManager();\n        manager.createUser(User.withUsername(\"user\").password(\"password\").roles(\"USER\").build());\n        return manager;\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.\n            authorizeRequests()\n            .antMatchers(\"/db-console/**\")\n            .permitAll().anyRequest().authenticated();\n        http.csrf().disable();\n        http.headers().frameOptions().disable();\n\n    }\n}\n```\n보통 테스트시에는 InMemoryUserDetailsManager를 UserDetailsService 빈으로 생성해 사용한다.\n인증을 성공한 이후 보안상의 문제로 인증된 Authentication 객체를 삭제한다고 한다. 허나 Stateless Application상의 성능 향상을 위해선 Cache가 필수이고\n이를 지원하기 위해 AuthenticationProvider에 캐쉬구현을 하거나 복사본을 만들어 놓고, eraseCredentialsAfterAuthentication Property를 disable 할수도 있다고 한다.\n자세한 사항은 Javadoc의 구현을 확인하라고 한다. \n\n### UserDetailService \n\n \n\n","source":"_posts/spring-security.md","raw":"---\ntitle: spring-security\ndate: 2019-11-22 14:04:46\ntags:\n---\n## Authentication Manager\n\nSpring Security에서는 AuthenticationManager라는 Interface가 존재하고 이를 구현하면 된다.\n웹 어플리케이션에서 보통 WebConfig를 설정하기 위해 extends 받는 객체가 WebSecurityConfigurerAdapter이며 \n이는 WebSecurityConfigurer를 구현한 것이다. \nInit함수 실행시 HttpSecurity를 생성하고 내부적으로 내부 init 함수 안에서 최초 1번 생성해서 반환하게 된다.\n\n## Provider Manager\nProvider Manager는 Request의 Authentication을 다루는 AuthenticationProvider를 관리하기 위한 manager이며, \n각각의 AuthenticationProvider의 구현에 따라 인증할 수 있는 범위가 넓어지며, \nDAO기반, LDAP기반, anonymous기반 등 여러가지 Provider를 관리할 수 있다. 만약 각 Provider에서 처리할 수 없고 null값이 나온다면\nProvider Manager는 ProviderNotFoundException을 Throw 해 처리한다.\n\n## Authentication - DaoAuthenticationProvider\n\nAuthentication의 간단한 구현체는 DaoAuthenticationProvider이며 이는 프레임워크에서 조기에 지원한 하나의 구현체입니다. \n```java\npublic class DaoAuthenticationProvider extends AbstractUserDetailsAuthenticationProvider {\n\tprivate static final String USER_NOT_FOUND_PASSWORD = \"userNotFoundPassword\";\n\n\tprivate PasswordEncoder passwordEncoder;\n\n\tprivate volatile String userNotFoundEncodedPassword;\n    ## UserDetailService\n\tprivate UserDetailsService userDetailsService;\n\n\tprivate UserDetailsPasswordService userDetailsPasswordService; \n```\n\nUserDetailService를 Injection받아 해당 유저가 올바른 유저인지 체크한다.\n\n```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\n\n@Configuration\npublic class WebConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    public UserDetailsService userDetailsService() {\n        InMemoryUserDetailsManager manager = new InMemoryUserDetailsManager();\n        manager.createUser(User.withUsername(\"user\").password(\"password\").roles(\"USER\").build());\n        return manager;\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.\n            authorizeRequests()\n            .antMatchers(\"/db-console/**\")\n            .permitAll().anyRequest().authenticated();\n        http.csrf().disable();\n        http.headers().frameOptions().disable();\n\n    }\n}\n```\n보통 테스트시에는 InMemoryUserDetailsManager를 UserDetailsService 빈으로 생성해 사용한다.\n인증을 성공한 이후 보안상의 문제로 인증된 Authentication 객체를 삭제한다고 한다. 허나 Stateless Application상의 성능 향상을 위해선 Cache가 필수이고\n이를 지원하기 위해 AuthenticationProvider에 캐쉬구현을 하거나 복사본을 만들어 놓고, eraseCredentialsAfterAuthentication Property를 disable 할수도 있다고 한다.\n자세한 사항은 Javadoc의 구현을 확인하라고 한다. \n\n### UserDetailService \n\n \n\n","slug":"spring-security","published":1,"updated":"2020-07-11T04:51:03.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo516c004gqlvo8rtj3fdd","content":"<h2 id=\"authentication-manager\"><a class=\"markdownIt-Anchor\" href=\"#authentication-manager\"></a> Authentication Manager</h2>\n<p>Spring Security에서는 AuthenticationManager라는 Interface가 존재하고 이를 구현하면 된다.<br />\n웹 어플리케이션에서 보통 WebConfig를 설정하기 위해 extends 받는 객체가 WebSecurityConfigurerAdapter이며<br />\n이는 WebSecurityConfigurer를 구현한 것이다.<br />\nInit함수 실행시 HttpSecurity를 생성하고 내부적으로 내부 init 함수 안에서 최초 1번 생성해서 반환하게 된다.</p>\n<h2 id=\"provider-manager\"><a class=\"markdownIt-Anchor\" href=\"#provider-manager\"></a> Provider Manager</h2>\n<p>Provider Manager는 Request의 Authentication을 다루는 AuthenticationProvider를 관리하기 위한 manager이며,<br />\n각각의 AuthenticationProvider의 구현에 따라 인증할 수 있는 범위가 넓어지며,<br />\nDAO기반, LDAP기반, anonymous기반 등 여러가지 Provider를 관리할 수 있다. 만약 각 Provider에서 처리할 수 없고 null값이 나온다면<br />\nProvider Manager는 ProviderNotFoundException을 Throw 해 처리한다.</p>\n<h2 id=\"authentication-daoauthenticationprovider\"><a class=\"markdownIt-Anchor\" href=\"#authentication-daoauthenticationprovider\"></a> Authentication - DaoAuthenticationProvider</h2>\n<p>Authentication의 간단한 구현체는 DaoAuthenticationProvider이며 이는 프레임워크에서 조기에 지원한 하나의 구현체입니다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DaoAuthenticationProvider</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractUserDetailsAuthenticationProvider</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String USER_NOT_FOUND_PASSWORD = <span class=\"string\">\"userNotFoundPassword\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> PasswordEncoder passwordEncoder;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> String userNotFoundEncodedPassword;</span><br><span class=\"line\">    ## UserDetailService</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> UserDetailsService userDetailsService;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> UserDetailsPasswordService userDetailsPasswordService;</span><br></pre></td></tr></table></figure>\n<p>UserDetailService를 Injection받아 해당 유저가 올바른 유저인지 체크한다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.provisioning.InMemoryUserDetailsManager;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> UserDetailsService <span class=\"title\">userDetailsService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        InMemoryUserDetailsManager manager = <span class=\"keyword\">new</span> InMemoryUserDetailsManager();</span><br><span class=\"line\">        manager.createUser(User.withUsername(<span class=\"string\">\"user\"</span>).password(<span class=\"string\">\"password\"</span>).roles(<span class=\"string\">\"USER\"</span>).build());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> manager;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        http.</span><br><span class=\"line\">            authorizeRequests()</span><br><span class=\"line\">            .antMatchers(<span class=\"string\">\"/db-console/**\"</span>)</span><br><span class=\"line\">            .permitAll().anyRequest().authenticated();</span><br><span class=\"line\">        http.csrf().disable();</span><br><span class=\"line\">        http.headers().frameOptions().disable();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>보통 테스트시에는 InMemoryUserDetailsManager를 UserDetailsService 빈으로 생성해 사용한다.<br />\n인증을 성공한 이후 보안상의 문제로 인증된 Authentication 객체를 삭제한다고 한다. 허나 Stateless Application상의 성능 향상을 위해선 Cache가 필수이고<br />\n이를 지원하기 위해 AuthenticationProvider에 캐쉬구현을 하거나 복사본을 만들어 놓고, eraseCredentialsAfterAuthentication Property를 disable 할수도 있다고 한다.<br />\n자세한 사항은 Javadoc의 구현을 확인하라고 한다.</p>\n<h3 id=\"userdetailservice\"><a class=\"markdownIt-Anchor\" href=\"#userdetailservice\"></a> UserDetailService</h3>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"authentication-manager\"><a class=\"markdownIt-Anchor\" href=\"#authentication-manager\"></a> Authentication Manager</h2>\n<p>Spring Security에서는 AuthenticationManager라는 Interface가 존재하고 이를 구현하면 된다.<br />\n웹 어플리케이션에서 보통 WebConfig를 설정하기 위해 extends 받는 객체가 WebSecurityConfigurerAdapter이며<br />\n이는 WebSecurityConfigurer를 구현한 것이다.<br />\nInit함수 실행시 HttpSecurity를 생성하고 내부적으로 내부 init 함수 안에서 최초 1번 생성해서 반환하게 된다.</p>\n<h2 id=\"provider-manager\"><a class=\"markdownIt-Anchor\" href=\"#provider-manager\"></a> Provider Manager</h2>\n<p>Provider Manager는 Request의 Authentication을 다루는 AuthenticationProvider를 관리하기 위한 manager이며,<br />\n각각의 AuthenticationProvider의 구현에 따라 인증할 수 있는 범위가 넓어지며,<br />\nDAO기반, LDAP기반, anonymous기반 등 여러가지 Provider를 관리할 수 있다. 만약 각 Provider에서 처리할 수 없고 null값이 나온다면<br />\nProvider Manager는 ProviderNotFoundException을 Throw 해 처리한다.</p>\n<h2 id=\"authentication-daoauthenticationprovider\"><a class=\"markdownIt-Anchor\" href=\"#authentication-daoauthenticationprovider\"></a> Authentication - DaoAuthenticationProvider</h2>\n<p>Authentication의 간단한 구현체는 DaoAuthenticationProvider이며 이는 프레임워크에서 조기에 지원한 하나의 구현체입니다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DaoAuthenticationProvider</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractUserDetailsAuthenticationProvider</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String USER_NOT_FOUND_PASSWORD = <span class=\"string\">\"userNotFoundPassword\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> PasswordEncoder passwordEncoder;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> String userNotFoundEncodedPassword;</span><br><span class=\"line\">    ## UserDetailService</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> UserDetailsService userDetailsService;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> UserDetailsPasswordService userDetailsPasswordService;</span><br></pre></td></tr></table></figure>\n<p>UserDetailService를 Injection받아 해당 유저가 올바른 유저인지 체크한다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.provisioning.InMemoryUserDetailsManager;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> UserDetailsService <span class=\"title\">userDetailsService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        InMemoryUserDetailsManager manager = <span class=\"keyword\">new</span> InMemoryUserDetailsManager();</span><br><span class=\"line\">        manager.createUser(User.withUsername(<span class=\"string\">\"user\"</span>).password(<span class=\"string\">\"password\"</span>).roles(<span class=\"string\">\"USER\"</span>).build());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> manager;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        http.</span><br><span class=\"line\">            authorizeRequests()</span><br><span class=\"line\">            .antMatchers(<span class=\"string\">\"/db-console/**\"</span>)</span><br><span class=\"line\">            .permitAll().anyRequest().authenticated();</span><br><span class=\"line\">        http.csrf().disable();</span><br><span class=\"line\">        http.headers().frameOptions().disable();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>보통 테스트시에는 InMemoryUserDetailsManager를 UserDetailsService 빈으로 생성해 사용한다.<br />\n인증을 성공한 이후 보안상의 문제로 인증된 Authentication 객체를 삭제한다고 한다. 허나 Stateless Application상의 성능 향상을 위해선 Cache가 필수이고<br />\n이를 지원하기 위해 AuthenticationProvider에 캐쉬구현을 하거나 복사본을 만들어 놓고, eraseCredentialsAfterAuthentication Property를 disable 할수도 있다고 한다.<br />\n자세한 사항은 Javadoc의 구현을 확인하라고 한다.</p>\n<h3 id=\"userdetailservice\"><a class=\"markdownIt-Anchor\" href=\"#userdetailservice\"></a> UserDetailService</h3>\n"},{"title":"spring-util-reflection","date":"2020-03-12T04:31:47.000Z","_content":"\n```java\n\n```","source":"_posts/spring-util-reflection.md","raw":"---\ntitle: spring-util-reflection\ndate: 2020-03-12 13:31:47\ntags:\n---\n\n```java\n\n```","slug":"spring-util-reflection","published":1,"updated":"2020-07-11T04:51:03.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo516d004iqlvod2696hem","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"springboot-run","date":"2019-12-19T05:57:33.000Z","_content":"Spring Boot를 사용한 프로젝트를 진행하다보니 Spring Boot 및 Security에 대한 전반적인 지식이 필요 해졌고, \n기존 설정들과는 다른 부분들이 존재해 Run을 진행하는 Entry Point 부터 하나씩 분석하기로 한다.\n\nhttps://www.jetbrains.com/help/idea/class-diagram.html 로 클래스 다이어그램을 추출해 기록할 예정이며,\n분석하는 Spring Boot버전은 2.1.1, Tomcat은 9버전이 될 것이다. \n\n```java\n\tpublic ConfigurableApplicationContext run(String... args) {\n\t\tStopWatch stopWatch = new StopWatch();\n\t\tstopWatch.start();\n\t\tConfigurableApplicationContext context = null;\n\t\tCollection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>();\n\t\tconfigureHeadlessProperty(); // 1\n\t\tSpringApplicationRunListeners listeners = getRunListeners(args); // 2\n\t\tlisteners.starting();\n\t\ttry {\n\t\t\tApplicationArguments applicationArguments = new DefaultApplicationArguments(args); // 1\n\t\t\tConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);\n\t\t\tconfigureIgnoreBeanInfo(environment);\n\t\t\tBanner printedBanner = printBanner(environment);\n\t\t\tcontext = createApplicationContext();\n\t\t\texceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class,\n\t\t\t\t\tnew Class[] { ConfigurableApplicationContext.class }, context);\n\t\t\tprepareContext(context, environment, listeners, applicationArguments, printedBanner);\n\t\t\trefreshContext(context);\n\t\t\tafterRefresh(context, applicationArguments);\n\t\t\tstopWatch.stop();\n\t\t\tif (this.logStartupInfo) {\n\t\t\t\tnew StartupInfoLogger(this.mainApplicationClass).logStarted(getApplicationLog(), stopWatch);\n\t\t\t}\n\t\t\tlisteners.started(context);\n\t\t\tcallRunners(context, applicationArguments);\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\thandleRunFailure(context, ex, exceptionReporters, listeners);\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\n\t\ttry {\n\t\t\tlisteners.running(context);\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\thandleRunFailure(context, ex, exceptionReporters, null);\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t\treturn context;\n\t}\n```\n\n### 1 Configure HeadLess Property\n\n- SYSTEM_PROPERTY_JAVA_AWT_HEADLESS를 True로 바꿔준다. \n- SYSTEM_PROPERTY_JAVA_AWT_HEADLESS는 비 윈도우 환경에서 GUI컴포넌트를 사용할 수 있게 하는 JAVA System Property\n\n### 2 getRunListeners\n- Observer Pattern으로 동록된 모든 Listener 들에게 해당 이벤트가 발생할 경우 전부 실행해준다.\n\n```java\nclass SpringApplicationRunListeners {\n\n\tprivate final Log log;\n\n\tprivate final List<SpringApplicationRunListener> listeners;\n\n\tSpringApplicationRunListeners(Log log, Collection<? extends SpringApplicationRunListener> listeners) {\n\t\tthis.log = log;\n\t\tthis.listeners = new ArrayList<>(listeners);\n\t}\n\n\tpublic void starting() {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.starting();\n\t\t}\n\t}\n}\n```\n\nSpringBoot는 Listener를 별도로 등록하지 않을 경우 EventPublishingRunListener를 등록해 사용한다.\n ","source":"_posts/springboot-run.md","raw":"---\ntitle: springboot-run\ndate: 2019-12-19 14:57:33\ntags: SpringBoot\n---\nSpring Boot를 사용한 프로젝트를 진행하다보니 Spring Boot 및 Security에 대한 전반적인 지식이 필요 해졌고, \n기존 설정들과는 다른 부분들이 존재해 Run을 진행하는 Entry Point 부터 하나씩 분석하기로 한다.\n\nhttps://www.jetbrains.com/help/idea/class-diagram.html 로 클래스 다이어그램을 추출해 기록할 예정이며,\n분석하는 Spring Boot버전은 2.1.1, Tomcat은 9버전이 될 것이다. \n\n```java\n\tpublic ConfigurableApplicationContext run(String... args) {\n\t\tStopWatch stopWatch = new StopWatch();\n\t\tstopWatch.start();\n\t\tConfigurableApplicationContext context = null;\n\t\tCollection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>();\n\t\tconfigureHeadlessProperty(); // 1\n\t\tSpringApplicationRunListeners listeners = getRunListeners(args); // 2\n\t\tlisteners.starting();\n\t\ttry {\n\t\t\tApplicationArguments applicationArguments = new DefaultApplicationArguments(args); // 1\n\t\t\tConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);\n\t\t\tconfigureIgnoreBeanInfo(environment);\n\t\t\tBanner printedBanner = printBanner(environment);\n\t\t\tcontext = createApplicationContext();\n\t\t\texceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class,\n\t\t\t\t\tnew Class[] { ConfigurableApplicationContext.class }, context);\n\t\t\tprepareContext(context, environment, listeners, applicationArguments, printedBanner);\n\t\t\trefreshContext(context);\n\t\t\tafterRefresh(context, applicationArguments);\n\t\t\tstopWatch.stop();\n\t\t\tif (this.logStartupInfo) {\n\t\t\t\tnew StartupInfoLogger(this.mainApplicationClass).logStarted(getApplicationLog(), stopWatch);\n\t\t\t}\n\t\t\tlisteners.started(context);\n\t\t\tcallRunners(context, applicationArguments);\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\thandleRunFailure(context, ex, exceptionReporters, listeners);\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\n\t\ttry {\n\t\t\tlisteners.running(context);\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\thandleRunFailure(context, ex, exceptionReporters, null);\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t\treturn context;\n\t}\n```\n\n### 1 Configure HeadLess Property\n\n- SYSTEM_PROPERTY_JAVA_AWT_HEADLESS를 True로 바꿔준다. \n- SYSTEM_PROPERTY_JAVA_AWT_HEADLESS는 비 윈도우 환경에서 GUI컴포넌트를 사용할 수 있게 하는 JAVA System Property\n\n### 2 getRunListeners\n- Observer Pattern으로 동록된 모든 Listener 들에게 해당 이벤트가 발생할 경우 전부 실행해준다.\n\n```java\nclass SpringApplicationRunListeners {\n\n\tprivate final Log log;\n\n\tprivate final List<SpringApplicationRunListener> listeners;\n\n\tSpringApplicationRunListeners(Log log, Collection<? extends SpringApplicationRunListener> listeners) {\n\t\tthis.log = log;\n\t\tthis.listeners = new ArrayList<>(listeners);\n\t}\n\n\tpublic void starting() {\n\t\tfor (SpringApplicationRunListener listener : this.listeners) {\n\t\t\tlistener.starting();\n\t\t}\n\t}\n}\n```\n\nSpringBoot는 Listener를 별도로 등록하지 않을 경우 EventPublishingRunListener를 등록해 사용한다.\n ","slug":"springboot-run","published":1,"updated":"2020-07-11T04:51:03.374Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdwo516f004kqlvo5kq82a2d","content":"<p>Spring Boot를 사용한 프로젝트를 진행하다보니 Spring Boot 및 Security에 대한 전반적인 지식이 필요 해졌고,<br />\n기존 설정들과는 다른 부분들이 존재해 Run을 진행하는 Entry Point 부터 하나씩 분석하기로 한다.</p>\n<p><a href=\"https://www.jetbrains.com/help/idea/class-diagram.html\" target=\"_blank\" rel=\"noopener\">https://www.jetbrains.com/help/idea/class-diagram.html</a> 로 클래스 다이어그램을 추출해 기록할 예정이며,<br />\n분석하는 Spring Boot버전은 2.1.1, Tomcat은 9버전이 될 것이다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ConfigurableApplicationContext <span class=\"title\">run</span><span class=\"params\">(String... args)</span> </span>&#123;</span><br><span class=\"line\">\tStopWatch stopWatch = <span class=\"keyword\">new</span> StopWatch();</span><br><span class=\"line\">\tstopWatch.start();</span><br><span class=\"line\">\tConfigurableApplicationContext context = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tCollection&lt;SpringBootExceptionReporter&gt; exceptionReporters = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">\tconfigureHeadlessProperty(); <span class=\"comment\">// 1</span></span><br><span class=\"line\">\tSpringApplicationRunListeners listeners = getRunListeners(args); <span class=\"comment\">// 2</span></span><br><span class=\"line\">\tlisteners.starting();</span><br><span class=\"line\">\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\tApplicationArguments applicationArguments = <span class=\"keyword\">new</span> DefaultApplicationArguments(args); <span class=\"comment\">// 1</span></span><br><span class=\"line\">\t\tConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);</span><br><span class=\"line\">\t\tconfigureIgnoreBeanInfo(environment);</span><br><span class=\"line\">\t\tBanner printedBanner = printBanner(environment);</span><br><span class=\"line\">\t\tcontext = createApplicationContext();</span><br><span class=\"line\">\t\texceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class,</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> Class[] &#123; ConfigurableApplicationContext.class &#125;, context);</span><br><span class=\"line\">\t\tprepareContext(context, environment, listeners, applicationArguments, printedBanner);</span><br><span class=\"line\">\t\trefreshContext(context);</span><br><span class=\"line\">\t\tafterRefresh(context, applicationArguments);</span><br><span class=\"line\">\t\tstopWatch.stop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.logStartupInfo) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">new</span> StartupInfoLogger(<span class=\"keyword\">this</span>.mainApplicationClass).logStarted(getApplicationLog(), stopWatch);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tlisteners.started(context);</span><br><span class=\"line\">\t\tcallRunners(context, applicationArguments);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">catch</span> (Throwable ex) &#123;</span><br><span class=\"line\">\t\thandleRunFailure(context, ex, exceptionReporters, listeners);</span><br><span class=\"line\">\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(ex);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\tlisteners.running(context);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">catch</span> (Throwable ex) &#123;</span><br><span class=\"line\">\t\thandleRunFailure(context, ex, exceptionReporters, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(ex);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> context;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-configure-headless-property\"><a class=\"markdownIt-Anchor\" href=\"#1-configure-headless-property\"></a> 1 Configure HeadLess Property</h3>\n<ul>\n<li>SYSTEM_PROPERTY_JAVA_AWT_HEADLESS를 True로 바꿔준다.</li>\n<li>SYSTEM_PROPERTY_JAVA_AWT_HEADLESS는 비 윈도우 환경에서 GUI컴포넌트를 사용할 수 있게 하는 JAVA System Property</li>\n</ul>\n<h3 id=\"2-getrunlisteners\"><a class=\"markdownIt-Anchor\" href=\"#2-getrunlisteners\"></a> 2 getRunListeners</h3>\n<ul>\n<li>Observer Pattern으로 동록된 모든 Listener 들에게 해당 이벤트가 발생할 경우 전부 실행해준다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringApplicationRunListeners</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Log log;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;SpringApplicationRunListener&gt; listeners;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSpringApplicationRunListeners(Log log, Collection&lt;? extends SpringApplicationRunListener&gt; listeners) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.log = log;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.listeners = <span class=\"keyword\">new</span> ArrayList&lt;&gt;(listeners);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">starting</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.starting();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>SpringBoot는 Listener를 별도로 등록하지 않을 경우 EventPublishingRunListener를 등록해 사용한다.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Spring Boot를 사용한 프로젝트를 진행하다보니 Spring Boot 및 Security에 대한 전반적인 지식이 필요 해졌고,<br />\n기존 설정들과는 다른 부분들이 존재해 Run을 진행하는 Entry Point 부터 하나씩 분석하기로 한다.</p>\n<p><a href=\"https://www.jetbrains.com/help/idea/class-diagram.html\" target=\"_blank\" rel=\"noopener\">https://www.jetbrains.com/help/idea/class-diagram.html</a> 로 클래스 다이어그램을 추출해 기록할 예정이며,<br />\n분석하는 Spring Boot버전은 2.1.1, Tomcat은 9버전이 될 것이다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ConfigurableApplicationContext <span class=\"title\">run</span><span class=\"params\">(String... args)</span> </span>&#123;</span><br><span class=\"line\">\tStopWatch stopWatch = <span class=\"keyword\">new</span> StopWatch();</span><br><span class=\"line\">\tstopWatch.start();</span><br><span class=\"line\">\tConfigurableApplicationContext context = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tCollection&lt;SpringBootExceptionReporter&gt; exceptionReporters = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">\tconfigureHeadlessProperty(); <span class=\"comment\">// 1</span></span><br><span class=\"line\">\tSpringApplicationRunListeners listeners = getRunListeners(args); <span class=\"comment\">// 2</span></span><br><span class=\"line\">\tlisteners.starting();</span><br><span class=\"line\">\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\tApplicationArguments applicationArguments = <span class=\"keyword\">new</span> DefaultApplicationArguments(args); <span class=\"comment\">// 1</span></span><br><span class=\"line\">\t\tConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);</span><br><span class=\"line\">\t\tconfigureIgnoreBeanInfo(environment);</span><br><span class=\"line\">\t\tBanner printedBanner = printBanner(environment);</span><br><span class=\"line\">\t\tcontext = createApplicationContext();</span><br><span class=\"line\">\t\texceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class,</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> Class[] &#123; ConfigurableApplicationContext.class &#125;, context);</span><br><span class=\"line\">\t\tprepareContext(context, environment, listeners, applicationArguments, printedBanner);</span><br><span class=\"line\">\t\trefreshContext(context);</span><br><span class=\"line\">\t\tafterRefresh(context, applicationArguments);</span><br><span class=\"line\">\t\tstopWatch.stop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.logStartupInfo) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">new</span> StartupInfoLogger(<span class=\"keyword\">this</span>.mainApplicationClass).logStarted(getApplicationLog(), stopWatch);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tlisteners.started(context);</span><br><span class=\"line\">\t\tcallRunners(context, applicationArguments);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">catch</span> (Throwable ex) &#123;</span><br><span class=\"line\">\t\thandleRunFailure(context, ex, exceptionReporters, listeners);</span><br><span class=\"line\">\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(ex);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\tlisteners.running(context);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">catch</span> (Throwable ex) &#123;</span><br><span class=\"line\">\t\thandleRunFailure(context, ex, exceptionReporters, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(ex);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> context;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-configure-headless-property\"><a class=\"markdownIt-Anchor\" href=\"#1-configure-headless-property\"></a> 1 Configure HeadLess Property</h3>\n<ul>\n<li>SYSTEM_PROPERTY_JAVA_AWT_HEADLESS를 True로 바꿔준다.</li>\n<li>SYSTEM_PROPERTY_JAVA_AWT_HEADLESS는 비 윈도우 환경에서 GUI컴포넌트를 사용할 수 있게 하는 JAVA System Property</li>\n</ul>\n<h3 id=\"2-getrunlisteners\"><a class=\"markdownIt-Anchor\" href=\"#2-getrunlisteners\"></a> 2 getRunListeners</h3>\n<ul>\n<li>Observer Pattern으로 동록된 모든 Listener 들에게 해당 이벤트가 발생할 경우 전부 실행해준다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringApplicationRunListeners</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Log log;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;SpringApplicationRunListener&gt; listeners;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSpringApplicationRunListeners(Log log, Collection&lt;? extends SpringApplicationRunListener&gt; listeners) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.log = log;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.listeners = <span class=\"keyword\">new</span> ArrayList&lt;&gt;(listeners);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">starting</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (SpringApplicationRunListener listener : <span class=\"keyword\">this</span>.listeners) &#123;</span><br><span class=\"line\">\t\t\tlistener.starting();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>SpringBoot는 Listener를 별도로 등록하지 않을 경우 EventPublishingRunListener를 등록해 사용한다.</p>\n"},{"title":"Setting","date":"2019-10-28T07:11:14.000Z","comments":0,"meta":false,"actions":false,"_content":"\nhttps://github.com/LouisBarranqueiro\nhttps://github.com/LouisBarranqueiro/hexo-algoliasearch\nhello\nolleh\n\n![](/images/jvm_stack_01.gif)\n\n``` java\npublic static void main(String[] args) {\n\n}\n```\n","source":"_posts/Setting.md","raw":"---\ntitle: Setting\ndate: 2019-10-28 16:11:14\ncomments: false\nmeta: false\nactions: false\n---\n\nhttps://github.com/LouisBarranqueiro\nhttps://github.com/LouisBarranqueiro/hexo-algoliasearch\nhello\nolleh\n\n![](/images/jvm_stack_01.gif)\n\n``` java\npublic static void main(String[] args) {\n\n}\n```\n","slug":"Setting","published":1,"updated":"2020-07-11T04:51:03.327Z","layout":"post","photos":[],"link":"","_id":"ckdwo516g004mqlvo8ghn79be","content":"<p><a href=\"https://github.com/LouisBarranqueiro\" target=\"_blank\" rel=\"noopener\">https://github.com/LouisBarranqueiro</a><br />\n<a href=\"https://github.com/LouisBarranqueiro/hexo-algoliasearch\" target=\"_blank\" rel=\"noopener\">https://github.com/LouisBarranqueiro/hexo-algoliasearch</a><br />\nhello<br />\nolleh</p>\n<p><img src=\"/images/jvm_stack_01.gif\" alt=\"\" /></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/LouisBarranqueiro\" target=\"_blank\" rel=\"noopener\">https://github.com/LouisBarranqueiro</a><br />\n<a href=\"https://github.com/LouisBarranqueiro/hexo-algoliasearch\" target=\"_blank\" rel=\"noopener\">https://github.com/LouisBarranqueiro/hexo-algoliasearch</a><br />\nhello<br />\nolleh</p>\n<p><img src=\"/images/jvm_stack_01.gif\" alt=\"\" /></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckdwo512p0002qlvo6z9479h9","category_id":"ckdwo513c0007qlvo3cek9wzu","_id":"ckdwo5142000tqlvo9v90d6ji"},{"post_id":"ckdwo512p0002qlvo6z9479h9","category_id":"ckdwo513q000jqlvof9r7d86h","_id":"ckdwo5143000vqlvo0gbn72wm"},{"post_id":"ckdwo513d0008qlvo801cfi9f","category_id":"ckdwo513m000eqlvog7x858u0","_id":"ckdwo51490014qlvo51rjbqvg"},{"post_id":"ckdwo513d0008qlvo801cfi9f","category_id":"ckdwo5141000sqlvofljj8t57","_id":"ckdwo514b0018qlvofwxveub4"},{"post_id":"ckdwo51480012qlvo7pr1ekdf","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo514e001cqlvo3wl040i3"},{"post_id":"ckdwo513p000hqlvo1sap5xw0","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo514h001fqlvocphxaw1n"},{"post_id":"ckdwo513r000kqlvo15hm5wuh","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo514j001jqlvofewb43lu"},{"post_id":"ckdwo513u000mqlvocq8le378","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo514q001qqlvodt1b2mg4"},{"post_id":"ckdwo513x000pqlvo4ylo244s","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo514t001wqlvo9c6bdnl7"},{"post_id":"ckdwo513l000dqlvo7x1cad82","category_id":"ckdwo513m000eqlvog7x858u0","_id":"ckdwo514x0023qlvo4uoiduao"},{"post_id":"ckdwo513l000dqlvo7x1cad82","category_id":"ckdwo514n001pqlvo0f4wa6w8","_id":"ckdwo514z0026qlvo09yg4g0g"},{"post_id":"ckdwo513z000rqlvo0wendo1z","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo51500029qlvoct107mur"},{"post_id":"ckdwo5142000uqlvo8jkl48a9","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo5155002fqlvob82y40ki"},{"post_id":"ckdwo5144000xqlvocbhlh6hw","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo5158002lqlvo2ymnh14t"},{"post_id":"ckdwo51460010qlvo2g8ccjpg","category_id":"ckdwo5146000zqlvoayhw1lx3","_id":"ckdwo515c002qqlvogsy245u5"},{"post_id":"ckdwo51490016qlvo5f9u7w68","category_id":"ckdwo513m000eqlvog7x858u0","_id":"ckdwo515f002vqlvoa5lfeodb"},{"post_id":"ckdwo51490016qlvo5f9u7w68","category_id":"ckdwo5158002kqlvo8d1xc6aj","_id":"ckdwo515g002zqlvo5fathkn9"},{"post_id":"ckdwo515b002pqlvo84irefhy","category_id":"ckdwo515j0033qlvo2tg76gpl","_id":"ckdwo515q003dqlvo0ecu06vs"},{"post_id":"ckdwo514k001lqlvo75bwa531","category_id":"ckdwo515c002sqlvohbybd1jt","_id":"ckdwo515y003pqlvohbjw5dvx"},{"post_id":"ckdwo514k001lqlvo75bwa531","category_id":"ckdwo515q003cqlvo4stefno4","_id":"ckdwo5160003uqlvoeo9sdg3p"},{"post_id":"ckdwo515s003iqlvoc6jwfyb4","category_id":"ckdwo513m000eqlvog7x858u0","_id":"ckdwo5162003xqlvo5t7ab8ov"},{"post_id":"ckdwo515s003iqlvoc6jwfyb4","category_id":"ckdwo5158002kqlvo8d1xc6aj","_id":"ckdwo51650041qlvoem3643t5"},{"post_id":"ckdwo5159002nqlvo2v8q0a9x","category_id":"ckdwo515f002xqlvodahmcyge","_id":"ckdwo51670044qlvo036ga2oo"},{"post_id":"ckdwo5159002nqlvo2v8q0a9x","category_id":"ckdwo515t003jqlvo7wf4hjpg","_id":"ckdwo51690048qlvohbtaghk1"},{"post_id":"ckdwo515e002uqlvogjbn1qcp","category_id":"ckdwo515f002xqlvodahmcyge","_id":"ckdwo516a004bqlvo28ssalpl"},{"post_id":"ckdwo515e002uqlvogjbn1qcp","category_id":"ckdwo515t003jqlvo7wf4hjpg","_id":"ckdwo516c004fqlvoh91o35jd"}],"PostTag":[{"post_id":"ckdwo512g0000qlvo5i3i62ua","tag_id":"ckdwo51350004qlvocs6u50mx","_id":"ckdwo513k000cqlvog4bh5lsi"},{"post_id":"ckdwo512p0002qlvo6z9479h9","tag_id":"ckdwo513j000bqlvoe65047ai","_id":"ckdwo513q000iqlvo4bsff96s"},{"post_id":"ckdwo513d0008qlvo801cfi9f","tag_id":"ckdwo513o000gqlvob32y0zv9","_id":"ckdwo513w000nqlvo5pil2wh3"},{"post_id":"ckdwo513l000dqlvo7x1cad82","tag_id":"ckdwo513o000gqlvob32y0zv9","_id":"ckdwo5145000yqlvocw0uh2c2"},{"post_id":"ckdwo513l000dqlvo7x1cad82","tag_id":"ckdwo513y000qqlvoc9h9bppx","_id":"ckdwo51470011qlvo2v7q0uyd"},{"post_id":"ckdwo513p000hqlvo1sap5xw0","tag_id":"ckdwo5144000wqlvoh7hc1y59","_id":"ckdwo51490015qlvo26yu5883"},{"post_id":"ckdwo513r000kqlvo15hm5wuh","tag_id":"ckdwo51480013qlvof6uu5sez","_id":"ckdwo514k001kqlvo81nu1lyh"},{"post_id":"ckdwo513r000kqlvo15hm5wuh","tag_id":"ckdwo514d001aqlvo3s25dait","_id":"ckdwo514l001mqlvo81qz6zd4"},{"post_id":"ckdwo513u000mqlvocq8le378","tag_id":"ckdwo51480013qlvof6uu5sez","_id":"ckdwo514q001rqlvocupi42si"},{"post_id":"ckdwo514k001lqlvo75bwa531","tag_id":"ckdwo513o000gqlvob32y0zv9","_id":"ckdwo514s001tqlvodlqhgqty"},{"post_id":"ckdwo513x000pqlvo4ylo244s","tag_id":"ckdwo514m001nqlvof0yu0946","_id":"ckdwo514u001yqlvo8y92ckyr"},{"post_id":"ckdwo513z000rqlvo0wendo1z","tag_id":"ckdwo514s001uqlvo4jpf14y1","_id":"ckdwo514y0024qlvo8wf1eeg2"},{"post_id":"ckdwo5142000uqlvo8jkl48a9","tag_id":"ckdwo514w0021qlvo0zzcfig1","_id":"ckdwo5153002cqlvobylxdzji"},{"post_id":"ckdwo5144000xqlvocbhlh6hw","tag_id":"ckdwo51480013qlvof6uu5sez","_id":"ckdwo5157002iqlvo0knm06bz"},{"post_id":"ckdwo51460010qlvo2g8ccjpg","tag_id":"ckdwo51480013qlvof6uu5sez","_id":"ckdwo515a002oqlvo9emrcwnx"},{"post_id":"ckdwo51480012qlvo7pr1ekdf","tag_id":"ckdwo514m001nqlvof0yu0946","_id":"ckdwo515n0038qlvo55prdl0z"},{"post_id":"ckdwo51480012qlvo7pr1ekdf","tag_id":"ckdwo515c002rqlvoa43gc1og","_id":"ckdwo515p003aqlvog6l35c7k"},{"post_id":"ckdwo51480012qlvo7pr1ekdf","tag_id":"ckdwo515f002wqlvohonpdf6r","_id":"ckdwo515r003fqlvo7mne8l1y"},{"post_id":"ckdwo51480012qlvo7pr1ekdf","tag_id":"ckdwo515i0031qlvocm6sh2fz","_id":"ckdwo515s003hqlvo4xoo0td3"},{"post_id":"ckdwo51490016qlvo5f9u7w68","tag_id":"ckdwo513o000gqlvob32y0zv9","_id":"ckdwo515v003lqlvo9lrz972r"},{"post_id":"ckdwo51490016qlvo5f9u7w68","tag_id":"ckdwo513y000qqlvoc9h9bppx","_id":"ckdwo515w003nqlvo37w9f05w"},{"post_id":"ckdwo51490016qlvo5f9u7w68","tag_id":"ckdwo515m0036qlvofrht6dtz","_id":"ckdwo515y003sqlvo3xlca9ds"},{"post_id":"ckdwo514e001bqlvod3cv9xjb","tag_id":"ckdwo515q003eqlvo9kzf68o8","_id":"ckdwo5160003vqlvo6gxs0llf"},{"post_id":"ckdwo515s003iqlvoc6jwfyb4","tag_id":"ckdwo513o000gqlvob32y0zv9","_id":"ckdwo5163003yqlvoa8t98gcf"},{"post_id":"ckdwo515s003iqlvoc6jwfyb4","tag_id":"ckdwo513y000qqlvoc9h9bppx","_id":"ckdwo51660042qlvo4hr4cp7n"},{"post_id":"ckdwo5159002nqlvo2v8q0a9x","tag_id":"ckdwo515u003kqlvo94z4ett0","_id":"ckdwo51670045qlvod7s07nvk"},{"post_id":"ckdwo515b002pqlvo84irefhy","tag_id":"ckdwo515y003rqlvob4wb77di","_id":"ckdwo51690049qlvo6m4ugtpz"},{"post_id":"ckdwo515e002uqlvogjbn1qcp","tag_id":"ckdwo515u003kqlvo94z4ett0","_id":"ckdwo516a004cqlvo278m2tdg"},{"post_id":"ckdwo515z003tqlvo4k16f2cx","tag_id":"ckdwo51680047qlvo0jqz2fka","_id":"ckdwo516d004hqlvo76ozeiio"},{"post_id":"ckdwo5161003wqlvoewcx4abj","tag_id":"ckdwo51680047qlvo0jqz2fka","_id":"ckdwo516f004lqlvogzfjhfor"},{"post_id":"ckdwo516f004kqlvo5kq82a2d","tag_id":"ckdwo51680047qlvo0jqz2fka","_id":"ckdwo516h004nqlvo5dy83kxk"},{"post_id":"ckdwo5163003zqlvo72raahtl","tag_id":"ckdwo51680047qlvo0jqz2fka","_id":"ckdwo516h004oqlvo7sxz3u5c"}],"Tag":[{"name":"jpa, hibernate","_id":"ckdwo51350004qlvocs6u50mx"},{"name":"javascript","_id":"ckdwo513j000bqlvoe65047ai"},{"name":"java","_id":"ckdwo513o000gqlvob32y0zv9"},{"name":"spring","_id":"ckdwo513y000qqlvoc9h9bppx"},{"name":"hash","_id":"ckdwo5144000wqlvoh7hc1y59"},{"name":"pki","_id":"ckdwo51480013qlvof6uu5sez"},{"name":"certification","_id":"ckdwo514d001aqlvo3s25dait"},{"name":"key exchange","_id":"ckdwo514m001nqlvof0yu0946"},{"name":"digital signature","_id":"ckdwo514s001uqlvo4jpf14y1"},{"name":"key","_id":"ckdwo514w0021qlvo0zzcfig1"},{"name":"ssl","_id":"ckdwo515c002rqlvoa43gc1og"},{"name":"tls","_id":"ckdwo515f002wqlvohonpdf6r"},{"name":"https","_id":"ckdwo515i0031qlvocm6sh2fz"},{"name":"enableannotation","_id":"ckdwo515m0036qlvofrht6dtz"},{"name":"spring boot listener","_id":"ckdwo515q003eqlvo9kzf68o8"},{"name":"tcp","_id":"ckdwo515u003kqlvo94z4ett0"},{"name":"keyword","_id":"ckdwo515y003rqlvob4wb77di"},{"name":"springboot","_id":"ckdwo51680047qlvo0jqz2fka"}]}}